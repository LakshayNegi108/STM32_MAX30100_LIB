
MAX30100_LIB.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000071ec  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000069c  080072b0  080072b0  000172b0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800794c  0800794c  00020220  2**0
                  CONTENTS
  4 .ARM          00000000  0800794c  0800794c  00020220  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800794c  0800794c  00020220  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800794c  0800794c  0001794c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007950  08007950  00017950  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000220  20000000  08007954  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000184  20000220  08007b74  00020220  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200003a4  08007b74  000203a4  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020220  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000625c  00000000  00000000  00020248  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001d5f  00000000  00000000  000264a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000780  00000000  00000000  00028208  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000678  00000000  00000000  00028988  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001264b  00000000  00000000  00029000  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000a655  00000000  00000000  0003b64b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0005ff25  00000000  00000000  00045ca0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000a5bc5  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000029b4  00000000  00000000  000a5c18  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000220 	.word	0x20000220
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08007294 	.word	0x08007294

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000224 	.word	0x20000224
 8000104:	08007294 	.word	0x08007294

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	; 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			; (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	; 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	; 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			; (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			; (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f000 ff0d 	bl	800125c <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f000 fe5d 	bl	800110c <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f000 feff 	bl	800125c <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f000 fef5 	bl	800125c <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f000 fe85 	bl	8001190 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f000 fe7b 	bl	8001190 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			; (mov r8, r8)

080004a8 <__aeabi_dadd>:
 80004a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004aa:	464f      	mov	r7, r9
 80004ac:	4646      	mov	r6, r8
 80004ae:	46d6      	mov	lr, sl
 80004b0:	000d      	movs	r5, r1
 80004b2:	0004      	movs	r4, r0
 80004b4:	b5c0      	push	{r6, r7, lr}
 80004b6:	001f      	movs	r7, r3
 80004b8:	0011      	movs	r1, r2
 80004ba:	0328      	lsls	r0, r5, #12
 80004bc:	0f62      	lsrs	r2, r4, #29
 80004be:	0a40      	lsrs	r0, r0, #9
 80004c0:	4310      	orrs	r0, r2
 80004c2:	007a      	lsls	r2, r7, #1
 80004c4:	0d52      	lsrs	r2, r2, #21
 80004c6:	00e3      	lsls	r3, r4, #3
 80004c8:	033c      	lsls	r4, r7, #12
 80004ca:	4691      	mov	r9, r2
 80004cc:	0a64      	lsrs	r4, r4, #9
 80004ce:	0ffa      	lsrs	r2, r7, #31
 80004d0:	0f4f      	lsrs	r7, r1, #29
 80004d2:	006e      	lsls	r6, r5, #1
 80004d4:	4327      	orrs	r7, r4
 80004d6:	4692      	mov	sl, r2
 80004d8:	46b8      	mov	r8, r7
 80004da:	0d76      	lsrs	r6, r6, #21
 80004dc:	0fed      	lsrs	r5, r5, #31
 80004de:	00c9      	lsls	r1, r1, #3
 80004e0:	4295      	cmp	r5, r2
 80004e2:	d100      	bne.n	80004e6 <__aeabi_dadd+0x3e>
 80004e4:	e099      	b.n	800061a <__aeabi_dadd+0x172>
 80004e6:	464c      	mov	r4, r9
 80004e8:	1b34      	subs	r4, r6, r4
 80004ea:	46a4      	mov	ip, r4
 80004ec:	2c00      	cmp	r4, #0
 80004ee:	dc00      	bgt.n	80004f2 <__aeabi_dadd+0x4a>
 80004f0:	e07c      	b.n	80005ec <__aeabi_dadd+0x144>
 80004f2:	464a      	mov	r2, r9
 80004f4:	2a00      	cmp	r2, #0
 80004f6:	d100      	bne.n	80004fa <__aeabi_dadd+0x52>
 80004f8:	e0b8      	b.n	800066c <__aeabi_dadd+0x1c4>
 80004fa:	4ac5      	ldr	r2, [pc, #788]	; (8000810 <__aeabi_dadd+0x368>)
 80004fc:	4296      	cmp	r6, r2
 80004fe:	d100      	bne.n	8000502 <__aeabi_dadd+0x5a>
 8000500:	e11c      	b.n	800073c <__aeabi_dadd+0x294>
 8000502:	2280      	movs	r2, #128	; 0x80
 8000504:	003c      	movs	r4, r7
 8000506:	0412      	lsls	r2, r2, #16
 8000508:	4314      	orrs	r4, r2
 800050a:	46a0      	mov	r8, r4
 800050c:	4662      	mov	r2, ip
 800050e:	2a38      	cmp	r2, #56	; 0x38
 8000510:	dd00      	ble.n	8000514 <__aeabi_dadd+0x6c>
 8000512:	e161      	b.n	80007d8 <__aeabi_dadd+0x330>
 8000514:	2a1f      	cmp	r2, #31
 8000516:	dd00      	ble.n	800051a <__aeabi_dadd+0x72>
 8000518:	e1cc      	b.n	80008b4 <__aeabi_dadd+0x40c>
 800051a:	4664      	mov	r4, ip
 800051c:	2220      	movs	r2, #32
 800051e:	1b12      	subs	r2, r2, r4
 8000520:	4644      	mov	r4, r8
 8000522:	4094      	lsls	r4, r2
 8000524:	000f      	movs	r7, r1
 8000526:	46a1      	mov	r9, r4
 8000528:	4664      	mov	r4, ip
 800052a:	4091      	lsls	r1, r2
 800052c:	40e7      	lsrs	r7, r4
 800052e:	464c      	mov	r4, r9
 8000530:	1e4a      	subs	r2, r1, #1
 8000532:	4191      	sbcs	r1, r2
 8000534:	433c      	orrs	r4, r7
 8000536:	4642      	mov	r2, r8
 8000538:	4321      	orrs	r1, r4
 800053a:	4664      	mov	r4, ip
 800053c:	40e2      	lsrs	r2, r4
 800053e:	1a80      	subs	r0, r0, r2
 8000540:	1a5c      	subs	r4, r3, r1
 8000542:	42a3      	cmp	r3, r4
 8000544:	419b      	sbcs	r3, r3
 8000546:	425f      	negs	r7, r3
 8000548:	1bc7      	subs	r7, r0, r7
 800054a:	023b      	lsls	r3, r7, #8
 800054c:	d400      	bmi.n	8000550 <__aeabi_dadd+0xa8>
 800054e:	e0d0      	b.n	80006f2 <__aeabi_dadd+0x24a>
 8000550:	027f      	lsls	r7, r7, #9
 8000552:	0a7f      	lsrs	r7, r7, #9
 8000554:	2f00      	cmp	r7, #0
 8000556:	d100      	bne.n	800055a <__aeabi_dadd+0xb2>
 8000558:	e0ff      	b.n	800075a <__aeabi_dadd+0x2b2>
 800055a:	0038      	movs	r0, r7
 800055c:	f001 fd8a 	bl	8002074 <__clzsi2>
 8000560:	0001      	movs	r1, r0
 8000562:	3908      	subs	r1, #8
 8000564:	2320      	movs	r3, #32
 8000566:	0022      	movs	r2, r4
 8000568:	1a5b      	subs	r3, r3, r1
 800056a:	408f      	lsls	r7, r1
 800056c:	40da      	lsrs	r2, r3
 800056e:	408c      	lsls	r4, r1
 8000570:	4317      	orrs	r7, r2
 8000572:	42b1      	cmp	r1, r6
 8000574:	da00      	bge.n	8000578 <__aeabi_dadd+0xd0>
 8000576:	e0ff      	b.n	8000778 <__aeabi_dadd+0x2d0>
 8000578:	1b89      	subs	r1, r1, r6
 800057a:	1c4b      	adds	r3, r1, #1
 800057c:	2b1f      	cmp	r3, #31
 800057e:	dd00      	ble.n	8000582 <__aeabi_dadd+0xda>
 8000580:	e0a8      	b.n	80006d4 <__aeabi_dadd+0x22c>
 8000582:	2220      	movs	r2, #32
 8000584:	0039      	movs	r1, r7
 8000586:	1ad2      	subs	r2, r2, r3
 8000588:	0020      	movs	r0, r4
 800058a:	4094      	lsls	r4, r2
 800058c:	4091      	lsls	r1, r2
 800058e:	40d8      	lsrs	r0, r3
 8000590:	1e62      	subs	r2, r4, #1
 8000592:	4194      	sbcs	r4, r2
 8000594:	40df      	lsrs	r7, r3
 8000596:	2600      	movs	r6, #0
 8000598:	4301      	orrs	r1, r0
 800059a:	430c      	orrs	r4, r1
 800059c:	0763      	lsls	r3, r4, #29
 800059e:	d009      	beq.n	80005b4 <__aeabi_dadd+0x10c>
 80005a0:	230f      	movs	r3, #15
 80005a2:	4023      	ands	r3, r4
 80005a4:	2b04      	cmp	r3, #4
 80005a6:	d005      	beq.n	80005b4 <__aeabi_dadd+0x10c>
 80005a8:	1d23      	adds	r3, r4, #4
 80005aa:	42a3      	cmp	r3, r4
 80005ac:	41a4      	sbcs	r4, r4
 80005ae:	4264      	negs	r4, r4
 80005b0:	193f      	adds	r7, r7, r4
 80005b2:	001c      	movs	r4, r3
 80005b4:	023b      	lsls	r3, r7, #8
 80005b6:	d400      	bmi.n	80005ba <__aeabi_dadd+0x112>
 80005b8:	e09e      	b.n	80006f8 <__aeabi_dadd+0x250>
 80005ba:	4b95      	ldr	r3, [pc, #596]	; (8000810 <__aeabi_dadd+0x368>)
 80005bc:	3601      	adds	r6, #1
 80005be:	429e      	cmp	r6, r3
 80005c0:	d100      	bne.n	80005c4 <__aeabi_dadd+0x11c>
 80005c2:	e0b7      	b.n	8000734 <__aeabi_dadd+0x28c>
 80005c4:	4a93      	ldr	r2, [pc, #588]	; (8000814 <__aeabi_dadd+0x36c>)
 80005c6:	08e4      	lsrs	r4, r4, #3
 80005c8:	4017      	ands	r7, r2
 80005ca:	077b      	lsls	r3, r7, #29
 80005cc:	0571      	lsls	r1, r6, #21
 80005ce:	027f      	lsls	r7, r7, #9
 80005d0:	4323      	orrs	r3, r4
 80005d2:	0b3f      	lsrs	r7, r7, #12
 80005d4:	0d4a      	lsrs	r2, r1, #21
 80005d6:	0512      	lsls	r2, r2, #20
 80005d8:	433a      	orrs	r2, r7
 80005da:	07ed      	lsls	r5, r5, #31
 80005dc:	432a      	orrs	r2, r5
 80005de:	0018      	movs	r0, r3
 80005e0:	0011      	movs	r1, r2
 80005e2:	bce0      	pop	{r5, r6, r7}
 80005e4:	46ba      	mov	sl, r7
 80005e6:	46b1      	mov	r9, r6
 80005e8:	46a8      	mov	r8, r5
 80005ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80005ec:	2c00      	cmp	r4, #0
 80005ee:	d04b      	beq.n	8000688 <__aeabi_dadd+0x1e0>
 80005f0:	464c      	mov	r4, r9
 80005f2:	1ba4      	subs	r4, r4, r6
 80005f4:	46a4      	mov	ip, r4
 80005f6:	2e00      	cmp	r6, #0
 80005f8:	d000      	beq.n	80005fc <__aeabi_dadd+0x154>
 80005fa:	e123      	b.n	8000844 <__aeabi_dadd+0x39c>
 80005fc:	0004      	movs	r4, r0
 80005fe:	431c      	orrs	r4, r3
 8000600:	d100      	bne.n	8000604 <__aeabi_dadd+0x15c>
 8000602:	e1af      	b.n	8000964 <__aeabi_dadd+0x4bc>
 8000604:	4662      	mov	r2, ip
 8000606:	1e54      	subs	r4, r2, #1
 8000608:	2a01      	cmp	r2, #1
 800060a:	d100      	bne.n	800060e <__aeabi_dadd+0x166>
 800060c:	e215      	b.n	8000a3a <__aeabi_dadd+0x592>
 800060e:	4d80      	ldr	r5, [pc, #512]	; (8000810 <__aeabi_dadd+0x368>)
 8000610:	45ac      	cmp	ip, r5
 8000612:	d100      	bne.n	8000616 <__aeabi_dadd+0x16e>
 8000614:	e1c8      	b.n	80009a8 <__aeabi_dadd+0x500>
 8000616:	46a4      	mov	ip, r4
 8000618:	e11b      	b.n	8000852 <__aeabi_dadd+0x3aa>
 800061a:	464a      	mov	r2, r9
 800061c:	1ab2      	subs	r2, r6, r2
 800061e:	4694      	mov	ip, r2
 8000620:	2a00      	cmp	r2, #0
 8000622:	dc00      	bgt.n	8000626 <__aeabi_dadd+0x17e>
 8000624:	e0ac      	b.n	8000780 <__aeabi_dadd+0x2d8>
 8000626:	464a      	mov	r2, r9
 8000628:	2a00      	cmp	r2, #0
 800062a:	d043      	beq.n	80006b4 <__aeabi_dadd+0x20c>
 800062c:	4a78      	ldr	r2, [pc, #480]	; (8000810 <__aeabi_dadd+0x368>)
 800062e:	4296      	cmp	r6, r2
 8000630:	d100      	bne.n	8000634 <__aeabi_dadd+0x18c>
 8000632:	e1af      	b.n	8000994 <__aeabi_dadd+0x4ec>
 8000634:	2280      	movs	r2, #128	; 0x80
 8000636:	003c      	movs	r4, r7
 8000638:	0412      	lsls	r2, r2, #16
 800063a:	4314      	orrs	r4, r2
 800063c:	46a0      	mov	r8, r4
 800063e:	4662      	mov	r2, ip
 8000640:	2a38      	cmp	r2, #56	; 0x38
 8000642:	dc67      	bgt.n	8000714 <__aeabi_dadd+0x26c>
 8000644:	2a1f      	cmp	r2, #31
 8000646:	dc00      	bgt.n	800064a <__aeabi_dadd+0x1a2>
 8000648:	e15f      	b.n	800090a <__aeabi_dadd+0x462>
 800064a:	4647      	mov	r7, r8
 800064c:	3a20      	subs	r2, #32
 800064e:	40d7      	lsrs	r7, r2
 8000650:	4662      	mov	r2, ip
 8000652:	2a20      	cmp	r2, #32
 8000654:	d005      	beq.n	8000662 <__aeabi_dadd+0x1ba>
 8000656:	4664      	mov	r4, ip
 8000658:	2240      	movs	r2, #64	; 0x40
 800065a:	1b12      	subs	r2, r2, r4
 800065c:	4644      	mov	r4, r8
 800065e:	4094      	lsls	r4, r2
 8000660:	4321      	orrs	r1, r4
 8000662:	1e4a      	subs	r2, r1, #1
 8000664:	4191      	sbcs	r1, r2
 8000666:	000c      	movs	r4, r1
 8000668:	433c      	orrs	r4, r7
 800066a:	e057      	b.n	800071c <__aeabi_dadd+0x274>
 800066c:	003a      	movs	r2, r7
 800066e:	430a      	orrs	r2, r1
 8000670:	d100      	bne.n	8000674 <__aeabi_dadd+0x1cc>
 8000672:	e105      	b.n	8000880 <__aeabi_dadd+0x3d8>
 8000674:	0022      	movs	r2, r4
 8000676:	3a01      	subs	r2, #1
 8000678:	2c01      	cmp	r4, #1
 800067a:	d100      	bne.n	800067e <__aeabi_dadd+0x1d6>
 800067c:	e182      	b.n	8000984 <__aeabi_dadd+0x4dc>
 800067e:	4c64      	ldr	r4, [pc, #400]	; (8000810 <__aeabi_dadd+0x368>)
 8000680:	45a4      	cmp	ip, r4
 8000682:	d05b      	beq.n	800073c <__aeabi_dadd+0x294>
 8000684:	4694      	mov	ip, r2
 8000686:	e741      	b.n	800050c <__aeabi_dadd+0x64>
 8000688:	4c63      	ldr	r4, [pc, #396]	; (8000818 <__aeabi_dadd+0x370>)
 800068a:	1c77      	adds	r7, r6, #1
 800068c:	4227      	tst	r7, r4
 800068e:	d000      	beq.n	8000692 <__aeabi_dadd+0x1ea>
 8000690:	e0c4      	b.n	800081c <__aeabi_dadd+0x374>
 8000692:	0004      	movs	r4, r0
 8000694:	431c      	orrs	r4, r3
 8000696:	2e00      	cmp	r6, #0
 8000698:	d000      	beq.n	800069c <__aeabi_dadd+0x1f4>
 800069a:	e169      	b.n	8000970 <__aeabi_dadd+0x4c8>
 800069c:	2c00      	cmp	r4, #0
 800069e:	d100      	bne.n	80006a2 <__aeabi_dadd+0x1fa>
 80006a0:	e1bf      	b.n	8000a22 <__aeabi_dadd+0x57a>
 80006a2:	4644      	mov	r4, r8
 80006a4:	430c      	orrs	r4, r1
 80006a6:	d000      	beq.n	80006aa <__aeabi_dadd+0x202>
 80006a8:	e1d0      	b.n	8000a4c <__aeabi_dadd+0x5a4>
 80006aa:	0742      	lsls	r2, r0, #29
 80006ac:	08db      	lsrs	r3, r3, #3
 80006ae:	4313      	orrs	r3, r2
 80006b0:	08c0      	lsrs	r0, r0, #3
 80006b2:	e029      	b.n	8000708 <__aeabi_dadd+0x260>
 80006b4:	003a      	movs	r2, r7
 80006b6:	430a      	orrs	r2, r1
 80006b8:	d100      	bne.n	80006bc <__aeabi_dadd+0x214>
 80006ba:	e170      	b.n	800099e <__aeabi_dadd+0x4f6>
 80006bc:	4662      	mov	r2, ip
 80006be:	4664      	mov	r4, ip
 80006c0:	3a01      	subs	r2, #1
 80006c2:	2c01      	cmp	r4, #1
 80006c4:	d100      	bne.n	80006c8 <__aeabi_dadd+0x220>
 80006c6:	e0e0      	b.n	800088a <__aeabi_dadd+0x3e2>
 80006c8:	4c51      	ldr	r4, [pc, #324]	; (8000810 <__aeabi_dadd+0x368>)
 80006ca:	45a4      	cmp	ip, r4
 80006cc:	d100      	bne.n	80006d0 <__aeabi_dadd+0x228>
 80006ce:	e161      	b.n	8000994 <__aeabi_dadd+0x4ec>
 80006d0:	4694      	mov	ip, r2
 80006d2:	e7b4      	b.n	800063e <__aeabi_dadd+0x196>
 80006d4:	003a      	movs	r2, r7
 80006d6:	391f      	subs	r1, #31
 80006d8:	40ca      	lsrs	r2, r1
 80006da:	0011      	movs	r1, r2
 80006dc:	2b20      	cmp	r3, #32
 80006de:	d003      	beq.n	80006e8 <__aeabi_dadd+0x240>
 80006e0:	2240      	movs	r2, #64	; 0x40
 80006e2:	1ad3      	subs	r3, r2, r3
 80006e4:	409f      	lsls	r7, r3
 80006e6:	433c      	orrs	r4, r7
 80006e8:	1e63      	subs	r3, r4, #1
 80006ea:	419c      	sbcs	r4, r3
 80006ec:	2700      	movs	r7, #0
 80006ee:	2600      	movs	r6, #0
 80006f0:	430c      	orrs	r4, r1
 80006f2:	0763      	lsls	r3, r4, #29
 80006f4:	d000      	beq.n	80006f8 <__aeabi_dadd+0x250>
 80006f6:	e753      	b.n	80005a0 <__aeabi_dadd+0xf8>
 80006f8:	46b4      	mov	ip, r6
 80006fa:	08e4      	lsrs	r4, r4, #3
 80006fc:	077b      	lsls	r3, r7, #29
 80006fe:	4323      	orrs	r3, r4
 8000700:	08f8      	lsrs	r0, r7, #3
 8000702:	4a43      	ldr	r2, [pc, #268]	; (8000810 <__aeabi_dadd+0x368>)
 8000704:	4594      	cmp	ip, r2
 8000706:	d01d      	beq.n	8000744 <__aeabi_dadd+0x29c>
 8000708:	4662      	mov	r2, ip
 800070a:	0307      	lsls	r7, r0, #12
 800070c:	0552      	lsls	r2, r2, #21
 800070e:	0b3f      	lsrs	r7, r7, #12
 8000710:	0d52      	lsrs	r2, r2, #21
 8000712:	e760      	b.n	80005d6 <__aeabi_dadd+0x12e>
 8000714:	4644      	mov	r4, r8
 8000716:	430c      	orrs	r4, r1
 8000718:	1e62      	subs	r2, r4, #1
 800071a:	4194      	sbcs	r4, r2
 800071c:	18e4      	adds	r4, r4, r3
 800071e:	429c      	cmp	r4, r3
 8000720:	419b      	sbcs	r3, r3
 8000722:	425f      	negs	r7, r3
 8000724:	183f      	adds	r7, r7, r0
 8000726:	023b      	lsls	r3, r7, #8
 8000728:	d5e3      	bpl.n	80006f2 <__aeabi_dadd+0x24a>
 800072a:	4b39      	ldr	r3, [pc, #228]	; (8000810 <__aeabi_dadd+0x368>)
 800072c:	3601      	adds	r6, #1
 800072e:	429e      	cmp	r6, r3
 8000730:	d000      	beq.n	8000734 <__aeabi_dadd+0x28c>
 8000732:	e0b5      	b.n	80008a0 <__aeabi_dadd+0x3f8>
 8000734:	0032      	movs	r2, r6
 8000736:	2700      	movs	r7, #0
 8000738:	2300      	movs	r3, #0
 800073a:	e74c      	b.n	80005d6 <__aeabi_dadd+0x12e>
 800073c:	0742      	lsls	r2, r0, #29
 800073e:	08db      	lsrs	r3, r3, #3
 8000740:	4313      	orrs	r3, r2
 8000742:	08c0      	lsrs	r0, r0, #3
 8000744:	001a      	movs	r2, r3
 8000746:	4302      	orrs	r2, r0
 8000748:	d100      	bne.n	800074c <__aeabi_dadd+0x2a4>
 800074a:	e1e1      	b.n	8000b10 <__aeabi_dadd+0x668>
 800074c:	2780      	movs	r7, #128	; 0x80
 800074e:	033f      	lsls	r7, r7, #12
 8000750:	4307      	orrs	r7, r0
 8000752:	033f      	lsls	r7, r7, #12
 8000754:	4a2e      	ldr	r2, [pc, #184]	; (8000810 <__aeabi_dadd+0x368>)
 8000756:	0b3f      	lsrs	r7, r7, #12
 8000758:	e73d      	b.n	80005d6 <__aeabi_dadd+0x12e>
 800075a:	0020      	movs	r0, r4
 800075c:	f001 fc8a 	bl	8002074 <__clzsi2>
 8000760:	0001      	movs	r1, r0
 8000762:	3118      	adds	r1, #24
 8000764:	291f      	cmp	r1, #31
 8000766:	dc00      	bgt.n	800076a <__aeabi_dadd+0x2c2>
 8000768:	e6fc      	b.n	8000564 <__aeabi_dadd+0xbc>
 800076a:	3808      	subs	r0, #8
 800076c:	4084      	lsls	r4, r0
 800076e:	0027      	movs	r7, r4
 8000770:	2400      	movs	r4, #0
 8000772:	42b1      	cmp	r1, r6
 8000774:	db00      	blt.n	8000778 <__aeabi_dadd+0x2d0>
 8000776:	e6ff      	b.n	8000578 <__aeabi_dadd+0xd0>
 8000778:	4a26      	ldr	r2, [pc, #152]	; (8000814 <__aeabi_dadd+0x36c>)
 800077a:	1a76      	subs	r6, r6, r1
 800077c:	4017      	ands	r7, r2
 800077e:	e70d      	b.n	800059c <__aeabi_dadd+0xf4>
 8000780:	2a00      	cmp	r2, #0
 8000782:	d02f      	beq.n	80007e4 <__aeabi_dadd+0x33c>
 8000784:	464a      	mov	r2, r9
 8000786:	1b92      	subs	r2, r2, r6
 8000788:	4694      	mov	ip, r2
 800078a:	2e00      	cmp	r6, #0
 800078c:	d100      	bne.n	8000790 <__aeabi_dadd+0x2e8>
 800078e:	e0ad      	b.n	80008ec <__aeabi_dadd+0x444>
 8000790:	4a1f      	ldr	r2, [pc, #124]	; (8000810 <__aeabi_dadd+0x368>)
 8000792:	4591      	cmp	r9, r2
 8000794:	d100      	bne.n	8000798 <__aeabi_dadd+0x2f0>
 8000796:	e10f      	b.n	80009b8 <__aeabi_dadd+0x510>
 8000798:	2280      	movs	r2, #128	; 0x80
 800079a:	0412      	lsls	r2, r2, #16
 800079c:	4310      	orrs	r0, r2
 800079e:	4662      	mov	r2, ip
 80007a0:	2a38      	cmp	r2, #56	; 0x38
 80007a2:	dd00      	ble.n	80007a6 <__aeabi_dadd+0x2fe>
 80007a4:	e10f      	b.n	80009c6 <__aeabi_dadd+0x51e>
 80007a6:	2a1f      	cmp	r2, #31
 80007a8:	dd00      	ble.n	80007ac <__aeabi_dadd+0x304>
 80007aa:	e180      	b.n	8000aae <__aeabi_dadd+0x606>
 80007ac:	4664      	mov	r4, ip
 80007ae:	2220      	movs	r2, #32
 80007b0:	001e      	movs	r6, r3
 80007b2:	1b12      	subs	r2, r2, r4
 80007b4:	4667      	mov	r7, ip
 80007b6:	0004      	movs	r4, r0
 80007b8:	4093      	lsls	r3, r2
 80007ba:	4094      	lsls	r4, r2
 80007bc:	40fe      	lsrs	r6, r7
 80007be:	1e5a      	subs	r2, r3, #1
 80007c0:	4193      	sbcs	r3, r2
 80007c2:	40f8      	lsrs	r0, r7
 80007c4:	4334      	orrs	r4, r6
 80007c6:	431c      	orrs	r4, r3
 80007c8:	4480      	add	r8, r0
 80007ca:	1864      	adds	r4, r4, r1
 80007cc:	428c      	cmp	r4, r1
 80007ce:	41bf      	sbcs	r7, r7
 80007d0:	427f      	negs	r7, r7
 80007d2:	464e      	mov	r6, r9
 80007d4:	4447      	add	r7, r8
 80007d6:	e7a6      	b.n	8000726 <__aeabi_dadd+0x27e>
 80007d8:	4642      	mov	r2, r8
 80007da:	430a      	orrs	r2, r1
 80007dc:	0011      	movs	r1, r2
 80007de:	1e4a      	subs	r2, r1, #1
 80007e0:	4191      	sbcs	r1, r2
 80007e2:	e6ad      	b.n	8000540 <__aeabi_dadd+0x98>
 80007e4:	4c0c      	ldr	r4, [pc, #48]	; (8000818 <__aeabi_dadd+0x370>)
 80007e6:	1c72      	adds	r2, r6, #1
 80007e8:	4222      	tst	r2, r4
 80007ea:	d000      	beq.n	80007ee <__aeabi_dadd+0x346>
 80007ec:	e0a1      	b.n	8000932 <__aeabi_dadd+0x48a>
 80007ee:	0002      	movs	r2, r0
 80007f0:	431a      	orrs	r2, r3
 80007f2:	2e00      	cmp	r6, #0
 80007f4:	d000      	beq.n	80007f8 <__aeabi_dadd+0x350>
 80007f6:	e0fa      	b.n	80009ee <__aeabi_dadd+0x546>
 80007f8:	2a00      	cmp	r2, #0
 80007fa:	d100      	bne.n	80007fe <__aeabi_dadd+0x356>
 80007fc:	e145      	b.n	8000a8a <__aeabi_dadd+0x5e2>
 80007fe:	003a      	movs	r2, r7
 8000800:	430a      	orrs	r2, r1
 8000802:	d000      	beq.n	8000806 <__aeabi_dadd+0x35e>
 8000804:	e146      	b.n	8000a94 <__aeabi_dadd+0x5ec>
 8000806:	0742      	lsls	r2, r0, #29
 8000808:	08db      	lsrs	r3, r3, #3
 800080a:	4313      	orrs	r3, r2
 800080c:	08c0      	lsrs	r0, r0, #3
 800080e:	e77b      	b.n	8000708 <__aeabi_dadd+0x260>
 8000810:	000007ff 	.word	0x000007ff
 8000814:	ff7fffff 	.word	0xff7fffff
 8000818:	000007fe 	.word	0x000007fe
 800081c:	4647      	mov	r7, r8
 800081e:	1a5c      	subs	r4, r3, r1
 8000820:	1bc2      	subs	r2, r0, r7
 8000822:	42a3      	cmp	r3, r4
 8000824:	41bf      	sbcs	r7, r7
 8000826:	427f      	negs	r7, r7
 8000828:	46b9      	mov	r9, r7
 800082a:	0017      	movs	r7, r2
 800082c:	464a      	mov	r2, r9
 800082e:	1abf      	subs	r7, r7, r2
 8000830:	023a      	lsls	r2, r7, #8
 8000832:	d500      	bpl.n	8000836 <__aeabi_dadd+0x38e>
 8000834:	e08d      	b.n	8000952 <__aeabi_dadd+0x4aa>
 8000836:	0023      	movs	r3, r4
 8000838:	433b      	orrs	r3, r7
 800083a:	d000      	beq.n	800083e <__aeabi_dadd+0x396>
 800083c:	e68a      	b.n	8000554 <__aeabi_dadd+0xac>
 800083e:	2000      	movs	r0, #0
 8000840:	2500      	movs	r5, #0
 8000842:	e761      	b.n	8000708 <__aeabi_dadd+0x260>
 8000844:	4cb4      	ldr	r4, [pc, #720]	; (8000b18 <__aeabi_dadd+0x670>)
 8000846:	45a1      	cmp	r9, r4
 8000848:	d100      	bne.n	800084c <__aeabi_dadd+0x3a4>
 800084a:	e0ad      	b.n	80009a8 <__aeabi_dadd+0x500>
 800084c:	2480      	movs	r4, #128	; 0x80
 800084e:	0424      	lsls	r4, r4, #16
 8000850:	4320      	orrs	r0, r4
 8000852:	4664      	mov	r4, ip
 8000854:	2c38      	cmp	r4, #56	; 0x38
 8000856:	dc3d      	bgt.n	80008d4 <__aeabi_dadd+0x42c>
 8000858:	4662      	mov	r2, ip
 800085a:	2c1f      	cmp	r4, #31
 800085c:	dd00      	ble.n	8000860 <__aeabi_dadd+0x3b8>
 800085e:	e0b7      	b.n	80009d0 <__aeabi_dadd+0x528>
 8000860:	2520      	movs	r5, #32
 8000862:	001e      	movs	r6, r3
 8000864:	1b2d      	subs	r5, r5, r4
 8000866:	0004      	movs	r4, r0
 8000868:	40ab      	lsls	r3, r5
 800086a:	40ac      	lsls	r4, r5
 800086c:	40d6      	lsrs	r6, r2
 800086e:	40d0      	lsrs	r0, r2
 8000870:	4642      	mov	r2, r8
 8000872:	1e5d      	subs	r5, r3, #1
 8000874:	41ab      	sbcs	r3, r5
 8000876:	4334      	orrs	r4, r6
 8000878:	1a12      	subs	r2, r2, r0
 800087a:	4690      	mov	r8, r2
 800087c:	4323      	orrs	r3, r4
 800087e:	e02c      	b.n	80008da <__aeabi_dadd+0x432>
 8000880:	0742      	lsls	r2, r0, #29
 8000882:	08db      	lsrs	r3, r3, #3
 8000884:	4313      	orrs	r3, r2
 8000886:	08c0      	lsrs	r0, r0, #3
 8000888:	e73b      	b.n	8000702 <__aeabi_dadd+0x25a>
 800088a:	185c      	adds	r4, r3, r1
 800088c:	429c      	cmp	r4, r3
 800088e:	419b      	sbcs	r3, r3
 8000890:	4440      	add	r0, r8
 8000892:	425b      	negs	r3, r3
 8000894:	18c7      	adds	r7, r0, r3
 8000896:	2601      	movs	r6, #1
 8000898:	023b      	lsls	r3, r7, #8
 800089a:	d400      	bmi.n	800089e <__aeabi_dadd+0x3f6>
 800089c:	e729      	b.n	80006f2 <__aeabi_dadd+0x24a>
 800089e:	2602      	movs	r6, #2
 80008a0:	4a9e      	ldr	r2, [pc, #632]	; (8000b1c <__aeabi_dadd+0x674>)
 80008a2:	0863      	lsrs	r3, r4, #1
 80008a4:	4017      	ands	r7, r2
 80008a6:	2201      	movs	r2, #1
 80008a8:	4014      	ands	r4, r2
 80008aa:	431c      	orrs	r4, r3
 80008ac:	07fb      	lsls	r3, r7, #31
 80008ae:	431c      	orrs	r4, r3
 80008b0:	087f      	lsrs	r7, r7, #1
 80008b2:	e673      	b.n	800059c <__aeabi_dadd+0xf4>
 80008b4:	4644      	mov	r4, r8
 80008b6:	3a20      	subs	r2, #32
 80008b8:	40d4      	lsrs	r4, r2
 80008ba:	4662      	mov	r2, ip
 80008bc:	2a20      	cmp	r2, #32
 80008be:	d005      	beq.n	80008cc <__aeabi_dadd+0x424>
 80008c0:	4667      	mov	r7, ip
 80008c2:	2240      	movs	r2, #64	; 0x40
 80008c4:	1bd2      	subs	r2, r2, r7
 80008c6:	4647      	mov	r7, r8
 80008c8:	4097      	lsls	r7, r2
 80008ca:	4339      	orrs	r1, r7
 80008cc:	1e4a      	subs	r2, r1, #1
 80008ce:	4191      	sbcs	r1, r2
 80008d0:	4321      	orrs	r1, r4
 80008d2:	e635      	b.n	8000540 <__aeabi_dadd+0x98>
 80008d4:	4303      	orrs	r3, r0
 80008d6:	1e58      	subs	r0, r3, #1
 80008d8:	4183      	sbcs	r3, r0
 80008da:	1acc      	subs	r4, r1, r3
 80008dc:	42a1      	cmp	r1, r4
 80008de:	41bf      	sbcs	r7, r7
 80008e0:	4643      	mov	r3, r8
 80008e2:	427f      	negs	r7, r7
 80008e4:	4655      	mov	r5, sl
 80008e6:	464e      	mov	r6, r9
 80008e8:	1bdf      	subs	r7, r3, r7
 80008ea:	e62e      	b.n	800054a <__aeabi_dadd+0xa2>
 80008ec:	0002      	movs	r2, r0
 80008ee:	431a      	orrs	r2, r3
 80008f0:	d100      	bne.n	80008f4 <__aeabi_dadd+0x44c>
 80008f2:	e0bd      	b.n	8000a70 <__aeabi_dadd+0x5c8>
 80008f4:	4662      	mov	r2, ip
 80008f6:	4664      	mov	r4, ip
 80008f8:	3a01      	subs	r2, #1
 80008fa:	2c01      	cmp	r4, #1
 80008fc:	d100      	bne.n	8000900 <__aeabi_dadd+0x458>
 80008fe:	e0e5      	b.n	8000acc <__aeabi_dadd+0x624>
 8000900:	4c85      	ldr	r4, [pc, #532]	; (8000b18 <__aeabi_dadd+0x670>)
 8000902:	45a4      	cmp	ip, r4
 8000904:	d058      	beq.n	80009b8 <__aeabi_dadd+0x510>
 8000906:	4694      	mov	ip, r2
 8000908:	e749      	b.n	800079e <__aeabi_dadd+0x2f6>
 800090a:	4664      	mov	r4, ip
 800090c:	2220      	movs	r2, #32
 800090e:	1b12      	subs	r2, r2, r4
 8000910:	4644      	mov	r4, r8
 8000912:	4094      	lsls	r4, r2
 8000914:	000f      	movs	r7, r1
 8000916:	46a1      	mov	r9, r4
 8000918:	4664      	mov	r4, ip
 800091a:	4091      	lsls	r1, r2
 800091c:	40e7      	lsrs	r7, r4
 800091e:	464c      	mov	r4, r9
 8000920:	1e4a      	subs	r2, r1, #1
 8000922:	4191      	sbcs	r1, r2
 8000924:	433c      	orrs	r4, r7
 8000926:	4642      	mov	r2, r8
 8000928:	430c      	orrs	r4, r1
 800092a:	4661      	mov	r1, ip
 800092c:	40ca      	lsrs	r2, r1
 800092e:	1880      	adds	r0, r0, r2
 8000930:	e6f4      	b.n	800071c <__aeabi_dadd+0x274>
 8000932:	4c79      	ldr	r4, [pc, #484]	; (8000b18 <__aeabi_dadd+0x670>)
 8000934:	42a2      	cmp	r2, r4
 8000936:	d100      	bne.n	800093a <__aeabi_dadd+0x492>
 8000938:	e6fd      	b.n	8000736 <__aeabi_dadd+0x28e>
 800093a:	1859      	adds	r1, r3, r1
 800093c:	4299      	cmp	r1, r3
 800093e:	419b      	sbcs	r3, r3
 8000940:	4440      	add	r0, r8
 8000942:	425f      	negs	r7, r3
 8000944:	19c7      	adds	r7, r0, r7
 8000946:	07fc      	lsls	r4, r7, #31
 8000948:	0849      	lsrs	r1, r1, #1
 800094a:	0016      	movs	r6, r2
 800094c:	430c      	orrs	r4, r1
 800094e:	087f      	lsrs	r7, r7, #1
 8000950:	e6cf      	b.n	80006f2 <__aeabi_dadd+0x24a>
 8000952:	1acc      	subs	r4, r1, r3
 8000954:	42a1      	cmp	r1, r4
 8000956:	41bf      	sbcs	r7, r7
 8000958:	4643      	mov	r3, r8
 800095a:	427f      	negs	r7, r7
 800095c:	1a18      	subs	r0, r3, r0
 800095e:	4655      	mov	r5, sl
 8000960:	1bc7      	subs	r7, r0, r7
 8000962:	e5f7      	b.n	8000554 <__aeabi_dadd+0xac>
 8000964:	08c9      	lsrs	r1, r1, #3
 8000966:	077b      	lsls	r3, r7, #29
 8000968:	4655      	mov	r5, sl
 800096a:	430b      	orrs	r3, r1
 800096c:	08f8      	lsrs	r0, r7, #3
 800096e:	e6c8      	b.n	8000702 <__aeabi_dadd+0x25a>
 8000970:	2c00      	cmp	r4, #0
 8000972:	d000      	beq.n	8000976 <__aeabi_dadd+0x4ce>
 8000974:	e081      	b.n	8000a7a <__aeabi_dadd+0x5d2>
 8000976:	4643      	mov	r3, r8
 8000978:	430b      	orrs	r3, r1
 800097a:	d115      	bne.n	80009a8 <__aeabi_dadd+0x500>
 800097c:	2080      	movs	r0, #128	; 0x80
 800097e:	2500      	movs	r5, #0
 8000980:	0300      	lsls	r0, r0, #12
 8000982:	e6e3      	b.n	800074c <__aeabi_dadd+0x2a4>
 8000984:	1a5c      	subs	r4, r3, r1
 8000986:	42a3      	cmp	r3, r4
 8000988:	419b      	sbcs	r3, r3
 800098a:	1bc7      	subs	r7, r0, r7
 800098c:	425b      	negs	r3, r3
 800098e:	2601      	movs	r6, #1
 8000990:	1aff      	subs	r7, r7, r3
 8000992:	e5da      	b.n	800054a <__aeabi_dadd+0xa2>
 8000994:	0742      	lsls	r2, r0, #29
 8000996:	08db      	lsrs	r3, r3, #3
 8000998:	4313      	orrs	r3, r2
 800099a:	08c0      	lsrs	r0, r0, #3
 800099c:	e6d2      	b.n	8000744 <__aeabi_dadd+0x29c>
 800099e:	0742      	lsls	r2, r0, #29
 80009a0:	08db      	lsrs	r3, r3, #3
 80009a2:	4313      	orrs	r3, r2
 80009a4:	08c0      	lsrs	r0, r0, #3
 80009a6:	e6ac      	b.n	8000702 <__aeabi_dadd+0x25a>
 80009a8:	4643      	mov	r3, r8
 80009aa:	4642      	mov	r2, r8
 80009ac:	08c9      	lsrs	r1, r1, #3
 80009ae:	075b      	lsls	r3, r3, #29
 80009b0:	4655      	mov	r5, sl
 80009b2:	430b      	orrs	r3, r1
 80009b4:	08d0      	lsrs	r0, r2, #3
 80009b6:	e6c5      	b.n	8000744 <__aeabi_dadd+0x29c>
 80009b8:	4643      	mov	r3, r8
 80009ba:	4642      	mov	r2, r8
 80009bc:	075b      	lsls	r3, r3, #29
 80009be:	08c9      	lsrs	r1, r1, #3
 80009c0:	430b      	orrs	r3, r1
 80009c2:	08d0      	lsrs	r0, r2, #3
 80009c4:	e6be      	b.n	8000744 <__aeabi_dadd+0x29c>
 80009c6:	4303      	orrs	r3, r0
 80009c8:	001c      	movs	r4, r3
 80009ca:	1e63      	subs	r3, r4, #1
 80009cc:	419c      	sbcs	r4, r3
 80009ce:	e6fc      	b.n	80007ca <__aeabi_dadd+0x322>
 80009d0:	0002      	movs	r2, r0
 80009d2:	3c20      	subs	r4, #32
 80009d4:	40e2      	lsrs	r2, r4
 80009d6:	0014      	movs	r4, r2
 80009d8:	4662      	mov	r2, ip
 80009da:	2a20      	cmp	r2, #32
 80009dc:	d003      	beq.n	80009e6 <__aeabi_dadd+0x53e>
 80009de:	2540      	movs	r5, #64	; 0x40
 80009e0:	1aad      	subs	r5, r5, r2
 80009e2:	40a8      	lsls	r0, r5
 80009e4:	4303      	orrs	r3, r0
 80009e6:	1e58      	subs	r0, r3, #1
 80009e8:	4183      	sbcs	r3, r0
 80009ea:	4323      	orrs	r3, r4
 80009ec:	e775      	b.n	80008da <__aeabi_dadd+0x432>
 80009ee:	2a00      	cmp	r2, #0
 80009f0:	d0e2      	beq.n	80009b8 <__aeabi_dadd+0x510>
 80009f2:	003a      	movs	r2, r7
 80009f4:	430a      	orrs	r2, r1
 80009f6:	d0cd      	beq.n	8000994 <__aeabi_dadd+0x4ec>
 80009f8:	0742      	lsls	r2, r0, #29
 80009fa:	08db      	lsrs	r3, r3, #3
 80009fc:	4313      	orrs	r3, r2
 80009fe:	2280      	movs	r2, #128	; 0x80
 8000a00:	08c0      	lsrs	r0, r0, #3
 8000a02:	0312      	lsls	r2, r2, #12
 8000a04:	4210      	tst	r0, r2
 8000a06:	d006      	beq.n	8000a16 <__aeabi_dadd+0x56e>
 8000a08:	08fc      	lsrs	r4, r7, #3
 8000a0a:	4214      	tst	r4, r2
 8000a0c:	d103      	bne.n	8000a16 <__aeabi_dadd+0x56e>
 8000a0e:	0020      	movs	r0, r4
 8000a10:	08cb      	lsrs	r3, r1, #3
 8000a12:	077a      	lsls	r2, r7, #29
 8000a14:	4313      	orrs	r3, r2
 8000a16:	0f5a      	lsrs	r2, r3, #29
 8000a18:	00db      	lsls	r3, r3, #3
 8000a1a:	0752      	lsls	r2, r2, #29
 8000a1c:	08db      	lsrs	r3, r3, #3
 8000a1e:	4313      	orrs	r3, r2
 8000a20:	e690      	b.n	8000744 <__aeabi_dadd+0x29c>
 8000a22:	4643      	mov	r3, r8
 8000a24:	430b      	orrs	r3, r1
 8000a26:	d100      	bne.n	8000a2a <__aeabi_dadd+0x582>
 8000a28:	e709      	b.n	800083e <__aeabi_dadd+0x396>
 8000a2a:	4643      	mov	r3, r8
 8000a2c:	4642      	mov	r2, r8
 8000a2e:	08c9      	lsrs	r1, r1, #3
 8000a30:	075b      	lsls	r3, r3, #29
 8000a32:	4655      	mov	r5, sl
 8000a34:	430b      	orrs	r3, r1
 8000a36:	08d0      	lsrs	r0, r2, #3
 8000a38:	e666      	b.n	8000708 <__aeabi_dadd+0x260>
 8000a3a:	1acc      	subs	r4, r1, r3
 8000a3c:	42a1      	cmp	r1, r4
 8000a3e:	4189      	sbcs	r1, r1
 8000a40:	1a3f      	subs	r7, r7, r0
 8000a42:	4249      	negs	r1, r1
 8000a44:	4655      	mov	r5, sl
 8000a46:	2601      	movs	r6, #1
 8000a48:	1a7f      	subs	r7, r7, r1
 8000a4a:	e57e      	b.n	800054a <__aeabi_dadd+0xa2>
 8000a4c:	4642      	mov	r2, r8
 8000a4e:	1a5c      	subs	r4, r3, r1
 8000a50:	1a87      	subs	r7, r0, r2
 8000a52:	42a3      	cmp	r3, r4
 8000a54:	4192      	sbcs	r2, r2
 8000a56:	4252      	negs	r2, r2
 8000a58:	1abf      	subs	r7, r7, r2
 8000a5a:	023a      	lsls	r2, r7, #8
 8000a5c:	d53d      	bpl.n	8000ada <__aeabi_dadd+0x632>
 8000a5e:	1acc      	subs	r4, r1, r3
 8000a60:	42a1      	cmp	r1, r4
 8000a62:	4189      	sbcs	r1, r1
 8000a64:	4643      	mov	r3, r8
 8000a66:	4249      	negs	r1, r1
 8000a68:	1a1f      	subs	r7, r3, r0
 8000a6a:	4655      	mov	r5, sl
 8000a6c:	1a7f      	subs	r7, r7, r1
 8000a6e:	e595      	b.n	800059c <__aeabi_dadd+0xf4>
 8000a70:	077b      	lsls	r3, r7, #29
 8000a72:	08c9      	lsrs	r1, r1, #3
 8000a74:	430b      	orrs	r3, r1
 8000a76:	08f8      	lsrs	r0, r7, #3
 8000a78:	e643      	b.n	8000702 <__aeabi_dadd+0x25a>
 8000a7a:	4644      	mov	r4, r8
 8000a7c:	08db      	lsrs	r3, r3, #3
 8000a7e:	430c      	orrs	r4, r1
 8000a80:	d130      	bne.n	8000ae4 <__aeabi_dadd+0x63c>
 8000a82:	0742      	lsls	r2, r0, #29
 8000a84:	4313      	orrs	r3, r2
 8000a86:	08c0      	lsrs	r0, r0, #3
 8000a88:	e65c      	b.n	8000744 <__aeabi_dadd+0x29c>
 8000a8a:	077b      	lsls	r3, r7, #29
 8000a8c:	08c9      	lsrs	r1, r1, #3
 8000a8e:	430b      	orrs	r3, r1
 8000a90:	08f8      	lsrs	r0, r7, #3
 8000a92:	e639      	b.n	8000708 <__aeabi_dadd+0x260>
 8000a94:	185c      	adds	r4, r3, r1
 8000a96:	429c      	cmp	r4, r3
 8000a98:	419b      	sbcs	r3, r3
 8000a9a:	4440      	add	r0, r8
 8000a9c:	425b      	negs	r3, r3
 8000a9e:	18c7      	adds	r7, r0, r3
 8000aa0:	023b      	lsls	r3, r7, #8
 8000aa2:	d400      	bmi.n	8000aa6 <__aeabi_dadd+0x5fe>
 8000aa4:	e625      	b.n	80006f2 <__aeabi_dadd+0x24a>
 8000aa6:	4b1d      	ldr	r3, [pc, #116]	; (8000b1c <__aeabi_dadd+0x674>)
 8000aa8:	2601      	movs	r6, #1
 8000aaa:	401f      	ands	r7, r3
 8000aac:	e621      	b.n	80006f2 <__aeabi_dadd+0x24a>
 8000aae:	0004      	movs	r4, r0
 8000ab0:	3a20      	subs	r2, #32
 8000ab2:	40d4      	lsrs	r4, r2
 8000ab4:	4662      	mov	r2, ip
 8000ab6:	2a20      	cmp	r2, #32
 8000ab8:	d004      	beq.n	8000ac4 <__aeabi_dadd+0x61c>
 8000aba:	2240      	movs	r2, #64	; 0x40
 8000abc:	4666      	mov	r6, ip
 8000abe:	1b92      	subs	r2, r2, r6
 8000ac0:	4090      	lsls	r0, r2
 8000ac2:	4303      	orrs	r3, r0
 8000ac4:	1e5a      	subs	r2, r3, #1
 8000ac6:	4193      	sbcs	r3, r2
 8000ac8:	431c      	orrs	r4, r3
 8000aca:	e67e      	b.n	80007ca <__aeabi_dadd+0x322>
 8000acc:	185c      	adds	r4, r3, r1
 8000ace:	428c      	cmp	r4, r1
 8000ad0:	4189      	sbcs	r1, r1
 8000ad2:	4440      	add	r0, r8
 8000ad4:	4249      	negs	r1, r1
 8000ad6:	1847      	adds	r7, r0, r1
 8000ad8:	e6dd      	b.n	8000896 <__aeabi_dadd+0x3ee>
 8000ada:	0023      	movs	r3, r4
 8000adc:	433b      	orrs	r3, r7
 8000ade:	d100      	bne.n	8000ae2 <__aeabi_dadd+0x63a>
 8000ae0:	e6ad      	b.n	800083e <__aeabi_dadd+0x396>
 8000ae2:	e606      	b.n	80006f2 <__aeabi_dadd+0x24a>
 8000ae4:	0744      	lsls	r4, r0, #29
 8000ae6:	4323      	orrs	r3, r4
 8000ae8:	2480      	movs	r4, #128	; 0x80
 8000aea:	08c0      	lsrs	r0, r0, #3
 8000aec:	0324      	lsls	r4, r4, #12
 8000aee:	4220      	tst	r0, r4
 8000af0:	d008      	beq.n	8000b04 <__aeabi_dadd+0x65c>
 8000af2:	4642      	mov	r2, r8
 8000af4:	08d6      	lsrs	r6, r2, #3
 8000af6:	4226      	tst	r6, r4
 8000af8:	d104      	bne.n	8000b04 <__aeabi_dadd+0x65c>
 8000afa:	4655      	mov	r5, sl
 8000afc:	0030      	movs	r0, r6
 8000afe:	08cb      	lsrs	r3, r1, #3
 8000b00:	0751      	lsls	r1, r2, #29
 8000b02:	430b      	orrs	r3, r1
 8000b04:	0f5a      	lsrs	r2, r3, #29
 8000b06:	00db      	lsls	r3, r3, #3
 8000b08:	08db      	lsrs	r3, r3, #3
 8000b0a:	0752      	lsls	r2, r2, #29
 8000b0c:	4313      	orrs	r3, r2
 8000b0e:	e619      	b.n	8000744 <__aeabi_dadd+0x29c>
 8000b10:	2300      	movs	r3, #0
 8000b12:	4a01      	ldr	r2, [pc, #4]	; (8000b18 <__aeabi_dadd+0x670>)
 8000b14:	001f      	movs	r7, r3
 8000b16:	e55e      	b.n	80005d6 <__aeabi_dadd+0x12e>
 8000b18:	000007ff 	.word	0x000007ff
 8000b1c:	ff7fffff 	.word	0xff7fffff

08000b20 <__aeabi_ddiv>:
 8000b20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000b22:	4657      	mov	r7, sl
 8000b24:	464e      	mov	r6, r9
 8000b26:	4645      	mov	r5, r8
 8000b28:	46de      	mov	lr, fp
 8000b2a:	b5e0      	push	{r5, r6, r7, lr}
 8000b2c:	4681      	mov	r9, r0
 8000b2e:	0005      	movs	r5, r0
 8000b30:	030c      	lsls	r4, r1, #12
 8000b32:	0048      	lsls	r0, r1, #1
 8000b34:	4692      	mov	sl, r2
 8000b36:	001f      	movs	r7, r3
 8000b38:	b085      	sub	sp, #20
 8000b3a:	0b24      	lsrs	r4, r4, #12
 8000b3c:	0d40      	lsrs	r0, r0, #21
 8000b3e:	0fce      	lsrs	r6, r1, #31
 8000b40:	2800      	cmp	r0, #0
 8000b42:	d100      	bne.n	8000b46 <__aeabi_ddiv+0x26>
 8000b44:	e156      	b.n	8000df4 <__aeabi_ddiv+0x2d4>
 8000b46:	4bd4      	ldr	r3, [pc, #848]	; (8000e98 <__aeabi_ddiv+0x378>)
 8000b48:	4298      	cmp	r0, r3
 8000b4a:	d100      	bne.n	8000b4e <__aeabi_ddiv+0x2e>
 8000b4c:	e172      	b.n	8000e34 <__aeabi_ddiv+0x314>
 8000b4e:	0f6b      	lsrs	r3, r5, #29
 8000b50:	00e4      	lsls	r4, r4, #3
 8000b52:	431c      	orrs	r4, r3
 8000b54:	2380      	movs	r3, #128	; 0x80
 8000b56:	041b      	lsls	r3, r3, #16
 8000b58:	4323      	orrs	r3, r4
 8000b5a:	4698      	mov	r8, r3
 8000b5c:	4bcf      	ldr	r3, [pc, #828]	; (8000e9c <__aeabi_ddiv+0x37c>)
 8000b5e:	00ed      	lsls	r5, r5, #3
 8000b60:	469b      	mov	fp, r3
 8000b62:	2300      	movs	r3, #0
 8000b64:	4699      	mov	r9, r3
 8000b66:	4483      	add	fp, r0
 8000b68:	9300      	str	r3, [sp, #0]
 8000b6a:	033c      	lsls	r4, r7, #12
 8000b6c:	007b      	lsls	r3, r7, #1
 8000b6e:	4650      	mov	r0, sl
 8000b70:	0b24      	lsrs	r4, r4, #12
 8000b72:	0d5b      	lsrs	r3, r3, #21
 8000b74:	0fff      	lsrs	r7, r7, #31
 8000b76:	2b00      	cmp	r3, #0
 8000b78:	d100      	bne.n	8000b7c <__aeabi_ddiv+0x5c>
 8000b7a:	e11f      	b.n	8000dbc <__aeabi_ddiv+0x29c>
 8000b7c:	4ac6      	ldr	r2, [pc, #792]	; (8000e98 <__aeabi_ddiv+0x378>)
 8000b7e:	4293      	cmp	r3, r2
 8000b80:	d100      	bne.n	8000b84 <__aeabi_ddiv+0x64>
 8000b82:	e162      	b.n	8000e4a <__aeabi_ddiv+0x32a>
 8000b84:	49c5      	ldr	r1, [pc, #788]	; (8000e9c <__aeabi_ddiv+0x37c>)
 8000b86:	0f42      	lsrs	r2, r0, #29
 8000b88:	468c      	mov	ip, r1
 8000b8a:	00e4      	lsls	r4, r4, #3
 8000b8c:	4659      	mov	r1, fp
 8000b8e:	4314      	orrs	r4, r2
 8000b90:	2280      	movs	r2, #128	; 0x80
 8000b92:	4463      	add	r3, ip
 8000b94:	0412      	lsls	r2, r2, #16
 8000b96:	1acb      	subs	r3, r1, r3
 8000b98:	4314      	orrs	r4, r2
 8000b9a:	469b      	mov	fp, r3
 8000b9c:	00c2      	lsls	r2, r0, #3
 8000b9e:	2000      	movs	r0, #0
 8000ba0:	0033      	movs	r3, r6
 8000ba2:	407b      	eors	r3, r7
 8000ba4:	469a      	mov	sl, r3
 8000ba6:	464b      	mov	r3, r9
 8000ba8:	2b0f      	cmp	r3, #15
 8000baa:	d827      	bhi.n	8000bfc <__aeabi_ddiv+0xdc>
 8000bac:	49bc      	ldr	r1, [pc, #752]	; (8000ea0 <__aeabi_ddiv+0x380>)
 8000bae:	009b      	lsls	r3, r3, #2
 8000bb0:	58cb      	ldr	r3, [r1, r3]
 8000bb2:	469f      	mov	pc, r3
 8000bb4:	46b2      	mov	sl, r6
 8000bb6:	9b00      	ldr	r3, [sp, #0]
 8000bb8:	2b02      	cmp	r3, #2
 8000bba:	d016      	beq.n	8000bea <__aeabi_ddiv+0xca>
 8000bbc:	2b03      	cmp	r3, #3
 8000bbe:	d100      	bne.n	8000bc2 <__aeabi_ddiv+0xa2>
 8000bc0:	e28e      	b.n	80010e0 <__aeabi_ddiv+0x5c0>
 8000bc2:	2b01      	cmp	r3, #1
 8000bc4:	d000      	beq.n	8000bc8 <__aeabi_ddiv+0xa8>
 8000bc6:	e0d9      	b.n	8000d7c <__aeabi_ddiv+0x25c>
 8000bc8:	2300      	movs	r3, #0
 8000bca:	2400      	movs	r4, #0
 8000bcc:	2500      	movs	r5, #0
 8000bce:	4652      	mov	r2, sl
 8000bd0:	051b      	lsls	r3, r3, #20
 8000bd2:	4323      	orrs	r3, r4
 8000bd4:	07d2      	lsls	r2, r2, #31
 8000bd6:	4313      	orrs	r3, r2
 8000bd8:	0028      	movs	r0, r5
 8000bda:	0019      	movs	r1, r3
 8000bdc:	b005      	add	sp, #20
 8000bde:	bcf0      	pop	{r4, r5, r6, r7}
 8000be0:	46bb      	mov	fp, r7
 8000be2:	46b2      	mov	sl, r6
 8000be4:	46a9      	mov	r9, r5
 8000be6:	46a0      	mov	r8, r4
 8000be8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000bea:	2400      	movs	r4, #0
 8000bec:	2500      	movs	r5, #0
 8000bee:	4baa      	ldr	r3, [pc, #680]	; (8000e98 <__aeabi_ddiv+0x378>)
 8000bf0:	e7ed      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000bf2:	46ba      	mov	sl, r7
 8000bf4:	46a0      	mov	r8, r4
 8000bf6:	0015      	movs	r5, r2
 8000bf8:	9000      	str	r0, [sp, #0]
 8000bfa:	e7dc      	b.n	8000bb6 <__aeabi_ddiv+0x96>
 8000bfc:	4544      	cmp	r4, r8
 8000bfe:	d200      	bcs.n	8000c02 <__aeabi_ddiv+0xe2>
 8000c00:	e1c7      	b.n	8000f92 <__aeabi_ddiv+0x472>
 8000c02:	d100      	bne.n	8000c06 <__aeabi_ddiv+0xe6>
 8000c04:	e1c2      	b.n	8000f8c <__aeabi_ddiv+0x46c>
 8000c06:	2301      	movs	r3, #1
 8000c08:	425b      	negs	r3, r3
 8000c0a:	469c      	mov	ip, r3
 8000c0c:	002e      	movs	r6, r5
 8000c0e:	4640      	mov	r0, r8
 8000c10:	2500      	movs	r5, #0
 8000c12:	44e3      	add	fp, ip
 8000c14:	0223      	lsls	r3, r4, #8
 8000c16:	0e14      	lsrs	r4, r2, #24
 8000c18:	431c      	orrs	r4, r3
 8000c1a:	0c1b      	lsrs	r3, r3, #16
 8000c1c:	4699      	mov	r9, r3
 8000c1e:	0423      	lsls	r3, r4, #16
 8000c20:	0c1f      	lsrs	r7, r3, #16
 8000c22:	0212      	lsls	r2, r2, #8
 8000c24:	4649      	mov	r1, r9
 8000c26:	9200      	str	r2, [sp, #0]
 8000c28:	9701      	str	r7, [sp, #4]
 8000c2a:	f7ff fb0f 	bl	800024c <__aeabi_uidivmod>
 8000c2e:	0002      	movs	r2, r0
 8000c30:	437a      	muls	r2, r7
 8000c32:	040b      	lsls	r3, r1, #16
 8000c34:	0c31      	lsrs	r1, r6, #16
 8000c36:	4680      	mov	r8, r0
 8000c38:	4319      	orrs	r1, r3
 8000c3a:	428a      	cmp	r2, r1
 8000c3c:	d907      	bls.n	8000c4e <__aeabi_ddiv+0x12e>
 8000c3e:	2301      	movs	r3, #1
 8000c40:	425b      	negs	r3, r3
 8000c42:	469c      	mov	ip, r3
 8000c44:	1909      	adds	r1, r1, r4
 8000c46:	44e0      	add	r8, ip
 8000c48:	428c      	cmp	r4, r1
 8000c4a:	d800      	bhi.n	8000c4e <__aeabi_ddiv+0x12e>
 8000c4c:	e207      	b.n	800105e <__aeabi_ddiv+0x53e>
 8000c4e:	1a88      	subs	r0, r1, r2
 8000c50:	4649      	mov	r1, r9
 8000c52:	f7ff fafb 	bl	800024c <__aeabi_uidivmod>
 8000c56:	0409      	lsls	r1, r1, #16
 8000c58:	468c      	mov	ip, r1
 8000c5a:	0431      	lsls	r1, r6, #16
 8000c5c:	4666      	mov	r6, ip
 8000c5e:	9a01      	ldr	r2, [sp, #4]
 8000c60:	0c09      	lsrs	r1, r1, #16
 8000c62:	4342      	muls	r2, r0
 8000c64:	0003      	movs	r3, r0
 8000c66:	4331      	orrs	r1, r6
 8000c68:	428a      	cmp	r2, r1
 8000c6a:	d904      	bls.n	8000c76 <__aeabi_ddiv+0x156>
 8000c6c:	1909      	adds	r1, r1, r4
 8000c6e:	3b01      	subs	r3, #1
 8000c70:	428c      	cmp	r4, r1
 8000c72:	d800      	bhi.n	8000c76 <__aeabi_ddiv+0x156>
 8000c74:	e1ed      	b.n	8001052 <__aeabi_ddiv+0x532>
 8000c76:	1a88      	subs	r0, r1, r2
 8000c78:	4642      	mov	r2, r8
 8000c7a:	0412      	lsls	r2, r2, #16
 8000c7c:	431a      	orrs	r2, r3
 8000c7e:	4690      	mov	r8, r2
 8000c80:	4641      	mov	r1, r8
 8000c82:	9b00      	ldr	r3, [sp, #0]
 8000c84:	040e      	lsls	r6, r1, #16
 8000c86:	0c1b      	lsrs	r3, r3, #16
 8000c88:	001f      	movs	r7, r3
 8000c8a:	9302      	str	r3, [sp, #8]
 8000c8c:	9b00      	ldr	r3, [sp, #0]
 8000c8e:	0c36      	lsrs	r6, r6, #16
 8000c90:	041b      	lsls	r3, r3, #16
 8000c92:	0c19      	lsrs	r1, r3, #16
 8000c94:	000b      	movs	r3, r1
 8000c96:	4373      	muls	r3, r6
 8000c98:	0c12      	lsrs	r2, r2, #16
 8000c9a:	437e      	muls	r6, r7
 8000c9c:	9103      	str	r1, [sp, #12]
 8000c9e:	4351      	muls	r1, r2
 8000ca0:	437a      	muls	r2, r7
 8000ca2:	0c1f      	lsrs	r7, r3, #16
 8000ca4:	46bc      	mov	ip, r7
 8000ca6:	1876      	adds	r6, r6, r1
 8000ca8:	4466      	add	r6, ip
 8000caa:	42b1      	cmp	r1, r6
 8000cac:	d903      	bls.n	8000cb6 <__aeabi_ddiv+0x196>
 8000cae:	2180      	movs	r1, #128	; 0x80
 8000cb0:	0249      	lsls	r1, r1, #9
 8000cb2:	468c      	mov	ip, r1
 8000cb4:	4462      	add	r2, ip
 8000cb6:	0c31      	lsrs	r1, r6, #16
 8000cb8:	188a      	adds	r2, r1, r2
 8000cba:	0431      	lsls	r1, r6, #16
 8000cbc:	041e      	lsls	r6, r3, #16
 8000cbe:	0c36      	lsrs	r6, r6, #16
 8000cc0:	198e      	adds	r6, r1, r6
 8000cc2:	4290      	cmp	r0, r2
 8000cc4:	d302      	bcc.n	8000ccc <__aeabi_ddiv+0x1ac>
 8000cc6:	d112      	bne.n	8000cee <__aeabi_ddiv+0x1ce>
 8000cc8:	42b5      	cmp	r5, r6
 8000cca:	d210      	bcs.n	8000cee <__aeabi_ddiv+0x1ce>
 8000ccc:	4643      	mov	r3, r8
 8000cce:	1e59      	subs	r1, r3, #1
 8000cd0:	9b00      	ldr	r3, [sp, #0]
 8000cd2:	469c      	mov	ip, r3
 8000cd4:	4465      	add	r5, ip
 8000cd6:	001f      	movs	r7, r3
 8000cd8:	429d      	cmp	r5, r3
 8000cda:	419b      	sbcs	r3, r3
 8000cdc:	425b      	negs	r3, r3
 8000cde:	191b      	adds	r3, r3, r4
 8000ce0:	18c0      	adds	r0, r0, r3
 8000ce2:	4284      	cmp	r4, r0
 8000ce4:	d200      	bcs.n	8000ce8 <__aeabi_ddiv+0x1c8>
 8000ce6:	e1a0      	b.n	800102a <__aeabi_ddiv+0x50a>
 8000ce8:	d100      	bne.n	8000cec <__aeabi_ddiv+0x1cc>
 8000cea:	e19b      	b.n	8001024 <__aeabi_ddiv+0x504>
 8000cec:	4688      	mov	r8, r1
 8000cee:	1bae      	subs	r6, r5, r6
 8000cf0:	42b5      	cmp	r5, r6
 8000cf2:	41ad      	sbcs	r5, r5
 8000cf4:	1a80      	subs	r0, r0, r2
 8000cf6:	426d      	negs	r5, r5
 8000cf8:	1b40      	subs	r0, r0, r5
 8000cfa:	4284      	cmp	r4, r0
 8000cfc:	d100      	bne.n	8000d00 <__aeabi_ddiv+0x1e0>
 8000cfe:	e1d5      	b.n	80010ac <__aeabi_ddiv+0x58c>
 8000d00:	4649      	mov	r1, r9
 8000d02:	f7ff faa3 	bl	800024c <__aeabi_uidivmod>
 8000d06:	9a01      	ldr	r2, [sp, #4]
 8000d08:	040b      	lsls	r3, r1, #16
 8000d0a:	4342      	muls	r2, r0
 8000d0c:	0c31      	lsrs	r1, r6, #16
 8000d0e:	0005      	movs	r5, r0
 8000d10:	4319      	orrs	r1, r3
 8000d12:	428a      	cmp	r2, r1
 8000d14:	d900      	bls.n	8000d18 <__aeabi_ddiv+0x1f8>
 8000d16:	e16c      	b.n	8000ff2 <__aeabi_ddiv+0x4d2>
 8000d18:	1a88      	subs	r0, r1, r2
 8000d1a:	4649      	mov	r1, r9
 8000d1c:	f7ff fa96 	bl	800024c <__aeabi_uidivmod>
 8000d20:	9a01      	ldr	r2, [sp, #4]
 8000d22:	0436      	lsls	r6, r6, #16
 8000d24:	4342      	muls	r2, r0
 8000d26:	0409      	lsls	r1, r1, #16
 8000d28:	0c36      	lsrs	r6, r6, #16
 8000d2a:	0003      	movs	r3, r0
 8000d2c:	430e      	orrs	r6, r1
 8000d2e:	42b2      	cmp	r2, r6
 8000d30:	d900      	bls.n	8000d34 <__aeabi_ddiv+0x214>
 8000d32:	e153      	b.n	8000fdc <__aeabi_ddiv+0x4bc>
 8000d34:	9803      	ldr	r0, [sp, #12]
 8000d36:	1ab6      	subs	r6, r6, r2
 8000d38:	0002      	movs	r2, r0
 8000d3a:	042d      	lsls	r5, r5, #16
 8000d3c:	431d      	orrs	r5, r3
 8000d3e:	9f02      	ldr	r7, [sp, #8]
 8000d40:	042b      	lsls	r3, r5, #16
 8000d42:	0c1b      	lsrs	r3, r3, #16
 8000d44:	435a      	muls	r2, r3
 8000d46:	437b      	muls	r3, r7
 8000d48:	469c      	mov	ip, r3
 8000d4a:	0c29      	lsrs	r1, r5, #16
 8000d4c:	4348      	muls	r0, r1
 8000d4e:	0c13      	lsrs	r3, r2, #16
 8000d50:	4484      	add	ip, r0
 8000d52:	4463      	add	r3, ip
 8000d54:	4379      	muls	r1, r7
 8000d56:	4298      	cmp	r0, r3
 8000d58:	d903      	bls.n	8000d62 <__aeabi_ddiv+0x242>
 8000d5a:	2080      	movs	r0, #128	; 0x80
 8000d5c:	0240      	lsls	r0, r0, #9
 8000d5e:	4684      	mov	ip, r0
 8000d60:	4461      	add	r1, ip
 8000d62:	0c18      	lsrs	r0, r3, #16
 8000d64:	0412      	lsls	r2, r2, #16
 8000d66:	041b      	lsls	r3, r3, #16
 8000d68:	0c12      	lsrs	r2, r2, #16
 8000d6a:	1841      	adds	r1, r0, r1
 8000d6c:	189b      	adds	r3, r3, r2
 8000d6e:	428e      	cmp	r6, r1
 8000d70:	d200      	bcs.n	8000d74 <__aeabi_ddiv+0x254>
 8000d72:	e0ff      	b.n	8000f74 <__aeabi_ddiv+0x454>
 8000d74:	d100      	bne.n	8000d78 <__aeabi_ddiv+0x258>
 8000d76:	e0fa      	b.n	8000f6e <__aeabi_ddiv+0x44e>
 8000d78:	2301      	movs	r3, #1
 8000d7a:	431d      	orrs	r5, r3
 8000d7c:	4a49      	ldr	r2, [pc, #292]	; (8000ea4 <__aeabi_ddiv+0x384>)
 8000d7e:	445a      	add	r2, fp
 8000d80:	2a00      	cmp	r2, #0
 8000d82:	dc00      	bgt.n	8000d86 <__aeabi_ddiv+0x266>
 8000d84:	e0aa      	b.n	8000edc <__aeabi_ddiv+0x3bc>
 8000d86:	076b      	lsls	r3, r5, #29
 8000d88:	d000      	beq.n	8000d8c <__aeabi_ddiv+0x26c>
 8000d8a:	e13d      	b.n	8001008 <__aeabi_ddiv+0x4e8>
 8000d8c:	08ed      	lsrs	r5, r5, #3
 8000d8e:	4643      	mov	r3, r8
 8000d90:	01db      	lsls	r3, r3, #7
 8000d92:	d506      	bpl.n	8000da2 <__aeabi_ddiv+0x282>
 8000d94:	4642      	mov	r2, r8
 8000d96:	4b44      	ldr	r3, [pc, #272]	; (8000ea8 <__aeabi_ddiv+0x388>)
 8000d98:	401a      	ands	r2, r3
 8000d9a:	4690      	mov	r8, r2
 8000d9c:	2280      	movs	r2, #128	; 0x80
 8000d9e:	00d2      	lsls	r2, r2, #3
 8000da0:	445a      	add	r2, fp
 8000da2:	4b42      	ldr	r3, [pc, #264]	; (8000eac <__aeabi_ddiv+0x38c>)
 8000da4:	429a      	cmp	r2, r3
 8000da6:	dd00      	ble.n	8000daa <__aeabi_ddiv+0x28a>
 8000da8:	e71f      	b.n	8000bea <__aeabi_ddiv+0xca>
 8000daa:	4643      	mov	r3, r8
 8000dac:	075b      	lsls	r3, r3, #29
 8000dae:	431d      	orrs	r5, r3
 8000db0:	4643      	mov	r3, r8
 8000db2:	0552      	lsls	r2, r2, #21
 8000db4:	025c      	lsls	r4, r3, #9
 8000db6:	0b24      	lsrs	r4, r4, #12
 8000db8:	0d53      	lsrs	r3, r2, #21
 8000dba:	e708      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000dbc:	4652      	mov	r2, sl
 8000dbe:	4322      	orrs	r2, r4
 8000dc0:	d100      	bne.n	8000dc4 <__aeabi_ddiv+0x2a4>
 8000dc2:	e07b      	b.n	8000ebc <__aeabi_ddiv+0x39c>
 8000dc4:	2c00      	cmp	r4, #0
 8000dc6:	d100      	bne.n	8000dca <__aeabi_ddiv+0x2aa>
 8000dc8:	e0fa      	b.n	8000fc0 <__aeabi_ddiv+0x4a0>
 8000dca:	0020      	movs	r0, r4
 8000dcc:	f001 f952 	bl	8002074 <__clzsi2>
 8000dd0:	0002      	movs	r2, r0
 8000dd2:	3a0b      	subs	r2, #11
 8000dd4:	231d      	movs	r3, #29
 8000dd6:	0001      	movs	r1, r0
 8000dd8:	1a9b      	subs	r3, r3, r2
 8000dda:	4652      	mov	r2, sl
 8000ddc:	3908      	subs	r1, #8
 8000dde:	40da      	lsrs	r2, r3
 8000de0:	408c      	lsls	r4, r1
 8000de2:	4314      	orrs	r4, r2
 8000de4:	4652      	mov	r2, sl
 8000de6:	408a      	lsls	r2, r1
 8000de8:	4b31      	ldr	r3, [pc, #196]	; (8000eb0 <__aeabi_ddiv+0x390>)
 8000dea:	4458      	add	r0, fp
 8000dec:	469b      	mov	fp, r3
 8000dee:	4483      	add	fp, r0
 8000df0:	2000      	movs	r0, #0
 8000df2:	e6d5      	b.n	8000ba0 <__aeabi_ddiv+0x80>
 8000df4:	464b      	mov	r3, r9
 8000df6:	4323      	orrs	r3, r4
 8000df8:	4698      	mov	r8, r3
 8000dfa:	d044      	beq.n	8000e86 <__aeabi_ddiv+0x366>
 8000dfc:	2c00      	cmp	r4, #0
 8000dfe:	d100      	bne.n	8000e02 <__aeabi_ddiv+0x2e2>
 8000e00:	e0ce      	b.n	8000fa0 <__aeabi_ddiv+0x480>
 8000e02:	0020      	movs	r0, r4
 8000e04:	f001 f936 	bl	8002074 <__clzsi2>
 8000e08:	0001      	movs	r1, r0
 8000e0a:	0002      	movs	r2, r0
 8000e0c:	390b      	subs	r1, #11
 8000e0e:	231d      	movs	r3, #29
 8000e10:	1a5b      	subs	r3, r3, r1
 8000e12:	4649      	mov	r1, r9
 8000e14:	0010      	movs	r0, r2
 8000e16:	40d9      	lsrs	r1, r3
 8000e18:	3808      	subs	r0, #8
 8000e1a:	4084      	lsls	r4, r0
 8000e1c:	000b      	movs	r3, r1
 8000e1e:	464d      	mov	r5, r9
 8000e20:	4323      	orrs	r3, r4
 8000e22:	4698      	mov	r8, r3
 8000e24:	4085      	lsls	r5, r0
 8000e26:	4823      	ldr	r0, [pc, #140]	; (8000eb4 <__aeabi_ddiv+0x394>)
 8000e28:	1a83      	subs	r3, r0, r2
 8000e2a:	469b      	mov	fp, r3
 8000e2c:	2300      	movs	r3, #0
 8000e2e:	4699      	mov	r9, r3
 8000e30:	9300      	str	r3, [sp, #0]
 8000e32:	e69a      	b.n	8000b6a <__aeabi_ddiv+0x4a>
 8000e34:	464b      	mov	r3, r9
 8000e36:	4323      	orrs	r3, r4
 8000e38:	4698      	mov	r8, r3
 8000e3a:	d11d      	bne.n	8000e78 <__aeabi_ddiv+0x358>
 8000e3c:	2308      	movs	r3, #8
 8000e3e:	4699      	mov	r9, r3
 8000e40:	3b06      	subs	r3, #6
 8000e42:	2500      	movs	r5, #0
 8000e44:	4683      	mov	fp, r0
 8000e46:	9300      	str	r3, [sp, #0]
 8000e48:	e68f      	b.n	8000b6a <__aeabi_ddiv+0x4a>
 8000e4a:	4652      	mov	r2, sl
 8000e4c:	4322      	orrs	r2, r4
 8000e4e:	d109      	bne.n	8000e64 <__aeabi_ddiv+0x344>
 8000e50:	2302      	movs	r3, #2
 8000e52:	4649      	mov	r1, r9
 8000e54:	4319      	orrs	r1, r3
 8000e56:	4b18      	ldr	r3, [pc, #96]	; (8000eb8 <__aeabi_ddiv+0x398>)
 8000e58:	4689      	mov	r9, r1
 8000e5a:	469c      	mov	ip, r3
 8000e5c:	2400      	movs	r4, #0
 8000e5e:	2002      	movs	r0, #2
 8000e60:	44e3      	add	fp, ip
 8000e62:	e69d      	b.n	8000ba0 <__aeabi_ddiv+0x80>
 8000e64:	2303      	movs	r3, #3
 8000e66:	464a      	mov	r2, r9
 8000e68:	431a      	orrs	r2, r3
 8000e6a:	4b13      	ldr	r3, [pc, #76]	; (8000eb8 <__aeabi_ddiv+0x398>)
 8000e6c:	4691      	mov	r9, r2
 8000e6e:	469c      	mov	ip, r3
 8000e70:	4652      	mov	r2, sl
 8000e72:	2003      	movs	r0, #3
 8000e74:	44e3      	add	fp, ip
 8000e76:	e693      	b.n	8000ba0 <__aeabi_ddiv+0x80>
 8000e78:	230c      	movs	r3, #12
 8000e7a:	4699      	mov	r9, r3
 8000e7c:	3b09      	subs	r3, #9
 8000e7e:	46a0      	mov	r8, r4
 8000e80:	4683      	mov	fp, r0
 8000e82:	9300      	str	r3, [sp, #0]
 8000e84:	e671      	b.n	8000b6a <__aeabi_ddiv+0x4a>
 8000e86:	2304      	movs	r3, #4
 8000e88:	4699      	mov	r9, r3
 8000e8a:	2300      	movs	r3, #0
 8000e8c:	469b      	mov	fp, r3
 8000e8e:	3301      	adds	r3, #1
 8000e90:	2500      	movs	r5, #0
 8000e92:	9300      	str	r3, [sp, #0]
 8000e94:	e669      	b.n	8000b6a <__aeabi_ddiv+0x4a>
 8000e96:	46c0      	nop			; (mov r8, r8)
 8000e98:	000007ff 	.word	0x000007ff
 8000e9c:	fffffc01 	.word	0xfffffc01
 8000ea0:	080074a8 	.word	0x080074a8
 8000ea4:	000003ff 	.word	0x000003ff
 8000ea8:	feffffff 	.word	0xfeffffff
 8000eac:	000007fe 	.word	0x000007fe
 8000eb0:	000003f3 	.word	0x000003f3
 8000eb4:	fffffc0d 	.word	0xfffffc0d
 8000eb8:	fffff801 	.word	0xfffff801
 8000ebc:	4649      	mov	r1, r9
 8000ebe:	2301      	movs	r3, #1
 8000ec0:	4319      	orrs	r1, r3
 8000ec2:	4689      	mov	r9, r1
 8000ec4:	2400      	movs	r4, #0
 8000ec6:	2001      	movs	r0, #1
 8000ec8:	e66a      	b.n	8000ba0 <__aeabi_ddiv+0x80>
 8000eca:	2300      	movs	r3, #0
 8000ecc:	2480      	movs	r4, #128	; 0x80
 8000ece:	469a      	mov	sl, r3
 8000ed0:	2500      	movs	r5, #0
 8000ed2:	4b8a      	ldr	r3, [pc, #552]	; (80010fc <__aeabi_ddiv+0x5dc>)
 8000ed4:	0324      	lsls	r4, r4, #12
 8000ed6:	e67a      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000ed8:	2501      	movs	r5, #1
 8000eda:	426d      	negs	r5, r5
 8000edc:	2301      	movs	r3, #1
 8000ede:	1a9b      	subs	r3, r3, r2
 8000ee0:	2b38      	cmp	r3, #56	; 0x38
 8000ee2:	dd00      	ble.n	8000ee6 <__aeabi_ddiv+0x3c6>
 8000ee4:	e670      	b.n	8000bc8 <__aeabi_ddiv+0xa8>
 8000ee6:	2b1f      	cmp	r3, #31
 8000ee8:	dc00      	bgt.n	8000eec <__aeabi_ddiv+0x3cc>
 8000eea:	e0bf      	b.n	800106c <__aeabi_ddiv+0x54c>
 8000eec:	211f      	movs	r1, #31
 8000eee:	4249      	negs	r1, r1
 8000ef0:	1a8a      	subs	r2, r1, r2
 8000ef2:	4641      	mov	r1, r8
 8000ef4:	40d1      	lsrs	r1, r2
 8000ef6:	000a      	movs	r2, r1
 8000ef8:	2b20      	cmp	r3, #32
 8000efa:	d004      	beq.n	8000f06 <__aeabi_ddiv+0x3e6>
 8000efc:	4641      	mov	r1, r8
 8000efe:	4b80      	ldr	r3, [pc, #512]	; (8001100 <__aeabi_ddiv+0x5e0>)
 8000f00:	445b      	add	r3, fp
 8000f02:	4099      	lsls	r1, r3
 8000f04:	430d      	orrs	r5, r1
 8000f06:	1e6b      	subs	r3, r5, #1
 8000f08:	419d      	sbcs	r5, r3
 8000f0a:	2307      	movs	r3, #7
 8000f0c:	432a      	orrs	r2, r5
 8000f0e:	001d      	movs	r5, r3
 8000f10:	2400      	movs	r4, #0
 8000f12:	4015      	ands	r5, r2
 8000f14:	4213      	tst	r3, r2
 8000f16:	d100      	bne.n	8000f1a <__aeabi_ddiv+0x3fa>
 8000f18:	e0d4      	b.n	80010c4 <__aeabi_ddiv+0x5a4>
 8000f1a:	210f      	movs	r1, #15
 8000f1c:	2300      	movs	r3, #0
 8000f1e:	4011      	ands	r1, r2
 8000f20:	2904      	cmp	r1, #4
 8000f22:	d100      	bne.n	8000f26 <__aeabi_ddiv+0x406>
 8000f24:	e0cb      	b.n	80010be <__aeabi_ddiv+0x59e>
 8000f26:	1d11      	adds	r1, r2, #4
 8000f28:	4291      	cmp	r1, r2
 8000f2a:	4192      	sbcs	r2, r2
 8000f2c:	4252      	negs	r2, r2
 8000f2e:	189b      	adds	r3, r3, r2
 8000f30:	000a      	movs	r2, r1
 8000f32:	0219      	lsls	r1, r3, #8
 8000f34:	d400      	bmi.n	8000f38 <__aeabi_ddiv+0x418>
 8000f36:	e0c2      	b.n	80010be <__aeabi_ddiv+0x59e>
 8000f38:	2301      	movs	r3, #1
 8000f3a:	2400      	movs	r4, #0
 8000f3c:	2500      	movs	r5, #0
 8000f3e:	e646      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000f40:	2380      	movs	r3, #128	; 0x80
 8000f42:	4641      	mov	r1, r8
 8000f44:	031b      	lsls	r3, r3, #12
 8000f46:	4219      	tst	r1, r3
 8000f48:	d008      	beq.n	8000f5c <__aeabi_ddiv+0x43c>
 8000f4a:	421c      	tst	r4, r3
 8000f4c:	d106      	bne.n	8000f5c <__aeabi_ddiv+0x43c>
 8000f4e:	431c      	orrs	r4, r3
 8000f50:	0324      	lsls	r4, r4, #12
 8000f52:	46ba      	mov	sl, r7
 8000f54:	0015      	movs	r5, r2
 8000f56:	4b69      	ldr	r3, [pc, #420]	; (80010fc <__aeabi_ddiv+0x5dc>)
 8000f58:	0b24      	lsrs	r4, r4, #12
 8000f5a:	e638      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000f5c:	2480      	movs	r4, #128	; 0x80
 8000f5e:	4643      	mov	r3, r8
 8000f60:	0324      	lsls	r4, r4, #12
 8000f62:	431c      	orrs	r4, r3
 8000f64:	0324      	lsls	r4, r4, #12
 8000f66:	46b2      	mov	sl, r6
 8000f68:	4b64      	ldr	r3, [pc, #400]	; (80010fc <__aeabi_ddiv+0x5dc>)
 8000f6a:	0b24      	lsrs	r4, r4, #12
 8000f6c:	e62f      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000f6e:	2b00      	cmp	r3, #0
 8000f70:	d100      	bne.n	8000f74 <__aeabi_ddiv+0x454>
 8000f72:	e703      	b.n	8000d7c <__aeabi_ddiv+0x25c>
 8000f74:	19a6      	adds	r6, r4, r6
 8000f76:	1e68      	subs	r0, r5, #1
 8000f78:	42a6      	cmp	r6, r4
 8000f7a:	d200      	bcs.n	8000f7e <__aeabi_ddiv+0x45e>
 8000f7c:	e08d      	b.n	800109a <__aeabi_ddiv+0x57a>
 8000f7e:	428e      	cmp	r6, r1
 8000f80:	d200      	bcs.n	8000f84 <__aeabi_ddiv+0x464>
 8000f82:	e0a3      	b.n	80010cc <__aeabi_ddiv+0x5ac>
 8000f84:	d100      	bne.n	8000f88 <__aeabi_ddiv+0x468>
 8000f86:	e0b3      	b.n	80010f0 <__aeabi_ddiv+0x5d0>
 8000f88:	0005      	movs	r5, r0
 8000f8a:	e6f5      	b.n	8000d78 <__aeabi_ddiv+0x258>
 8000f8c:	42aa      	cmp	r2, r5
 8000f8e:	d900      	bls.n	8000f92 <__aeabi_ddiv+0x472>
 8000f90:	e639      	b.n	8000c06 <__aeabi_ddiv+0xe6>
 8000f92:	4643      	mov	r3, r8
 8000f94:	07de      	lsls	r6, r3, #31
 8000f96:	0858      	lsrs	r0, r3, #1
 8000f98:	086b      	lsrs	r3, r5, #1
 8000f9a:	431e      	orrs	r6, r3
 8000f9c:	07ed      	lsls	r5, r5, #31
 8000f9e:	e639      	b.n	8000c14 <__aeabi_ddiv+0xf4>
 8000fa0:	4648      	mov	r0, r9
 8000fa2:	f001 f867 	bl	8002074 <__clzsi2>
 8000fa6:	0001      	movs	r1, r0
 8000fa8:	0002      	movs	r2, r0
 8000faa:	3115      	adds	r1, #21
 8000fac:	3220      	adds	r2, #32
 8000fae:	291c      	cmp	r1, #28
 8000fb0:	dc00      	bgt.n	8000fb4 <__aeabi_ddiv+0x494>
 8000fb2:	e72c      	b.n	8000e0e <__aeabi_ddiv+0x2ee>
 8000fb4:	464b      	mov	r3, r9
 8000fb6:	3808      	subs	r0, #8
 8000fb8:	4083      	lsls	r3, r0
 8000fba:	2500      	movs	r5, #0
 8000fbc:	4698      	mov	r8, r3
 8000fbe:	e732      	b.n	8000e26 <__aeabi_ddiv+0x306>
 8000fc0:	f001 f858 	bl	8002074 <__clzsi2>
 8000fc4:	0003      	movs	r3, r0
 8000fc6:	001a      	movs	r2, r3
 8000fc8:	3215      	adds	r2, #21
 8000fca:	3020      	adds	r0, #32
 8000fcc:	2a1c      	cmp	r2, #28
 8000fce:	dc00      	bgt.n	8000fd2 <__aeabi_ddiv+0x4b2>
 8000fd0:	e700      	b.n	8000dd4 <__aeabi_ddiv+0x2b4>
 8000fd2:	4654      	mov	r4, sl
 8000fd4:	3b08      	subs	r3, #8
 8000fd6:	2200      	movs	r2, #0
 8000fd8:	409c      	lsls	r4, r3
 8000fda:	e705      	b.n	8000de8 <__aeabi_ddiv+0x2c8>
 8000fdc:	1936      	adds	r6, r6, r4
 8000fde:	3b01      	subs	r3, #1
 8000fe0:	42b4      	cmp	r4, r6
 8000fe2:	d900      	bls.n	8000fe6 <__aeabi_ddiv+0x4c6>
 8000fe4:	e6a6      	b.n	8000d34 <__aeabi_ddiv+0x214>
 8000fe6:	42b2      	cmp	r2, r6
 8000fe8:	d800      	bhi.n	8000fec <__aeabi_ddiv+0x4cc>
 8000fea:	e6a3      	b.n	8000d34 <__aeabi_ddiv+0x214>
 8000fec:	1e83      	subs	r3, r0, #2
 8000fee:	1936      	adds	r6, r6, r4
 8000ff0:	e6a0      	b.n	8000d34 <__aeabi_ddiv+0x214>
 8000ff2:	1909      	adds	r1, r1, r4
 8000ff4:	3d01      	subs	r5, #1
 8000ff6:	428c      	cmp	r4, r1
 8000ff8:	d900      	bls.n	8000ffc <__aeabi_ddiv+0x4dc>
 8000ffa:	e68d      	b.n	8000d18 <__aeabi_ddiv+0x1f8>
 8000ffc:	428a      	cmp	r2, r1
 8000ffe:	d800      	bhi.n	8001002 <__aeabi_ddiv+0x4e2>
 8001000:	e68a      	b.n	8000d18 <__aeabi_ddiv+0x1f8>
 8001002:	1e85      	subs	r5, r0, #2
 8001004:	1909      	adds	r1, r1, r4
 8001006:	e687      	b.n	8000d18 <__aeabi_ddiv+0x1f8>
 8001008:	230f      	movs	r3, #15
 800100a:	402b      	ands	r3, r5
 800100c:	2b04      	cmp	r3, #4
 800100e:	d100      	bne.n	8001012 <__aeabi_ddiv+0x4f2>
 8001010:	e6bc      	b.n	8000d8c <__aeabi_ddiv+0x26c>
 8001012:	2305      	movs	r3, #5
 8001014:	425b      	negs	r3, r3
 8001016:	42ab      	cmp	r3, r5
 8001018:	419b      	sbcs	r3, r3
 800101a:	3504      	adds	r5, #4
 800101c:	425b      	negs	r3, r3
 800101e:	08ed      	lsrs	r5, r5, #3
 8001020:	4498      	add	r8, r3
 8001022:	e6b4      	b.n	8000d8e <__aeabi_ddiv+0x26e>
 8001024:	42af      	cmp	r7, r5
 8001026:	d900      	bls.n	800102a <__aeabi_ddiv+0x50a>
 8001028:	e660      	b.n	8000cec <__aeabi_ddiv+0x1cc>
 800102a:	4282      	cmp	r2, r0
 800102c:	d804      	bhi.n	8001038 <__aeabi_ddiv+0x518>
 800102e:	d000      	beq.n	8001032 <__aeabi_ddiv+0x512>
 8001030:	e65c      	b.n	8000cec <__aeabi_ddiv+0x1cc>
 8001032:	42ae      	cmp	r6, r5
 8001034:	d800      	bhi.n	8001038 <__aeabi_ddiv+0x518>
 8001036:	e659      	b.n	8000cec <__aeabi_ddiv+0x1cc>
 8001038:	2302      	movs	r3, #2
 800103a:	425b      	negs	r3, r3
 800103c:	469c      	mov	ip, r3
 800103e:	9b00      	ldr	r3, [sp, #0]
 8001040:	44e0      	add	r8, ip
 8001042:	469c      	mov	ip, r3
 8001044:	4465      	add	r5, ip
 8001046:	429d      	cmp	r5, r3
 8001048:	419b      	sbcs	r3, r3
 800104a:	425b      	negs	r3, r3
 800104c:	191b      	adds	r3, r3, r4
 800104e:	18c0      	adds	r0, r0, r3
 8001050:	e64d      	b.n	8000cee <__aeabi_ddiv+0x1ce>
 8001052:	428a      	cmp	r2, r1
 8001054:	d800      	bhi.n	8001058 <__aeabi_ddiv+0x538>
 8001056:	e60e      	b.n	8000c76 <__aeabi_ddiv+0x156>
 8001058:	1e83      	subs	r3, r0, #2
 800105a:	1909      	adds	r1, r1, r4
 800105c:	e60b      	b.n	8000c76 <__aeabi_ddiv+0x156>
 800105e:	428a      	cmp	r2, r1
 8001060:	d800      	bhi.n	8001064 <__aeabi_ddiv+0x544>
 8001062:	e5f4      	b.n	8000c4e <__aeabi_ddiv+0x12e>
 8001064:	1e83      	subs	r3, r0, #2
 8001066:	4698      	mov	r8, r3
 8001068:	1909      	adds	r1, r1, r4
 800106a:	e5f0      	b.n	8000c4e <__aeabi_ddiv+0x12e>
 800106c:	4925      	ldr	r1, [pc, #148]	; (8001104 <__aeabi_ddiv+0x5e4>)
 800106e:	0028      	movs	r0, r5
 8001070:	4459      	add	r1, fp
 8001072:	408d      	lsls	r5, r1
 8001074:	4642      	mov	r2, r8
 8001076:	408a      	lsls	r2, r1
 8001078:	1e69      	subs	r1, r5, #1
 800107a:	418d      	sbcs	r5, r1
 800107c:	4641      	mov	r1, r8
 800107e:	40d8      	lsrs	r0, r3
 8001080:	40d9      	lsrs	r1, r3
 8001082:	4302      	orrs	r2, r0
 8001084:	432a      	orrs	r2, r5
 8001086:	000b      	movs	r3, r1
 8001088:	0751      	lsls	r1, r2, #29
 800108a:	d100      	bne.n	800108e <__aeabi_ddiv+0x56e>
 800108c:	e751      	b.n	8000f32 <__aeabi_ddiv+0x412>
 800108e:	210f      	movs	r1, #15
 8001090:	4011      	ands	r1, r2
 8001092:	2904      	cmp	r1, #4
 8001094:	d000      	beq.n	8001098 <__aeabi_ddiv+0x578>
 8001096:	e746      	b.n	8000f26 <__aeabi_ddiv+0x406>
 8001098:	e74b      	b.n	8000f32 <__aeabi_ddiv+0x412>
 800109a:	0005      	movs	r5, r0
 800109c:	428e      	cmp	r6, r1
 800109e:	d000      	beq.n	80010a2 <__aeabi_ddiv+0x582>
 80010a0:	e66a      	b.n	8000d78 <__aeabi_ddiv+0x258>
 80010a2:	9a00      	ldr	r2, [sp, #0]
 80010a4:	4293      	cmp	r3, r2
 80010a6:	d000      	beq.n	80010aa <__aeabi_ddiv+0x58a>
 80010a8:	e666      	b.n	8000d78 <__aeabi_ddiv+0x258>
 80010aa:	e667      	b.n	8000d7c <__aeabi_ddiv+0x25c>
 80010ac:	4a16      	ldr	r2, [pc, #88]	; (8001108 <__aeabi_ddiv+0x5e8>)
 80010ae:	445a      	add	r2, fp
 80010b0:	2a00      	cmp	r2, #0
 80010b2:	dc00      	bgt.n	80010b6 <__aeabi_ddiv+0x596>
 80010b4:	e710      	b.n	8000ed8 <__aeabi_ddiv+0x3b8>
 80010b6:	2301      	movs	r3, #1
 80010b8:	2500      	movs	r5, #0
 80010ba:	4498      	add	r8, r3
 80010bc:	e667      	b.n	8000d8e <__aeabi_ddiv+0x26e>
 80010be:	075d      	lsls	r5, r3, #29
 80010c0:	025b      	lsls	r3, r3, #9
 80010c2:	0b1c      	lsrs	r4, r3, #12
 80010c4:	08d2      	lsrs	r2, r2, #3
 80010c6:	2300      	movs	r3, #0
 80010c8:	4315      	orrs	r5, r2
 80010ca:	e580      	b.n	8000bce <__aeabi_ddiv+0xae>
 80010cc:	9800      	ldr	r0, [sp, #0]
 80010ce:	3d02      	subs	r5, #2
 80010d0:	0042      	lsls	r2, r0, #1
 80010d2:	4282      	cmp	r2, r0
 80010d4:	41bf      	sbcs	r7, r7
 80010d6:	427f      	negs	r7, r7
 80010d8:	193c      	adds	r4, r7, r4
 80010da:	1936      	adds	r6, r6, r4
 80010dc:	9200      	str	r2, [sp, #0]
 80010de:	e7dd      	b.n	800109c <__aeabi_ddiv+0x57c>
 80010e0:	2480      	movs	r4, #128	; 0x80
 80010e2:	4643      	mov	r3, r8
 80010e4:	0324      	lsls	r4, r4, #12
 80010e6:	431c      	orrs	r4, r3
 80010e8:	0324      	lsls	r4, r4, #12
 80010ea:	4b04      	ldr	r3, [pc, #16]	; (80010fc <__aeabi_ddiv+0x5dc>)
 80010ec:	0b24      	lsrs	r4, r4, #12
 80010ee:	e56e      	b.n	8000bce <__aeabi_ddiv+0xae>
 80010f0:	9a00      	ldr	r2, [sp, #0]
 80010f2:	429a      	cmp	r2, r3
 80010f4:	d3ea      	bcc.n	80010cc <__aeabi_ddiv+0x5ac>
 80010f6:	0005      	movs	r5, r0
 80010f8:	e7d3      	b.n	80010a2 <__aeabi_ddiv+0x582>
 80010fa:	46c0      	nop			; (mov r8, r8)
 80010fc:	000007ff 	.word	0x000007ff
 8001100:	0000043e 	.word	0x0000043e
 8001104:	0000041e 	.word	0x0000041e
 8001108:	000003ff 	.word	0x000003ff

0800110c <__eqdf2>:
 800110c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800110e:	464e      	mov	r6, r9
 8001110:	4645      	mov	r5, r8
 8001112:	46de      	mov	lr, fp
 8001114:	4657      	mov	r7, sl
 8001116:	4690      	mov	r8, r2
 8001118:	b5e0      	push	{r5, r6, r7, lr}
 800111a:	0017      	movs	r7, r2
 800111c:	031a      	lsls	r2, r3, #12
 800111e:	0b12      	lsrs	r2, r2, #12
 8001120:	0005      	movs	r5, r0
 8001122:	4684      	mov	ip, r0
 8001124:	4819      	ldr	r0, [pc, #100]	; (800118c <__eqdf2+0x80>)
 8001126:	030e      	lsls	r6, r1, #12
 8001128:	004c      	lsls	r4, r1, #1
 800112a:	4691      	mov	r9, r2
 800112c:	005a      	lsls	r2, r3, #1
 800112e:	0fdb      	lsrs	r3, r3, #31
 8001130:	469b      	mov	fp, r3
 8001132:	0b36      	lsrs	r6, r6, #12
 8001134:	0d64      	lsrs	r4, r4, #21
 8001136:	0fc9      	lsrs	r1, r1, #31
 8001138:	0d52      	lsrs	r2, r2, #21
 800113a:	4284      	cmp	r4, r0
 800113c:	d019      	beq.n	8001172 <__eqdf2+0x66>
 800113e:	4282      	cmp	r2, r0
 8001140:	d010      	beq.n	8001164 <__eqdf2+0x58>
 8001142:	2001      	movs	r0, #1
 8001144:	4294      	cmp	r4, r2
 8001146:	d10e      	bne.n	8001166 <__eqdf2+0x5a>
 8001148:	454e      	cmp	r6, r9
 800114a:	d10c      	bne.n	8001166 <__eqdf2+0x5a>
 800114c:	2001      	movs	r0, #1
 800114e:	45c4      	cmp	ip, r8
 8001150:	d109      	bne.n	8001166 <__eqdf2+0x5a>
 8001152:	4559      	cmp	r1, fp
 8001154:	d017      	beq.n	8001186 <__eqdf2+0x7a>
 8001156:	2c00      	cmp	r4, #0
 8001158:	d105      	bne.n	8001166 <__eqdf2+0x5a>
 800115a:	0030      	movs	r0, r6
 800115c:	4328      	orrs	r0, r5
 800115e:	1e43      	subs	r3, r0, #1
 8001160:	4198      	sbcs	r0, r3
 8001162:	e000      	b.n	8001166 <__eqdf2+0x5a>
 8001164:	2001      	movs	r0, #1
 8001166:	bcf0      	pop	{r4, r5, r6, r7}
 8001168:	46bb      	mov	fp, r7
 800116a:	46b2      	mov	sl, r6
 800116c:	46a9      	mov	r9, r5
 800116e:	46a0      	mov	r8, r4
 8001170:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001172:	0033      	movs	r3, r6
 8001174:	2001      	movs	r0, #1
 8001176:	432b      	orrs	r3, r5
 8001178:	d1f5      	bne.n	8001166 <__eqdf2+0x5a>
 800117a:	42a2      	cmp	r2, r4
 800117c:	d1f3      	bne.n	8001166 <__eqdf2+0x5a>
 800117e:	464b      	mov	r3, r9
 8001180:	433b      	orrs	r3, r7
 8001182:	d1f0      	bne.n	8001166 <__eqdf2+0x5a>
 8001184:	e7e2      	b.n	800114c <__eqdf2+0x40>
 8001186:	2000      	movs	r0, #0
 8001188:	e7ed      	b.n	8001166 <__eqdf2+0x5a>
 800118a:	46c0      	nop			; (mov r8, r8)
 800118c:	000007ff 	.word	0x000007ff

08001190 <__gedf2>:
 8001190:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001192:	4647      	mov	r7, r8
 8001194:	46ce      	mov	lr, r9
 8001196:	0004      	movs	r4, r0
 8001198:	0018      	movs	r0, r3
 800119a:	0016      	movs	r6, r2
 800119c:	031b      	lsls	r3, r3, #12
 800119e:	0b1b      	lsrs	r3, r3, #12
 80011a0:	4d2d      	ldr	r5, [pc, #180]	; (8001258 <__gedf2+0xc8>)
 80011a2:	004a      	lsls	r2, r1, #1
 80011a4:	4699      	mov	r9, r3
 80011a6:	b580      	push	{r7, lr}
 80011a8:	0043      	lsls	r3, r0, #1
 80011aa:	030f      	lsls	r7, r1, #12
 80011ac:	46a4      	mov	ip, r4
 80011ae:	46b0      	mov	r8, r6
 80011b0:	0b3f      	lsrs	r7, r7, #12
 80011b2:	0d52      	lsrs	r2, r2, #21
 80011b4:	0fc9      	lsrs	r1, r1, #31
 80011b6:	0d5b      	lsrs	r3, r3, #21
 80011b8:	0fc0      	lsrs	r0, r0, #31
 80011ba:	42aa      	cmp	r2, r5
 80011bc:	d021      	beq.n	8001202 <__gedf2+0x72>
 80011be:	42ab      	cmp	r3, r5
 80011c0:	d013      	beq.n	80011ea <__gedf2+0x5a>
 80011c2:	2a00      	cmp	r2, #0
 80011c4:	d122      	bne.n	800120c <__gedf2+0x7c>
 80011c6:	433c      	orrs	r4, r7
 80011c8:	2b00      	cmp	r3, #0
 80011ca:	d102      	bne.n	80011d2 <__gedf2+0x42>
 80011cc:	464d      	mov	r5, r9
 80011ce:	432e      	orrs	r6, r5
 80011d0:	d022      	beq.n	8001218 <__gedf2+0x88>
 80011d2:	2c00      	cmp	r4, #0
 80011d4:	d010      	beq.n	80011f8 <__gedf2+0x68>
 80011d6:	4281      	cmp	r1, r0
 80011d8:	d022      	beq.n	8001220 <__gedf2+0x90>
 80011da:	2002      	movs	r0, #2
 80011dc:	3901      	subs	r1, #1
 80011de:	4008      	ands	r0, r1
 80011e0:	3801      	subs	r0, #1
 80011e2:	bcc0      	pop	{r6, r7}
 80011e4:	46b9      	mov	r9, r7
 80011e6:	46b0      	mov	r8, r6
 80011e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011ea:	464d      	mov	r5, r9
 80011ec:	432e      	orrs	r6, r5
 80011ee:	d129      	bne.n	8001244 <__gedf2+0xb4>
 80011f0:	2a00      	cmp	r2, #0
 80011f2:	d1f0      	bne.n	80011d6 <__gedf2+0x46>
 80011f4:	433c      	orrs	r4, r7
 80011f6:	d1ee      	bne.n	80011d6 <__gedf2+0x46>
 80011f8:	2800      	cmp	r0, #0
 80011fa:	d1f2      	bne.n	80011e2 <__gedf2+0x52>
 80011fc:	2001      	movs	r0, #1
 80011fe:	4240      	negs	r0, r0
 8001200:	e7ef      	b.n	80011e2 <__gedf2+0x52>
 8001202:	003d      	movs	r5, r7
 8001204:	4325      	orrs	r5, r4
 8001206:	d11d      	bne.n	8001244 <__gedf2+0xb4>
 8001208:	4293      	cmp	r3, r2
 800120a:	d0ee      	beq.n	80011ea <__gedf2+0x5a>
 800120c:	2b00      	cmp	r3, #0
 800120e:	d1e2      	bne.n	80011d6 <__gedf2+0x46>
 8001210:	464c      	mov	r4, r9
 8001212:	4326      	orrs	r6, r4
 8001214:	d1df      	bne.n	80011d6 <__gedf2+0x46>
 8001216:	e7e0      	b.n	80011da <__gedf2+0x4a>
 8001218:	2000      	movs	r0, #0
 800121a:	2c00      	cmp	r4, #0
 800121c:	d0e1      	beq.n	80011e2 <__gedf2+0x52>
 800121e:	e7dc      	b.n	80011da <__gedf2+0x4a>
 8001220:	429a      	cmp	r2, r3
 8001222:	dc0a      	bgt.n	800123a <__gedf2+0xaa>
 8001224:	dbe8      	blt.n	80011f8 <__gedf2+0x68>
 8001226:	454f      	cmp	r7, r9
 8001228:	d8d7      	bhi.n	80011da <__gedf2+0x4a>
 800122a:	d00e      	beq.n	800124a <__gedf2+0xba>
 800122c:	2000      	movs	r0, #0
 800122e:	454f      	cmp	r7, r9
 8001230:	d2d7      	bcs.n	80011e2 <__gedf2+0x52>
 8001232:	2900      	cmp	r1, #0
 8001234:	d0e2      	beq.n	80011fc <__gedf2+0x6c>
 8001236:	0008      	movs	r0, r1
 8001238:	e7d3      	b.n	80011e2 <__gedf2+0x52>
 800123a:	4243      	negs	r3, r0
 800123c:	4158      	adcs	r0, r3
 800123e:	0040      	lsls	r0, r0, #1
 8001240:	3801      	subs	r0, #1
 8001242:	e7ce      	b.n	80011e2 <__gedf2+0x52>
 8001244:	2002      	movs	r0, #2
 8001246:	4240      	negs	r0, r0
 8001248:	e7cb      	b.n	80011e2 <__gedf2+0x52>
 800124a:	45c4      	cmp	ip, r8
 800124c:	d8c5      	bhi.n	80011da <__gedf2+0x4a>
 800124e:	2000      	movs	r0, #0
 8001250:	45c4      	cmp	ip, r8
 8001252:	d2c6      	bcs.n	80011e2 <__gedf2+0x52>
 8001254:	e7ed      	b.n	8001232 <__gedf2+0xa2>
 8001256:	46c0      	nop			; (mov r8, r8)
 8001258:	000007ff 	.word	0x000007ff

0800125c <__ledf2>:
 800125c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800125e:	4647      	mov	r7, r8
 8001260:	46ce      	mov	lr, r9
 8001262:	0004      	movs	r4, r0
 8001264:	0018      	movs	r0, r3
 8001266:	0016      	movs	r6, r2
 8001268:	031b      	lsls	r3, r3, #12
 800126a:	0b1b      	lsrs	r3, r3, #12
 800126c:	4d2c      	ldr	r5, [pc, #176]	; (8001320 <__ledf2+0xc4>)
 800126e:	004a      	lsls	r2, r1, #1
 8001270:	4699      	mov	r9, r3
 8001272:	b580      	push	{r7, lr}
 8001274:	0043      	lsls	r3, r0, #1
 8001276:	030f      	lsls	r7, r1, #12
 8001278:	46a4      	mov	ip, r4
 800127a:	46b0      	mov	r8, r6
 800127c:	0b3f      	lsrs	r7, r7, #12
 800127e:	0d52      	lsrs	r2, r2, #21
 8001280:	0fc9      	lsrs	r1, r1, #31
 8001282:	0d5b      	lsrs	r3, r3, #21
 8001284:	0fc0      	lsrs	r0, r0, #31
 8001286:	42aa      	cmp	r2, r5
 8001288:	d00d      	beq.n	80012a6 <__ledf2+0x4a>
 800128a:	42ab      	cmp	r3, r5
 800128c:	d010      	beq.n	80012b0 <__ledf2+0x54>
 800128e:	2a00      	cmp	r2, #0
 8001290:	d127      	bne.n	80012e2 <__ledf2+0x86>
 8001292:	433c      	orrs	r4, r7
 8001294:	2b00      	cmp	r3, #0
 8001296:	d111      	bne.n	80012bc <__ledf2+0x60>
 8001298:	464d      	mov	r5, r9
 800129a:	432e      	orrs	r6, r5
 800129c:	d10e      	bne.n	80012bc <__ledf2+0x60>
 800129e:	2000      	movs	r0, #0
 80012a0:	2c00      	cmp	r4, #0
 80012a2:	d015      	beq.n	80012d0 <__ledf2+0x74>
 80012a4:	e00e      	b.n	80012c4 <__ledf2+0x68>
 80012a6:	003d      	movs	r5, r7
 80012a8:	4325      	orrs	r5, r4
 80012aa:	d110      	bne.n	80012ce <__ledf2+0x72>
 80012ac:	4293      	cmp	r3, r2
 80012ae:	d118      	bne.n	80012e2 <__ledf2+0x86>
 80012b0:	464d      	mov	r5, r9
 80012b2:	432e      	orrs	r6, r5
 80012b4:	d10b      	bne.n	80012ce <__ledf2+0x72>
 80012b6:	2a00      	cmp	r2, #0
 80012b8:	d102      	bne.n	80012c0 <__ledf2+0x64>
 80012ba:	433c      	orrs	r4, r7
 80012bc:	2c00      	cmp	r4, #0
 80012be:	d00b      	beq.n	80012d8 <__ledf2+0x7c>
 80012c0:	4281      	cmp	r1, r0
 80012c2:	d014      	beq.n	80012ee <__ledf2+0x92>
 80012c4:	2002      	movs	r0, #2
 80012c6:	3901      	subs	r1, #1
 80012c8:	4008      	ands	r0, r1
 80012ca:	3801      	subs	r0, #1
 80012cc:	e000      	b.n	80012d0 <__ledf2+0x74>
 80012ce:	2002      	movs	r0, #2
 80012d0:	bcc0      	pop	{r6, r7}
 80012d2:	46b9      	mov	r9, r7
 80012d4:	46b0      	mov	r8, r6
 80012d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012d8:	2800      	cmp	r0, #0
 80012da:	d1f9      	bne.n	80012d0 <__ledf2+0x74>
 80012dc:	2001      	movs	r0, #1
 80012de:	4240      	negs	r0, r0
 80012e0:	e7f6      	b.n	80012d0 <__ledf2+0x74>
 80012e2:	2b00      	cmp	r3, #0
 80012e4:	d1ec      	bne.n	80012c0 <__ledf2+0x64>
 80012e6:	464c      	mov	r4, r9
 80012e8:	4326      	orrs	r6, r4
 80012ea:	d1e9      	bne.n	80012c0 <__ledf2+0x64>
 80012ec:	e7ea      	b.n	80012c4 <__ledf2+0x68>
 80012ee:	429a      	cmp	r2, r3
 80012f0:	dd04      	ble.n	80012fc <__ledf2+0xa0>
 80012f2:	4243      	negs	r3, r0
 80012f4:	4158      	adcs	r0, r3
 80012f6:	0040      	lsls	r0, r0, #1
 80012f8:	3801      	subs	r0, #1
 80012fa:	e7e9      	b.n	80012d0 <__ledf2+0x74>
 80012fc:	429a      	cmp	r2, r3
 80012fe:	dbeb      	blt.n	80012d8 <__ledf2+0x7c>
 8001300:	454f      	cmp	r7, r9
 8001302:	d8df      	bhi.n	80012c4 <__ledf2+0x68>
 8001304:	d006      	beq.n	8001314 <__ledf2+0xb8>
 8001306:	2000      	movs	r0, #0
 8001308:	454f      	cmp	r7, r9
 800130a:	d2e1      	bcs.n	80012d0 <__ledf2+0x74>
 800130c:	2900      	cmp	r1, #0
 800130e:	d0e5      	beq.n	80012dc <__ledf2+0x80>
 8001310:	0008      	movs	r0, r1
 8001312:	e7dd      	b.n	80012d0 <__ledf2+0x74>
 8001314:	45c4      	cmp	ip, r8
 8001316:	d8d5      	bhi.n	80012c4 <__ledf2+0x68>
 8001318:	2000      	movs	r0, #0
 800131a:	45c4      	cmp	ip, r8
 800131c:	d2d8      	bcs.n	80012d0 <__ledf2+0x74>
 800131e:	e7f5      	b.n	800130c <__ledf2+0xb0>
 8001320:	000007ff 	.word	0x000007ff

08001324 <__aeabi_dmul>:
 8001324:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001326:	4657      	mov	r7, sl
 8001328:	464e      	mov	r6, r9
 800132a:	4645      	mov	r5, r8
 800132c:	46de      	mov	lr, fp
 800132e:	b5e0      	push	{r5, r6, r7, lr}
 8001330:	4698      	mov	r8, r3
 8001332:	030c      	lsls	r4, r1, #12
 8001334:	004b      	lsls	r3, r1, #1
 8001336:	0006      	movs	r6, r0
 8001338:	4692      	mov	sl, r2
 800133a:	b087      	sub	sp, #28
 800133c:	0b24      	lsrs	r4, r4, #12
 800133e:	0d5b      	lsrs	r3, r3, #21
 8001340:	0fcf      	lsrs	r7, r1, #31
 8001342:	2b00      	cmp	r3, #0
 8001344:	d100      	bne.n	8001348 <__aeabi_dmul+0x24>
 8001346:	e15c      	b.n	8001602 <__aeabi_dmul+0x2de>
 8001348:	4ad9      	ldr	r2, [pc, #868]	; (80016b0 <__aeabi_dmul+0x38c>)
 800134a:	4293      	cmp	r3, r2
 800134c:	d100      	bne.n	8001350 <__aeabi_dmul+0x2c>
 800134e:	e175      	b.n	800163c <__aeabi_dmul+0x318>
 8001350:	0f42      	lsrs	r2, r0, #29
 8001352:	00e4      	lsls	r4, r4, #3
 8001354:	4314      	orrs	r4, r2
 8001356:	2280      	movs	r2, #128	; 0x80
 8001358:	0412      	lsls	r2, r2, #16
 800135a:	4314      	orrs	r4, r2
 800135c:	4ad5      	ldr	r2, [pc, #852]	; (80016b4 <__aeabi_dmul+0x390>)
 800135e:	00c5      	lsls	r5, r0, #3
 8001360:	4694      	mov	ip, r2
 8001362:	4463      	add	r3, ip
 8001364:	9300      	str	r3, [sp, #0]
 8001366:	2300      	movs	r3, #0
 8001368:	4699      	mov	r9, r3
 800136a:	469b      	mov	fp, r3
 800136c:	4643      	mov	r3, r8
 800136e:	4642      	mov	r2, r8
 8001370:	031e      	lsls	r6, r3, #12
 8001372:	0fd2      	lsrs	r2, r2, #31
 8001374:	005b      	lsls	r3, r3, #1
 8001376:	4650      	mov	r0, sl
 8001378:	4690      	mov	r8, r2
 800137a:	0b36      	lsrs	r6, r6, #12
 800137c:	0d5b      	lsrs	r3, r3, #21
 800137e:	d100      	bne.n	8001382 <__aeabi_dmul+0x5e>
 8001380:	e120      	b.n	80015c4 <__aeabi_dmul+0x2a0>
 8001382:	4acb      	ldr	r2, [pc, #812]	; (80016b0 <__aeabi_dmul+0x38c>)
 8001384:	4293      	cmp	r3, r2
 8001386:	d100      	bne.n	800138a <__aeabi_dmul+0x66>
 8001388:	e162      	b.n	8001650 <__aeabi_dmul+0x32c>
 800138a:	49ca      	ldr	r1, [pc, #808]	; (80016b4 <__aeabi_dmul+0x390>)
 800138c:	0f42      	lsrs	r2, r0, #29
 800138e:	468c      	mov	ip, r1
 8001390:	9900      	ldr	r1, [sp, #0]
 8001392:	4463      	add	r3, ip
 8001394:	00f6      	lsls	r6, r6, #3
 8001396:	468c      	mov	ip, r1
 8001398:	4316      	orrs	r6, r2
 800139a:	2280      	movs	r2, #128	; 0x80
 800139c:	449c      	add	ip, r3
 800139e:	0412      	lsls	r2, r2, #16
 80013a0:	4663      	mov	r3, ip
 80013a2:	4316      	orrs	r6, r2
 80013a4:	00c2      	lsls	r2, r0, #3
 80013a6:	2000      	movs	r0, #0
 80013a8:	9300      	str	r3, [sp, #0]
 80013aa:	9900      	ldr	r1, [sp, #0]
 80013ac:	4643      	mov	r3, r8
 80013ae:	3101      	adds	r1, #1
 80013b0:	468c      	mov	ip, r1
 80013b2:	4649      	mov	r1, r9
 80013b4:	407b      	eors	r3, r7
 80013b6:	9301      	str	r3, [sp, #4]
 80013b8:	290f      	cmp	r1, #15
 80013ba:	d826      	bhi.n	800140a <__aeabi_dmul+0xe6>
 80013bc:	4bbe      	ldr	r3, [pc, #760]	; (80016b8 <__aeabi_dmul+0x394>)
 80013be:	0089      	lsls	r1, r1, #2
 80013c0:	5859      	ldr	r1, [r3, r1]
 80013c2:	468f      	mov	pc, r1
 80013c4:	4643      	mov	r3, r8
 80013c6:	9301      	str	r3, [sp, #4]
 80013c8:	0034      	movs	r4, r6
 80013ca:	0015      	movs	r5, r2
 80013cc:	4683      	mov	fp, r0
 80013ce:	465b      	mov	r3, fp
 80013d0:	2b02      	cmp	r3, #2
 80013d2:	d016      	beq.n	8001402 <__aeabi_dmul+0xde>
 80013d4:	2b03      	cmp	r3, #3
 80013d6:	d100      	bne.n	80013da <__aeabi_dmul+0xb6>
 80013d8:	e203      	b.n	80017e2 <__aeabi_dmul+0x4be>
 80013da:	2b01      	cmp	r3, #1
 80013dc:	d000      	beq.n	80013e0 <__aeabi_dmul+0xbc>
 80013de:	e0cd      	b.n	800157c <__aeabi_dmul+0x258>
 80013e0:	2200      	movs	r2, #0
 80013e2:	2400      	movs	r4, #0
 80013e4:	2500      	movs	r5, #0
 80013e6:	9b01      	ldr	r3, [sp, #4]
 80013e8:	0512      	lsls	r2, r2, #20
 80013ea:	4322      	orrs	r2, r4
 80013ec:	07db      	lsls	r3, r3, #31
 80013ee:	431a      	orrs	r2, r3
 80013f0:	0028      	movs	r0, r5
 80013f2:	0011      	movs	r1, r2
 80013f4:	b007      	add	sp, #28
 80013f6:	bcf0      	pop	{r4, r5, r6, r7}
 80013f8:	46bb      	mov	fp, r7
 80013fa:	46b2      	mov	sl, r6
 80013fc:	46a9      	mov	r9, r5
 80013fe:	46a0      	mov	r8, r4
 8001400:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001402:	2400      	movs	r4, #0
 8001404:	2500      	movs	r5, #0
 8001406:	4aaa      	ldr	r2, [pc, #680]	; (80016b0 <__aeabi_dmul+0x38c>)
 8001408:	e7ed      	b.n	80013e6 <__aeabi_dmul+0xc2>
 800140a:	0c28      	lsrs	r0, r5, #16
 800140c:	042d      	lsls	r5, r5, #16
 800140e:	0c2d      	lsrs	r5, r5, #16
 8001410:	002b      	movs	r3, r5
 8001412:	0c11      	lsrs	r1, r2, #16
 8001414:	0412      	lsls	r2, r2, #16
 8001416:	0c12      	lsrs	r2, r2, #16
 8001418:	4353      	muls	r3, r2
 800141a:	4698      	mov	r8, r3
 800141c:	0013      	movs	r3, r2
 800141e:	002f      	movs	r7, r5
 8001420:	4343      	muls	r3, r0
 8001422:	4699      	mov	r9, r3
 8001424:	434f      	muls	r7, r1
 8001426:	444f      	add	r7, r9
 8001428:	46bb      	mov	fp, r7
 800142a:	4647      	mov	r7, r8
 800142c:	000b      	movs	r3, r1
 800142e:	0c3f      	lsrs	r7, r7, #16
 8001430:	46ba      	mov	sl, r7
 8001432:	4343      	muls	r3, r0
 8001434:	44da      	add	sl, fp
 8001436:	9302      	str	r3, [sp, #8]
 8001438:	45d1      	cmp	r9, sl
 800143a:	d904      	bls.n	8001446 <__aeabi_dmul+0x122>
 800143c:	2780      	movs	r7, #128	; 0x80
 800143e:	027f      	lsls	r7, r7, #9
 8001440:	46b9      	mov	r9, r7
 8001442:	444b      	add	r3, r9
 8001444:	9302      	str	r3, [sp, #8]
 8001446:	4653      	mov	r3, sl
 8001448:	0c1b      	lsrs	r3, r3, #16
 800144a:	469b      	mov	fp, r3
 800144c:	4653      	mov	r3, sl
 800144e:	041f      	lsls	r7, r3, #16
 8001450:	4643      	mov	r3, r8
 8001452:	041b      	lsls	r3, r3, #16
 8001454:	0c1b      	lsrs	r3, r3, #16
 8001456:	4698      	mov	r8, r3
 8001458:	003b      	movs	r3, r7
 800145a:	4443      	add	r3, r8
 800145c:	9304      	str	r3, [sp, #16]
 800145e:	0c33      	lsrs	r3, r6, #16
 8001460:	0436      	lsls	r6, r6, #16
 8001462:	0c36      	lsrs	r6, r6, #16
 8001464:	4698      	mov	r8, r3
 8001466:	0033      	movs	r3, r6
 8001468:	4343      	muls	r3, r0
 800146a:	4699      	mov	r9, r3
 800146c:	4643      	mov	r3, r8
 800146e:	4343      	muls	r3, r0
 8001470:	002f      	movs	r7, r5
 8001472:	469a      	mov	sl, r3
 8001474:	4643      	mov	r3, r8
 8001476:	4377      	muls	r7, r6
 8001478:	435d      	muls	r5, r3
 800147a:	0c38      	lsrs	r0, r7, #16
 800147c:	444d      	add	r5, r9
 800147e:	1945      	adds	r5, r0, r5
 8001480:	45a9      	cmp	r9, r5
 8001482:	d903      	bls.n	800148c <__aeabi_dmul+0x168>
 8001484:	2380      	movs	r3, #128	; 0x80
 8001486:	025b      	lsls	r3, r3, #9
 8001488:	4699      	mov	r9, r3
 800148a:	44ca      	add	sl, r9
 800148c:	043f      	lsls	r7, r7, #16
 800148e:	0c28      	lsrs	r0, r5, #16
 8001490:	0c3f      	lsrs	r7, r7, #16
 8001492:	042d      	lsls	r5, r5, #16
 8001494:	19ed      	adds	r5, r5, r7
 8001496:	0c27      	lsrs	r7, r4, #16
 8001498:	0424      	lsls	r4, r4, #16
 800149a:	0c24      	lsrs	r4, r4, #16
 800149c:	0003      	movs	r3, r0
 800149e:	0020      	movs	r0, r4
 80014a0:	4350      	muls	r0, r2
 80014a2:	437a      	muls	r2, r7
 80014a4:	4691      	mov	r9, r2
 80014a6:	003a      	movs	r2, r7
 80014a8:	4453      	add	r3, sl
 80014aa:	9305      	str	r3, [sp, #20]
 80014ac:	0c03      	lsrs	r3, r0, #16
 80014ae:	469a      	mov	sl, r3
 80014b0:	434a      	muls	r2, r1
 80014b2:	4361      	muls	r1, r4
 80014b4:	4449      	add	r1, r9
 80014b6:	4451      	add	r1, sl
 80014b8:	44ab      	add	fp, r5
 80014ba:	4589      	cmp	r9, r1
 80014bc:	d903      	bls.n	80014c6 <__aeabi_dmul+0x1a2>
 80014be:	2380      	movs	r3, #128	; 0x80
 80014c0:	025b      	lsls	r3, r3, #9
 80014c2:	4699      	mov	r9, r3
 80014c4:	444a      	add	r2, r9
 80014c6:	0400      	lsls	r0, r0, #16
 80014c8:	0c0b      	lsrs	r3, r1, #16
 80014ca:	0c00      	lsrs	r0, r0, #16
 80014cc:	0409      	lsls	r1, r1, #16
 80014ce:	1809      	adds	r1, r1, r0
 80014d0:	0020      	movs	r0, r4
 80014d2:	4699      	mov	r9, r3
 80014d4:	4643      	mov	r3, r8
 80014d6:	4370      	muls	r0, r6
 80014d8:	435c      	muls	r4, r3
 80014da:	437e      	muls	r6, r7
 80014dc:	435f      	muls	r7, r3
 80014de:	0c03      	lsrs	r3, r0, #16
 80014e0:	4698      	mov	r8, r3
 80014e2:	19a4      	adds	r4, r4, r6
 80014e4:	4444      	add	r4, r8
 80014e6:	444a      	add	r2, r9
 80014e8:	9703      	str	r7, [sp, #12]
 80014ea:	42a6      	cmp	r6, r4
 80014ec:	d904      	bls.n	80014f8 <__aeabi_dmul+0x1d4>
 80014ee:	2380      	movs	r3, #128	; 0x80
 80014f0:	025b      	lsls	r3, r3, #9
 80014f2:	4698      	mov	r8, r3
 80014f4:	4447      	add	r7, r8
 80014f6:	9703      	str	r7, [sp, #12]
 80014f8:	0423      	lsls	r3, r4, #16
 80014fa:	9e02      	ldr	r6, [sp, #8]
 80014fc:	469a      	mov	sl, r3
 80014fe:	9b05      	ldr	r3, [sp, #20]
 8001500:	445e      	add	r6, fp
 8001502:	4698      	mov	r8, r3
 8001504:	42ae      	cmp	r6, r5
 8001506:	41ad      	sbcs	r5, r5
 8001508:	1876      	adds	r6, r6, r1
 800150a:	428e      	cmp	r6, r1
 800150c:	4189      	sbcs	r1, r1
 800150e:	0400      	lsls	r0, r0, #16
 8001510:	0c00      	lsrs	r0, r0, #16
 8001512:	4450      	add	r0, sl
 8001514:	4440      	add	r0, r8
 8001516:	426d      	negs	r5, r5
 8001518:	1947      	adds	r7, r0, r5
 800151a:	46b8      	mov	r8, r7
 800151c:	4693      	mov	fp, r2
 800151e:	4249      	negs	r1, r1
 8001520:	4689      	mov	r9, r1
 8001522:	44c3      	add	fp, r8
 8001524:	44d9      	add	r9, fp
 8001526:	4298      	cmp	r0, r3
 8001528:	4180      	sbcs	r0, r0
 800152a:	45a8      	cmp	r8, r5
 800152c:	41ad      	sbcs	r5, r5
 800152e:	4593      	cmp	fp, r2
 8001530:	4192      	sbcs	r2, r2
 8001532:	4589      	cmp	r9, r1
 8001534:	4189      	sbcs	r1, r1
 8001536:	426d      	negs	r5, r5
 8001538:	4240      	negs	r0, r0
 800153a:	4328      	orrs	r0, r5
 800153c:	0c24      	lsrs	r4, r4, #16
 800153e:	4252      	negs	r2, r2
 8001540:	4249      	negs	r1, r1
 8001542:	430a      	orrs	r2, r1
 8001544:	9b03      	ldr	r3, [sp, #12]
 8001546:	1900      	adds	r0, r0, r4
 8001548:	1880      	adds	r0, r0, r2
 800154a:	18c7      	adds	r7, r0, r3
 800154c:	464b      	mov	r3, r9
 800154e:	0ddc      	lsrs	r4, r3, #23
 8001550:	9b04      	ldr	r3, [sp, #16]
 8001552:	0275      	lsls	r5, r6, #9
 8001554:	431d      	orrs	r5, r3
 8001556:	1e6a      	subs	r2, r5, #1
 8001558:	4195      	sbcs	r5, r2
 800155a:	464b      	mov	r3, r9
 800155c:	0df6      	lsrs	r6, r6, #23
 800155e:	027f      	lsls	r7, r7, #9
 8001560:	4335      	orrs	r5, r6
 8001562:	025a      	lsls	r2, r3, #9
 8001564:	433c      	orrs	r4, r7
 8001566:	4315      	orrs	r5, r2
 8001568:	01fb      	lsls	r3, r7, #7
 800156a:	d400      	bmi.n	800156e <__aeabi_dmul+0x24a>
 800156c:	e11c      	b.n	80017a8 <__aeabi_dmul+0x484>
 800156e:	2101      	movs	r1, #1
 8001570:	086a      	lsrs	r2, r5, #1
 8001572:	400d      	ands	r5, r1
 8001574:	4315      	orrs	r5, r2
 8001576:	07e2      	lsls	r2, r4, #31
 8001578:	4315      	orrs	r5, r2
 800157a:	0864      	lsrs	r4, r4, #1
 800157c:	494f      	ldr	r1, [pc, #316]	; (80016bc <__aeabi_dmul+0x398>)
 800157e:	4461      	add	r1, ip
 8001580:	2900      	cmp	r1, #0
 8001582:	dc00      	bgt.n	8001586 <__aeabi_dmul+0x262>
 8001584:	e0b0      	b.n	80016e8 <__aeabi_dmul+0x3c4>
 8001586:	076b      	lsls	r3, r5, #29
 8001588:	d009      	beq.n	800159e <__aeabi_dmul+0x27a>
 800158a:	220f      	movs	r2, #15
 800158c:	402a      	ands	r2, r5
 800158e:	2a04      	cmp	r2, #4
 8001590:	d005      	beq.n	800159e <__aeabi_dmul+0x27a>
 8001592:	1d2a      	adds	r2, r5, #4
 8001594:	42aa      	cmp	r2, r5
 8001596:	41ad      	sbcs	r5, r5
 8001598:	426d      	negs	r5, r5
 800159a:	1964      	adds	r4, r4, r5
 800159c:	0015      	movs	r5, r2
 800159e:	01e3      	lsls	r3, r4, #7
 80015a0:	d504      	bpl.n	80015ac <__aeabi_dmul+0x288>
 80015a2:	2180      	movs	r1, #128	; 0x80
 80015a4:	4a46      	ldr	r2, [pc, #280]	; (80016c0 <__aeabi_dmul+0x39c>)
 80015a6:	00c9      	lsls	r1, r1, #3
 80015a8:	4014      	ands	r4, r2
 80015aa:	4461      	add	r1, ip
 80015ac:	4a45      	ldr	r2, [pc, #276]	; (80016c4 <__aeabi_dmul+0x3a0>)
 80015ae:	4291      	cmp	r1, r2
 80015b0:	dd00      	ble.n	80015b4 <__aeabi_dmul+0x290>
 80015b2:	e726      	b.n	8001402 <__aeabi_dmul+0xde>
 80015b4:	0762      	lsls	r2, r4, #29
 80015b6:	08ed      	lsrs	r5, r5, #3
 80015b8:	0264      	lsls	r4, r4, #9
 80015ba:	0549      	lsls	r1, r1, #21
 80015bc:	4315      	orrs	r5, r2
 80015be:	0b24      	lsrs	r4, r4, #12
 80015c0:	0d4a      	lsrs	r2, r1, #21
 80015c2:	e710      	b.n	80013e6 <__aeabi_dmul+0xc2>
 80015c4:	4652      	mov	r2, sl
 80015c6:	4332      	orrs	r2, r6
 80015c8:	d100      	bne.n	80015cc <__aeabi_dmul+0x2a8>
 80015ca:	e07f      	b.n	80016cc <__aeabi_dmul+0x3a8>
 80015cc:	2e00      	cmp	r6, #0
 80015ce:	d100      	bne.n	80015d2 <__aeabi_dmul+0x2ae>
 80015d0:	e0dc      	b.n	800178c <__aeabi_dmul+0x468>
 80015d2:	0030      	movs	r0, r6
 80015d4:	f000 fd4e 	bl	8002074 <__clzsi2>
 80015d8:	0002      	movs	r2, r0
 80015da:	3a0b      	subs	r2, #11
 80015dc:	231d      	movs	r3, #29
 80015de:	0001      	movs	r1, r0
 80015e0:	1a9b      	subs	r3, r3, r2
 80015e2:	4652      	mov	r2, sl
 80015e4:	3908      	subs	r1, #8
 80015e6:	40da      	lsrs	r2, r3
 80015e8:	408e      	lsls	r6, r1
 80015ea:	4316      	orrs	r6, r2
 80015ec:	4652      	mov	r2, sl
 80015ee:	408a      	lsls	r2, r1
 80015f0:	9b00      	ldr	r3, [sp, #0]
 80015f2:	4935      	ldr	r1, [pc, #212]	; (80016c8 <__aeabi_dmul+0x3a4>)
 80015f4:	1a18      	subs	r0, r3, r0
 80015f6:	0003      	movs	r3, r0
 80015f8:	468c      	mov	ip, r1
 80015fa:	4463      	add	r3, ip
 80015fc:	2000      	movs	r0, #0
 80015fe:	9300      	str	r3, [sp, #0]
 8001600:	e6d3      	b.n	80013aa <__aeabi_dmul+0x86>
 8001602:	0025      	movs	r5, r4
 8001604:	4305      	orrs	r5, r0
 8001606:	d04a      	beq.n	800169e <__aeabi_dmul+0x37a>
 8001608:	2c00      	cmp	r4, #0
 800160a:	d100      	bne.n	800160e <__aeabi_dmul+0x2ea>
 800160c:	e0b0      	b.n	8001770 <__aeabi_dmul+0x44c>
 800160e:	0020      	movs	r0, r4
 8001610:	f000 fd30 	bl	8002074 <__clzsi2>
 8001614:	0001      	movs	r1, r0
 8001616:	0002      	movs	r2, r0
 8001618:	390b      	subs	r1, #11
 800161a:	231d      	movs	r3, #29
 800161c:	0010      	movs	r0, r2
 800161e:	1a5b      	subs	r3, r3, r1
 8001620:	0031      	movs	r1, r6
 8001622:	0035      	movs	r5, r6
 8001624:	3808      	subs	r0, #8
 8001626:	4084      	lsls	r4, r0
 8001628:	40d9      	lsrs	r1, r3
 800162a:	4085      	lsls	r5, r0
 800162c:	430c      	orrs	r4, r1
 800162e:	4826      	ldr	r0, [pc, #152]	; (80016c8 <__aeabi_dmul+0x3a4>)
 8001630:	1a83      	subs	r3, r0, r2
 8001632:	9300      	str	r3, [sp, #0]
 8001634:	2300      	movs	r3, #0
 8001636:	4699      	mov	r9, r3
 8001638:	469b      	mov	fp, r3
 800163a:	e697      	b.n	800136c <__aeabi_dmul+0x48>
 800163c:	0005      	movs	r5, r0
 800163e:	4325      	orrs	r5, r4
 8001640:	d126      	bne.n	8001690 <__aeabi_dmul+0x36c>
 8001642:	2208      	movs	r2, #8
 8001644:	9300      	str	r3, [sp, #0]
 8001646:	2302      	movs	r3, #2
 8001648:	2400      	movs	r4, #0
 800164a:	4691      	mov	r9, r2
 800164c:	469b      	mov	fp, r3
 800164e:	e68d      	b.n	800136c <__aeabi_dmul+0x48>
 8001650:	4652      	mov	r2, sl
 8001652:	9b00      	ldr	r3, [sp, #0]
 8001654:	4332      	orrs	r2, r6
 8001656:	d110      	bne.n	800167a <__aeabi_dmul+0x356>
 8001658:	4915      	ldr	r1, [pc, #84]	; (80016b0 <__aeabi_dmul+0x38c>)
 800165a:	2600      	movs	r6, #0
 800165c:	468c      	mov	ip, r1
 800165e:	4463      	add	r3, ip
 8001660:	4649      	mov	r1, r9
 8001662:	9300      	str	r3, [sp, #0]
 8001664:	2302      	movs	r3, #2
 8001666:	4319      	orrs	r1, r3
 8001668:	4689      	mov	r9, r1
 800166a:	2002      	movs	r0, #2
 800166c:	e69d      	b.n	80013aa <__aeabi_dmul+0x86>
 800166e:	465b      	mov	r3, fp
 8001670:	9701      	str	r7, [sp, #4]
 8001672:	2b02      	cmp	r3, #2
 8001674:	d000      	beq.n	8001678 <__aeabi_dmul+0x354>
 8001676:	e6ad      	b.n	80013d4 <__aeabi_dmul+0xb0>
 8001678:	e6c3      	b.n	8001402 <__aeabi_dmul+0xde>
 800167a:	4a0d      	ldr	r2, [pc, #52]	; (80016b0 <__aeabi_dmul+0x38c>)
 800167c:	2003      	movs	r0, #3
 800167e:	4694      	mov	ip, r2
 8001680:	4463      	add	r3, ip
 8001682:	464a      	mov	r2, r9
 8001684:	9300      	str	r3, [sp, #0]
 8001686:	2303      	movs	r3, #3
 8001688:	431a      	orrs	r2, r3
 800168a:	4691      	mov	r9, r2
 800168c:	4652      	mov	r2, sl
 800168e:	e68c      	b.n	80013aa <__aeabi_dmul+0x86>
 8001690:	220c      	movs	r2, #12
 8001692:	9300      	str	r3, [sp, #0]
 8001694:	2303      	movs	r3, #3
 8001696:	0005      	movs	r5, r0
 8001698:	4691      	mov	r9, r2
 800169a:	469b      	mov	fp, r3
 800169c:	e666      	b.n	800136c <__aeabi_dmul+0x48>
 800169e:	2304      	movs	r3, #4
 80016a0:	4699      	mov	r9, r3
 80016a2:	2300      	movs	r3, #0
 80016a4:	9300      	str	r3, [sp, #0]
 80016a6:	3301      	adds	r3, #1
 80016a8:	2400      	movs	r4, #0
 80016aa:	469b      	mov	fp, r3
 80016ac:	e65e      	b.n	800136c <__aeabi_dmul+0x48>
 80016ae:	46c0      	nop			; (mov r8, r8)
 80016b0:	000007ff 	.word	0x000007ff
 80016b4:	fffffc01 	.word	0xfffffc01
 80016b8:	080074e8 	.word	0x080074e8
 80016bc:	000003ff 	.word	0x000003ff
 80016c0:	feffffff 	.word	0xfeffffff
 80016c4:	000007fe 	.word	0x000007fe
 80016c8:	fffffc0d 	.word	0xfffffc0d
 80016cc:	4649      	mov	r1, r9
 80016ce:	2301      	movs	r3, #1
 80016d0:	4319      	orrs	r1, r3
 80016d2:	4689      	mov	r9, r1
 80016d4:	2600      	movs	r6, #0
 80016d6:	2001      	movs	r0, #1
 80016d8:	e667      	b.n	80013aa <__aeabi_dmul+0x86>
 80016da:	2300      	movs	r3, #0
 80016dc:	2480      	movs	r4, #128	; 0x80
 80016de:	2500      	movs	r5, #0
 80016e0:	4a43      	ldr	r2, [pc, #268]	; (80017f0 <__aeabi_dmul+0x4cc>)
 80016e2:	9301      	str	r3, [sp, #4]
 80016e4:	0324      	lsls	r4, r4, #12
 80016e6:	e67e      	b.n	80013e6 <__aeabi_dmul+0xc2>
 80016e8:	2001      	movs	r0, #1
 80016ea:	1a40      	subs	r0, r0, r1
 80016ec:	2838      	cmp	r0, #56	; 0x38
 80016ee:	dd00      	ble.n	80016f2 <__aeabi_dmul+0x3ce>
 80016f0:	e676      	b.n	80013e0 <__aeabi_dmul+0xbc>
 80016f2:	281f      	cmp	r0, #31
 80016f4:	dd5b      	ble.n	80017ae <__aeabi_dmul+0x48a>
 80016f6:	221f      	movs	r2, #31
 80016f8:	0023      	movs	r3, r4
 80016fa:	4252      	negs	r2, r2
 80016fc:	1a51      	subs	r1, r2, r1
 80016fe:	40cb      	lsrs	r3, r1
 8001700:	0019      	movs	r1, r3
 8001702:	2820      	cmp	r0, #32
 8001704:	d003      	beq.n	800170e <__aeabi_dmul+0x3ea>
 8001706:	4a3b      	ldr	r2, [pc, #236]	; (80017f4 <__aeabi_dmul+0x4d0>)
 8001708:	4462      	add	r2, ip
 800170a:	4094      	lsls	r4, r2
 800170c:	4325      	orrs	r5, r4
 800170e:	1e6a      	subs	r2, r5, #1
 8001710:	4195      	sbcs	r5, r2
 8001712:	002a      	movs	r2, r5
 8001714:	430a      	orrs	r2, r1
 8001716:	2107      	movs	r1, #7
 8001718:	000d      	movs	r5, r1
 800171a:	2400      	movs	r4, #0
 800171c:	4015      	ands	r5, r2
 800171e:	4211      	tst	r1, r2
 8001720:	d05b      	beq.n	80017da <__aeabi_dmul+0x4b6>
 8001722:	210f      	movs	r1, #15
 8001724:	2400      	movs	r4, #0
 8001726:	4011      	ands	r1, r2
 8001728:	2904      	cmp	r1, #4
 800172a:	d053      	beq.n	80017d4 <__aeabi_dmul+0x4b0>
 800172c:	1d11      	adds	r1, r2, #4
 800172e:	4291      	cmp	r1, r2
 8001730:	4192      	sbcs	r2, r2
 8001732:	4252      	negs	r2, r2
 8001734:	18a4      	adds	r4, r4, r2
 8001736:	000a      	movs	r2, r1
 8001738:	0223      	lsls	r3, r4, #8
 800173a:	d54b      	bpl.n	80017d4 <__aeabi_dmul+0x4b0>
 800173c:	2201      	movs	r2, #1
 800173e:	2400      	movs	r4, #0
 8001740:	2500      	movs	r5, #0
 8001742:	e650      	b.n	80013e6 <__aeabi_dmul+0xc2>
 8001744:	2380      	movs	r3, #128	; 0x80
 8001746:	031b      	lsls	r3, r3, #12
 8001748:	421c      	tst	r4, r3
 800174a:	d009      	beq.n	8001760 <__aeabi_dmul+0x43c>
 800174c:	421e      	tst	r6, r3
 800174e:	d107      	bne.n	8001760 <__aeabi_dmul+0x43c>
 8001750:	4333      	orrs	r3, r6
 8001752:	031c      	lsls	r4, r3, #12
 8001754:	4643      	mov	r3, r8
 8001756:	0015      	movs	r5, r2
 8001758:	0b24      	lsrs	r4, r4, #12
 800175a:	4a25      	ldr	r2, [pc, #148]	; (80017f0 <__aeabi_dmul+0x4cc>)
 800175c:	9301      	str	r3, [sp, #4]
 800175e:	e642      	b.n	80013e6 <__aeabi_dmul+0xc2>
 8001760:	2280      	movs	r2, #128	; 0x80
 8001762:	0312      	lsls	r2, r2, #12
 8001764:	4314      	orrs	r4, r2
 8001766:	0324      	lsls	r4, r4, #12
 8001768:	4a21      	ldr	r2, [pc, #132]	; (80017f0 <__aeabi_dmul+0x4cc>)
 800176a:	0b24      	lsrs	r4, r4, #12
 800176c:	9701      	str	r7, [sp, #4]
 800176e:	e63a      	b.n	80013e6 <__aeabi_dmul+0xc2>
 8001770:	f000 fc80 	bl	8002074 <__clzsi2>
 8001774:	0001      	movs	r1, r0
 8001776:	0002      	movs	r2, r0
 8001778:	3115      	adds	r1, #21
 800177a:	3220      	adds	r2, #32
 800177c:	291c      	cmp	r1, #28
 800177e:	dc00      	bgt.n	8001782 <__aeabi_dmul+0x45e>
 8001780:	e74b      	b.n	800161a <__aeabi_dmul+0x2f6>
 8001782:	0034      	movs	r4, r6
 8001784:	3808      	subs	r0, #8
 8001786:	2500      	movs	r5, #0
 8001788:	4084      	lsls	r4, r0
 800178a:	e750      	b.n	800162e <__aeabi_dmul+0x30a>
 800178c:	f000 fc72 	bl	8002074 <__clzsi2>
 8001790:	0003      	movs	r3, r0
 8001792:	001a      	movs	r2, r3
 8001794:	3215      	adds	r2, #21
 8001796:	3020      	adds	r0, #32
 8001798:	2a1c      	cmp	r2, #28
 800179a:	dc00      	bgt.n	800179e <__aeabi_dmul+0x47a>
 800179c:	e71e      	b.n	80015dc <__aeabi_dmul+0x2b8>
 800179e:	4656      	mov	r6, sl
 80017a0:	3b08      	subs	r3, #8
 80017a2:	2200      	movs	r2, #0
 80017a4:	409e      	lsls	r6, r3
 80017a6:	e723      	b.n	80015f0 <__aeabi_dmul+0x2cc>
 80017a8:	9b00      	ldr	r3, [sp, #0]
 80017aa:	469c      	mov	ip, r3
 80017ac:	e6e6      	b.n	800157c <__aeabi_dmul+0x258>
 80017ae:	4912      	ldr	r1, [pc, #72]	; (80017f8 <__aeabi_dmul+0x4d4>)
 80017b0:	0022      	movs	r2, r4
 80017b2:	4461      	add	r1, ip
 80017b4:	002e      	movs	r6, r5
 80017b6:	408d      	lsls	r5, r1
 80017b8:	408a      	lsls	r2, r1
 80017ba:	40c6      	lsrs	r6, r0
 80017bc:	1e69      	subs	r1, r5, #1
 80017be:	418d      	sbcs	r5, r1
 80017c0:	4332      	orrs	r2, r6
 80017c2:	432a      	orrs	r2, r5
 80017c4:	40c4      	lsrs	r4, r0
 80017c6:	0753      	lsls	r3, r2, #29
 80017c8:	d0b6      	beq.n	8001738 <__aeabi_dmul+0x414>
 80017ca:	210f      	movs	r1, #15
 80017cc:	4011      	ands	r1, r2
 80017ce:	2904      	cmp	r1, #4
 80017d0:	d1ac      	bne.n	800172c <__aeabi_dmul+0x408>
 80017d2:	e7b1      	b.n	8001738 <__aeabi_dmul+0x414>
 80017d4:	0765      	lsls	r5, r4, #29
 80017d6:	0264      	lsls	r4, r4, #9
 80017d8:	0b24      	lsrs	r4, r4, #12
 80017da:	08d2      	lsrs	r2, r2, #3
 80017dc:	4315      	orrs	r5, r2
 80017de:	2200      	movs	r2, #0
 80017e0:	e601      	b.n	80013e6 <__aeabi_dmul+0xc2>
 80017e2:	2280      	movs	r2, #128	; 0x80
 80017e4:	0312      	lsls	r2, r2, #12
 80017e6:	4314      	orrs	r4, r2
 80017e8:	0324      	lsls	r4, r4, #12
 80017ea:	4a01      	ldr	r2, [pc, #4]	; (80017f0 <__aeabi_dmul+0x4cc>)
 80017ec:	0b24      	lsrs	r4, r4, #12
 80017ee:	e5fa      	b.n	80013e6 <__aeabi_dmul+0xc2>
 80017f0:	000007ff 	.word	0x000007ff
 80017f4:	0000043e 	.word	0x0000043e
 80017f8:	0000041e 	.word	0x0000041e

080017fc <__aeabi_dsub>:
 80017fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80017fe:	4657      	mov	r7, sl
 8001800:	464e      	mov	r6, r9
 8001802:	4645      	mov	r5, r8
 8001804:	46de      	mov	lr, fp
 8001806:	b5e0      	push	{r5, r6, r7, lr}
 8001808:	001e      	movs	r6, r3
 800180a:	0017      	movs	r7, r2
 800180c:	004a      	lsls	r2, r1, #1
 800180e:	030b      	lsls	r3, r1, #12
 8001810:	0d52      	lsrs	r2, r2, #21
 8001812:	0a5b      	lsrs	r3, r3, #9
 8001814:	4690      	mov	r8, r2
 8001816:	0f42      	lsrs	r2, r0, #29
 8001818:	431a      	orrs	r2, r3
 800181a:	0fcd      	lsrs	r5, r1, #31
 800181c:	4ccd      	ldr	r4, [pc, #820]	; (8001b54 <__aeabi_dsub+0x358>)
 800181e:	0331      	lsls	r1, r6, #12
 8001820:	00c3      	lsls	r3, r0, #3
 8001822:	4694      	mov	ip, r2
 8001824:	0070      	lsls	r0, r6, #1
 8001826:	0f7a      	lsrs	r2, r7, #29
 8001828:	0a49      	lsrs	r1, r1, #9
 800182a:	00ff      	lsls	r7, r7, #3
 800182c:	469a      	mov	sl, r3
 800182e:	46b9      	mov	r9, r7
 8001830:	0d40      	lsrs	r0, r0, #21
 8001832:	0ff6      	lsrs	r6, r6, #31
 8001834:	4311      	orrs	r1, r2
 8001836:	42a0      	cmp	r0, r4
 8001838:	d100      	bne.n	800183c <__aeabi_dsub+0x40>
 800183a:	e0b1      	b.n	80019a0 <__aeabi_dsub+0x1a4>
 800183c:	2201      	movs	r2, #1
 800183e:	4056      	eors	r6, r2
 8001840:	46b3      	mov	fp, r6
 8001842:	42b5      	cmp	r5, r6
 8001844:	d100      	bne.n	8001848 <__aeabi_dsub+0x4c>
 8001846:	e088      	b.n	800195a <__aeabi_dsub+0x15e>
 8001848:	4642      	mov	r2, r8
 800184a:	1a12      	subs	r2, r2, r0
 800184c:	2a00      	cmp	r2, #0
 800184e:	dc00      	bgt.n	8001852 <__aeabi_dsub+0x56>
 8001850:	e0ae      	b.n	80019b0 <__aeabi_dsub+0x1b4>
 8001852:	2800      	cmp	r0, #0
 8001854:	d100      	bne.n	8001858 <__aeabi_dsub+0x5c>
 8001856:	e0c1      	b.n	80019dc <__aeabi_dsub+0x1e0>
 8001858:	48be      	ldr	r0, [pc, #760]	; (8001b54 <__aeabi_dsub+0x358>)
 800185a:	4580      	cmp	r8, r0
 800185c:	d100      	bne.n	8001860 <__aeabi_dsub+0x64>
 800185e:	e151      	b.n	8001b04 <__aeabi_dsub+0x308>
 8001860:	2080      	movs	r0, #128	; 0x80
 8001862:	0400      	lsls	r0, r0, #16
 8001864:	4301      	orrs	r1, r0
 8001866:	2a38      	cmp	r2, #56	; 0x38
 8001868:	dd00      	ble.n	800186c <__aeabi_dsub+0x70>
 800186a:	e17b      	b.n	8001b64 <__aeabi_dsub+0x368>
 800186c:	2a1f      	cmp	r2, #31
 800186e:	dd00      	ble.n	8001872 <__aeabi_dsub+0x76>
 8001870:	e1ee      	b.n	8001c50 <__aeabi_dsub+0x454>
 8001872:	2020      	movs	r0, #32
 8001874:	003e      	movs	r6, r7
 8001876:	1a80      	subs	r0, r0, r2
 8001878:	000c      	movs	r4, r1
 800187a:	40d6      	lsrs	r6, r2
 800187c:	40d1      	lsrs	r1, r2
 800187e:	4087      	lsls	r7, r0
 8001880:	4662      	mov	r2, ip
 8001882:	4084      	lsls	r4, r0
 8001884:	1a52      	subs	r2, r2, r1
 8001886:	1e78      	subs	r0, r7, #1
 8001888:	4187      	sbcs	r7, r0
 800188a:	4694      	mov	ip, r2
 800188c:	4334      	orrs	r4, r6
 800188e:	4327      	orrs	r7, r4
 8001890:	1bdc      	subs	r4, r3, r7
 8001892:	42a3      	cmp	r3, r4
 8001894:	419b      	sbcs	r3, r3
 8001896:	4662      	mov	r2, ip
 8001898:	425b      	negs	r3, r3
 800189a:	1ad3      	subs	r3, r2, r3
 800189c:	4699      	mov	r9, r3
 800189e:	464b      	mov	r3, r9
 80018a0:	021b      	lsls	r3, r3, #8
 80018a2:	d400      	bmi.n	80018a6 <__aeabi_dsub+0xaa>
 80018a4:	e118      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 80018a6:	464b      	mov	r3, r9
 80018a8:	0258      	lsls	r0, r3, #9
 80018aa:	0a43      	lsrs	r3, r0, #9
 80018ac:	4699      	mov	r9, r3
 80018ae:	464b      	mov	r3, r9
 80018b0:	2b00      	cmp	r3, #0
 80018b2:	d100      	bne.n	80018b6 <__aeabi_dsub+0xba>
 80018b4:	e137      	b.n	8001b26 <__aeabi_dsub+0x32a>
 80018b6:	4648      	mov	r0, r9
 80018b8:	f000 fbdc 	bl	8002074 <__clzsi2>
 80018bc:	0001      	movs	r1, r0
 80018be:	3908      	subs	r1, #8
 80018c0:	2320      	movs	r3, #32
 80018c2:	0022      	movs	r2, r4
 80018c4:	4648      	mov	r0, r9
 80018c6:	1a5b      	subs	r3, r3, r1
 80018c8:	40da      	lsrs	r2, r3
 80018ca:	4088      	lsls	r0, r1
 80018cc:	408c      	lsls	r4, r1
 80018ce:	4643      	mov	r3, r8
 80018d0:	4310      	orrs	r0, r2
 80018d2:	4588      	cmp	r8, r1
 80018d4:	dd00      	ble.n	80018d8 <__aeabi_dsub+0xdc>
 80018d6:	e136      	b.n	8001b46 <__aeabi_dsub+0x34a>
 80018d8:	1ac9      	subs	r1, r1, r3
 80018da:	1c4b      	adds	r3, r1, #1
 80018dc:	2b1f      	cmp	r3, #31
 80018de:	dd00      	ble.n	80018e2 <__aeabi_dsub+0xe6>
 80018e0:	e0ea      	b.n	8001ab8 <__aeabi_dsub+0x2bc>
 80018e2:	2220      	movs	r2, #32
 80018e4:	0026      	movs	r6, r4
 80018e6:	1ad2      	subs	r2, r2, r3
 80018e8:	0001      	movs	r1, r0
 80018ea:	4094      	lsls	r4, r2
 80018ec:	40de      	lsrs	r6, r3
 80018ee:	40d8      	lsrs	r0, r3
 80018f0:	2300      	movs	r3, #0
 80018f2:	4091      	lsls	r1, r2
 80018f4:	1e62      	subs	r2, r4, #1
 80018f6:	4194      	sbcs	r4, r2
 80018f8:	4681      	mov	r9, r0
 80018fa:	4698      	mov	r8, r3
 80018fc:	4331      	orrs	r1, r6
 80018fe:	430c      	orrs	r4, r1
 8001900:	0763      	lsls	r3, r4, #29
 8001902:	d009      	beq.n	8001918 <__aeabi_dsub+0x11c>
 8001904:	230f      	movs	r3, #15
 8001906:	4023      	ands	r3, r4
 8001908:	2b04      	cmp	r3, #4
 800190a:	d005      	beq.n	8001918 <__aeabi_dsub+0x11c>
 800190c:	1d23      	adds	r3, r4, #4
 800190e:	42a3      	cmp	r3, r4
 8001910:	41a4      	sbcs	r4, r4
 8001912:	4264      	negs	r4, r4
 8001914:	44a1      	add	r9, r4
 8001916:	001c      	movs	r4, r3
 8001918:	464b      	mov	r3, r9
 800191a:	021b      	lsls	r3, r3, #8
 800191c:	d400      	bmi.n	8001920 <__aeabi_dsub+0x124>
 800191e:	e0de      	b.n	8001ade <__aeabi_dsub+0x2e2>
 8001920:	4641      	mov	r1, r8
 8001922:	4b8c      	ldr	r3, [pc, #560]	; (8001b54 <__aeabi_dsub+0x358>)
 8001924:	3101      	adds	r1, #1
 8001926:	4299      	cmp	r1, r3
 8001928:	d100      	bne.n	800192c <__aeabi_dsub+0x130>
 800192a:	e0e7      	b.n	8001afc <__aeabi_dsub+0x300>
 800192c:	464b      	mov	r3, r9
 800192e:	488a      	ldr	r0, [pc, #552]	; (8001b58 <__aeabi_dsub+0x35c>)
 8001930:	08e4      	lsrs	r4, r4, #3
 8001932:	4003      	ands	r3, r0
 8001934:	0018      	movs	r0, r3
 8001936:	0549      	lsls	r1, r1, #21
 8001938:	075b      	lsls	r3, r3, #29
 800193a:	0240      	lsls	r0, r0, #9
 800193c:	4323      	orrs	r3, r4
 800193e:	0d4a      	lsrs	r2, r1, #21
 8001940:	0b04      	lsrs	r4, r0, #12
 8001942:	0512      	lsls	r2, r2, #20
 8001944:	07ed      	lsls	r5, r5, #31
 8001946:	4322      	orrs	r2, r4
 8001948:	432a      	orrs	r2, r5
 800194a:	0018      	movs	r0, r3
 800194c:	0011      	movs	r1, r2
 800194e:	bcf0      	pop	{r4, r5, r6, r7}
 8001950:	46bb      	mov	fp, r7
 8001952:	46b2      	mov	sl, r6
 8001954:	46a9      	mov	r9, r5
 8001956:	46a0      	mov	r8, r4
 8001958:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800195a:	4642      	mov	r2, r8
 800195c:	1a12      	subs	r2, r2, r0
 800195e:	2a00      	cmp	r2, #0
 8001960:	dd52      	ble.n	8001a08 <__aeabi_dsub+0x20c>
 8001962:	2800      	cmp	r0, #0
 8001964:	d100      	bne.n	8001968 <__aeabi_dsub+0x16c>
 8001966:	e09c      	b.n	8001aa2 <__aeabi_dsub+0x2a6>
 8001968:	45a0      	cmp	r8, r4
 800196a:	d100      	bne.n	800196e <__aeabi_dsub+0x172>
 800196c:	e0ca      	b.n	8001b04 <__aeabi_dsub+0x308>
 800196e:	2080      	movs	r0, #128	; 0x80
 8001970:	0400      	lsls	r0, r0, #16
 8001972:	4301      	orrs	r1, r0
 8001974:	2a38      	cmp	r2, #56	; 0x38
 8001976:	dd00      	ble.n	800197a <__aeabi_dsub+0x17e>
 8001978:	e149      	b.n	8001c0e <__aeabi_dsub+0x412>
 800197a:	2a1f      	cmp	r2, #31
 800197c:	dc00      	bgt.n	8001980 <__aeabi_dsub+0x184>
 800197e:	e197      	b.n	8001cb0 <__aeabi_dsub+0x4b4>
 8001980:	0010      	movs	r0, r2
 8001982:	000e      	movs	r6, r1
 8001984:	3820      	subs	r0, #32
 8001986:	40c6      	lsrs	r6, r0
 8001988:	2a20      	cmp	r2, #32
 800198a:	d004      	beq.n	8001996 <__aeabi_dsub+0x19a>
 800198c:	2040      	movs	r0, #64	; 0x40
 800198e:	1a82      	subs	r2, r0, r2
 8001990:	4091      	lsls	r1, r2
 8001992:	430f      	orrs	r7, r1
 8001994:	46b9      	mov	r9, r7
 8001996:	464c      	mov	r4, r9
 8001998:	1e62      	subs	r2, r4, #1
 800199a:	4194      	sbcs	r4, r2
 800199c:	4334      	orrs	r4, r6
 800199e:	e13a      	b.n	8001c16 <__aeabi_dsub+0x41a>
 80019a0:	000a      	movs	r2, r1
 80019a2:	433a      	orrs	r2, r7
 80019a4:	d028      	beq.n	80019f8 <__aeabi_dsub+0x1fc>
 80019a6:	46b3      	mov	fp, r6
 80019a8:	42b5      	cmp	r5, r6
 80019aa:	d02b      	beq.n	8001a04 <__aeabi_dsub+0x208>
 80019ac:	4a6b      	ldr	r2, [pc, #428]	; (8001b5c <__aeabi_dsub+0x360>)
 80019ae:	4442      	add	r2, r8
 80019b0:	2a00      	cmp	r2, #0
 80019b2:	d05d      	beq.n	8001a70 <__aeabi_dsub+0x274>
 80019b4:	4642      	mov	r2, r8
 80019b6:	4644      	mov	r4, r8
 80019b8:	1a82      	subs	r2, r0, r2
 80019ba:	2c00      	cmp	r4, #0
 80019bc:	d000      	beq.n	80019c0 <__aeabi_dsub+0x1c4>
 80019be:	e0f5      	b.n	8001bac <__aeabi_dsub+0x3b0>
 80019c0:	4665      	mov	r5, ip
 80019c2:	431d      	orrs	r5, r3
 80019c4:	d100      	bne.n	80019c8 <__aeabi_dsub+0x1cc>
 80019c6:	e19c      	b.n	8001d02 <__aeabi_dsub+0x506>
 80019c8:	1e55      	subs	r5, r2, #1
 80019ca:	2a01      	cmp	r2, #1
 80019cc:	d100      	bne.n	80019d0 <__aeabi_dsub+0x1d4>
 80019ce:	e1fb      	b.n	8001dc8 <__aeabi_dsub+0x5cc>
 80019d0:	4c60      	ldr	r4, [pc, #384]	; (8001b54 <__aeabi_dsub+0x358>)
 80019d2:	42a2      	cmp	r2, r4
 80019d4:	d100      	bne.n	80019d8 <__aeabi_dsub+0x1dc>
 80019d6:	e1bd      	b.n	8001d54 <__aeabi_dsub+0x558>
 80019d8:	002a      	movs	r2, r5
 80019da:	e0f0      	b.n	8001bbe <__aeabi_dsub+0x3c2>
 80019dc:	0008      	movs	r0, r1
 80019de:	4338      	orrs	r0, r7
 80019e0:	d100      	bne.n	80019e4 <__aeabi_dsub+0x1e8>
 80019e2:	e0c3      	b.n	8001b6c <__aeabi_dsub+0x370>
 80019e4:	1e50      	subs	r0, r2, #1
 80019e6:	2a01      	cmp	r2, #1
 80019e8:	d100      	bne.n	80019ec <__aeabi_dsub+0x1f0>
 80019ea:	e1a8      	b.n	8001d3e <__aeabi_dsub+0x542>
 80019ec:	4c59      	ldr	r4, [pc, #356]	; (8001b54 <__aeabi_dsub+0x358>)
 80019ee:	42a2      	cmp	r2, r4
 80019f0:	d100      	bne.n	80019f4 <__aeabi_dsub+0x1f8>
 80019f2:	e087      	b.n	8001b04 <__aeabi_dsub+0x308>
 80019f4:	0002      	movs	r2, r0
 80019f6:	e736      	b.n	8001866 <__aeabi_dsub+0x6a>
 80019f8:	2201      	movs	r2, #1
 80019fa:	4056      	eors	r6, r2
 80019fc:	46b3      	mov	fp, r6
 80019fe:	42b5      	cmp	r5, r6
 8001a00:	d000      	beq.n	8001a04 <__aeabi_dsub+0x208>
 8001a02:	e721      	b.n	8001848 <__aeabi_dsub+0x4c>
 8001a04:	4a55      	ldr	r2, [pc, #340]	; (8001b5c <__aeabi_dsub+0x360>)
 8001a06:	4442      	add	r2, r8
 8001a08:	2a00      	cmp	r2, #0
 8001a0a:	d100      	bne.n	8001a0e <__aeabi_dsub+0x212>
 8001a0c:	e0b5      	b.n	8001b7a <__aeabi_dsub+0x37e>
 8001a0e:	4642      	mov	r2, r8
 8001a10:	4644      	mov	r4, r8
 8001a12:	1a82      	subs	r2, r0, r2
 8001a14:	2c00      	cmp	r4, #0
 8001a16:	d100      	bne.n	8001a1a <__aeabi_dsub+0x21e>
 8001a18:	e138      	b.n	8001c8c <__aeabi_dsub+0x490>
 8001a1a:	4e4e      	ldr	r6, [pc, #312]	; (8001b54 <__aeabi_dsub+0x358>)
 8001a1c:	42b0      	cmp	r0, r6
 8001a1e:	d100      	bne.n	8001a22 <__aeabi_dsub+0x226>
 8001a20:	e1de      	b.n	8001de0 <__aeabi_dsub+0x5e4>
 8001a22:	2680      	movs	r6, #128	; 0x80
 8001a24:	4664      	mov	r4, ip
 8001a26:	0436      	lsls	r6, r6, #16
 8001a28:	4334      	orrs	r4, r6
 8001a2a:	46a4      	mov	ip, r4
 8001a2c:	2a38      	cmp	r2, #56	; 0x38
 8001a2e:	dd00      	ble.n	8001a32 <__aeabi_dsub+0x236>
 8001a30:	e196      	b.n	8001d60 <__aeabi_dsub+0x564>
 8001a32:	2a1f      	cmp	r2, #31
 8001a34:	dd00      	ble.n	8001a38 <__aeabi_dsub+0x23c>
 8001a36:	e224      	b.n	8001e82 <__aeabi_dsub+0x686>
 8001a38:	2620      	movs	r6, #32
 8001a3a:	1ab4      	subs	r4, r6, r2
 8001a3c:	46a2      	mov	sl, r4
 8001a3e:	4664      	mov	r4, ip
 8001a40:	4656      	mov	r6, sl
 8001a42:	40b4      	lsls	r4, r6
 8001a44:	46a1      	mov	r9, r4
 8001a46:	001c      	movs	r4, r3
 8001a48:	464e      	mov	r6, r9
 8001a4a:	40d4      	lsrs	r4, r2
 8001a4c:	4326      	orrs	r6, r4
 8001a4e:	0034      	movs	r4, r6
 8001a50:	4656      	mov	r6, sl
 8001a52:	40b3      	lsls	r3, r6
 8001a54:	1e5e      	subs	r6, r3, #1
 8001a56:	41b3      	sbcs	r3, r6
 8001a58:	431c      	orrs	r4, r3
 8001a5a:	4663      	mov	r3, ip
 8001a5c:	40d3      	lsrs	r3, r2
 8001a5e:	18c9      	adds	r1, r1, r3
 8001a60:	19e4      	adds	r4, r4, r7
 8001a62:	42bc      	cmp	r4, r7
 8001a64:	41bf      	sbcs	r7, r7
 8001a66:	427f      	negs	r7, r7
 8001a68:	46b9      	mov	r9, r7
 8001a6a:	4680      	mov	r8, r0
 8001a6c:	4489      	add	r9, r1
 8001a6e:	e0d8      	b.n	8001c22 <__aeabi_dsub+0x426>
 8001a70:	4640      	mov	r0, r8
 8001a72:	4c3b      	ldr	r4, [pc, #236]	; (8001b60 <__aeabi_dsub+0x364>)
 8001a74:	3001      	adds	r0, #1
 8001a76:	4220      	tst	r0, r4
 8001a78:	d000      	beq.n	8001a7c <__aeabi_dsub+0x280>
 8001a7a:	e0b4      	b.n	8001be6 <__aeabi_dsub+0x3ea>
 8001a7c:	4640      	mov	r0, r8
 8001a7e:	2800      	cmp	r0, #0
 8001a80:	d000      	beq.n	8001a84 <__aeabi_dsub+0x288>
 8001a82:	e144      	b.n	8001d0e <__aeabi_dsub+0x512>
 8001a84:	4660      	mov	r0, ip
 8001a86:	4318      	orrs	r0, r3
 8001a88:	d100      	bne.n	8001a8c <__aeabi_dsub+0x290>
 8001a8a:	e190      	b.n	8001dae <__aeabi_dsub+0x5b2>
 8001a8c:	0008      	movs	r0, r1
 8001a8e:	4338      	orrs	r0, r7
 8001a90:	d000      	beq.n	8001a94 <__aeabi_dsub+0x298>
 8001a92:	e1aa      	b.n	8001dea <__aeabi_dsub+0x5ee>
 8001a94:	4661      	mov	r1, ip
 8001a96:	08db      	lsrs	r3, r3, #3
 8001a98:	0749      	lsls	r1, r1, #29
 8001a9a:	430b      	orrs	r3, r1
 8001a9c:	4661      	mov	r1, ip
 8001a9e:	08cc      	lsrs	r4, r1, #3
 8001aa0:	e027      	b.n	8001af2 <__aeabi_dsub+0x2f6>
 8001aa2:	0008      	movs	r0, r1
 8001aa4:	4338      	orrs	r0, r7
 8001aa6:	d061      	beq.n	8001b6c <__aeabi_dsub+0x370>
 8001aa8:	1e50      	subs	r0, r2, #1
 8001aaa:	2a01      	cmp	r2, #1
 8001aac:	d100      	bne.n	8001ab0 <__aeabi_dsub+0x2b4>
 8001aae:	e139      	b.n	8001d24 <__aeabi_dsub+0x528>
 8001ab0:	42a2      	cmp	r2, r4
 8001ab2:	d027      	beq.n	8001b04 <__aeabi_dsub+0x308>
 8001ab4:	0002      	movs	r2, r0
 8001ab6:	e75d      	b.n	8001974 <__aeabi_dsub+0x178>
 8001ab8:	0002      	movs	r2, r0
 8001aba:	391f      	subs	r1, #31
 8001abc:	40ca      	lsrs	r2, r1
 8001abe:	0011      	movs	r1, r2
 8001ac0:	2b20      	cmp	r3, #32
 8001ac2:	d003      	beq.n	8001acc <__aeabi_dsub+0x2d0>
 8001ac4:	2240      	movs	r2, #64	; 0x40
 8001ac6:	1ad3      	subs	r3, r2, r3
 8001ac8:	4098      	lsls	r0, r3
 8001aca:	4304      	orrs	r4, r0
 8001acc:	1e63      	subs	r3, r4, #1
 8001ace:	419c      	sbcs	r4, r3
 8001ad0:	2300      	movs	r3, #0
 8001ad2:	4699      	mov	r9, r3
 8001ad4:	4698      	mov	r8, r3
 8001ad6:	430c      	orrs	r4, r1
 8001ad8:	0763      	lsls	r3, r4, #29
 8001ada:	d000      	beq.n	8001ade <__aeabi_dsub+0x2e2>
 8001adc:	e712      	b.n	8001904 <__aeabi_dsub+0x108>
 8001ade:	464b      	mov	r3, r9
 8001ae0:	464a      	mov	r2, r9
 8001ae2:	08e4      	lsrs	r4, r4, #3
 8001ae4:	075b      	lsls	r3, r3, #29
 8001ae6:	4323      	orrs	r3, r4
 8001ae8:	08d4      	lsrs	r4, r2, #3
 8001aea:	4642      	mov	r2, r8
 8001aec:	4919      	ldr	r1, [pc, #100]	; (8001b54 <__aeabi_dsub+0x358>)
 8001aee:	428a      	cmp	r2, r1
 8001af0:	d00e      	beq.n	8001b10 <__aeabi_dsub+0x314>
 8001af2:	0324      	lsls	r4, r4, #12
 8001af4:	0552      	lsls	r2, r2, #21
 8001af6:	0b24      	lsrs	r4, r4, #12
 8001af8:	0d52      	lsrs	r2, r2, #21
 8001afa:	e722      	b.n	8001942 <__aeabi_dsub+0x146>
 8001afc:	000a      	movs	r2, r1
 8001afe:	2400      	movs	r4, #0
 8001b00:	2300      	movs	r3, #0
 8001b02:	e71e      	b.n	8001942 <__aeabi_dsub+0x146>
 8001b04:	08db      	lsrs	r3, r3, #3
 8001b06:	4662      	mov	r2, ip
 8001b08:	0752      	lsls	r2, r2, #29
 8001b0a:	4313      	orrs	r3, r2
 8001b0c:	4662      	mov	r2, ip
 8001b0e:	08d4      	lsrs	r4, r2, #3
 8001b10:	001a      	movs	r2, r3
 8001b12:	4322      	orrs	r2, r4
 8001b14:	d100      	bne.n	8001b18 <__aeabi_dsub+0x31c>
 8001b16:	e1fc      	b.n	8001f12 <__aeabi_dsub+0x716>
 8001b18:	2280      	movs	r2, #128	; 0x80
 8001b1a:	0312      	lsls	r2, r2, #12
 8001b1c:	4314      	orrs	r4, r2
 8001b1e:	0324      	lsls	r4, r4, #12
 8001b20:	4a0c      	ldr	r2, [pc, #48]	; (8001b54 <__aeabi_dsub+0x358>)
 8001b22:	0b24      	lsrs	r4, r4, #12
 8001b24:	e70d      	b.n	8001942 <__aeabi_dsub+0x146>
 8001b26:	0020      	movs	r0, r4
 8001b28:	f000 faa4 	bl	8002074 <__clzsi2>
 8001b2c:	0001      	movs	r1, r0
 8001b2e:	3118      	adds	r1, #24
 8001b30:	291f      	cmp	r1, #31
 8001b32:	dc00      	bgt.n	8001b36 <__aeabi_dsub+0x33a>
 8001b34:	e6c4      	b.n	80018c0 <__aeabi_dsub+0xc4>
 8001b36:	3808      	subs	r0, #8
 8001b38:	4084      	lsls	r4, r0
 8001b3a:	4643      	mov	r3, r8
 8001b3c:	0020      	movs	r0, r4
 8001b3e:	2400      	movs	r4, #0
 8001b40:	4588      	cmp	r8, r1
 8001b42:	dc00      	bgt.n	8001b46 <__aeabi_dsub+0x34a>
 8001b44:	e6c8      	b.n	80018d8 <__aeabi_dsub+0xdc>
 8001b46:	4a04      	ldr	r2, [pc, #16]	; (8001b58 <__aeabi_dsub+0x35c>)
 8001b48:	1a5b      	subs	r3, r3, r1
 8001b4a:	4010      	ands	r0, r2
 8001b4c:	4698      	mov	r8, r3
 8001b4e:	4681      	mov	r9, r0
 8001b50:	e6d6      	b.n	8001900 <__aeabi_dsub+0x104>
 8001b52:	46c0      	nop			; (mov r8, r8)
 8001b54:	000007ff 	.word	0x000007ff
 8001b58:	ff7fffff 	.word	0xff7fffff
 8001b5c:	fffff801 	.word	0xfffff801
 8001b60:	000007fe 	.word	0x000007fe
 8001b64:	430f      	orrs	r7, r1
 8001b66:	1e7a      	subs	r2, r7, #1
 8001b68:	4197      	sbcs	r7, r2
 8001b6a:	e691      	b.n	8001890 <__aeabi_dsub+0x94>
 8001b6c:	4661      	mov	r1, ip
 8001b6e:	08db      	lsrs	r3, r3, #3
 8001b70:	0749      	lsls	r1, r1, #29
 8001b72:	430b      	orrs	r3, r1
 8001b74:	4661      	mov	r1, ip
 8001b76:	08cc      	lsrs	r4, r1, #3
 8001b78:	e7b8      	b.n	8001aec <__aeabi_dsub+0x2f0>
 8001b7a:	4640      	mov	r0, r8
 8001b7c:	4cd3      	ldr	r4, [pc, #844]	; (8001ecc <__aeabi_dsub+0x6d0>)
 8001b7e:	3001      	adds	r0, #1
 8001b80:	4220      	tst	r0, r4
 8001b82:	d000      	beq.n	8001b86 <__aeabi_dsub+0x38a>
 8001b84:	e0a2      	b.n	8001ccc <__aeabi_dsub+0x4d0>
 8001b86:	4640      	mov	r0, r8
 8001b88:	2800      	cmp	r0, #0
 8001b8a:	d000      	beq.n	8001b8e <__aeabi_dsub+0x392>
 8001b8c:	e101      	b.n	8001d92 <__aeabi_dsub+0x596>
 8001b8e:	4660      	mov	r0, ip
 8001b90:	4318      	orrs	r0, r3
 8001b92:	d100      	bne.n	8001b96 <__aeabi_dsub+0x39a>
 8001b94:	e15e      	b.n	8001e54 <__aeabi_dsub+0x658>
 8001b96:	0008      	movs	r0, r1
 8001b98:	4338      	orrs	r0, r7
 8001b9a:	d000      	beq.n	8001b9e <__aeabi_dsub+0x3a2>
 8001b9c:	e15f      	b.n	8001e5e <__aeabi_dsub+0x662>
 8001b9e:	4661      	mov	r1, ip
 8001ba0:	08db      	lsrs	r3, r3, #3
 8001ba2:	0749      	lsls	r1, r1, #29
 8001ba4:	430b      	orrs	r3, r1
 8001ba6:	4661      	mov	r1, ip
 8001ba8:	08cc      	lsrs	r4, r1, #3
 8001baa:	e7a2      	b.n	8001af2 <__aeabi_dsub+0x2f6>
 8001bac:	4dc8      	ldr	r5, [pc, #800]	; (8001ed0 <__aeabi_dsub+0x6d4>)
 8001bae:	42a8      	cmp	r0, r5
 8001bb0:	d100      	bne.n	8001bb4 <__aeabi_dsub+0x3b8>
 8001bb2:	e0cf      	b.n	8001d54 <__aeabi_dsub+0x558>
 8001bb4:	2580      	movs	r5, #128	; 0x80
 8001bb6:	4664      	mov	r4, ip
 8001bb8:	042d      	lsls	r5, r5, #16
 8001bba:	432c      	orrs	r4, r5
 8001bbc:	46a4      	mov	ip, r4
 8001bbe:	2a38      	cmp	r2, #56	; 0x38
 8001bc0:	dc56      	bgt.n	8001c70 <__aeabi_dsub+0x474>
 8001bc2:	2a1f      	cmp	r2, #31
 8001bc4:	dd00      	ble.n	8001bc8 <__aeabi_dsub+0x3cc>
 8001bc6:	e0d1      	b.n	8001d6c <__aeabi_dsub+0x570>
 8001bc8:	2520      	movs	r5, #32
 8001bca:	001e      	movs	r6, r3
 8001bcc:	1aad      	subs	r5, r5, r2
 8001bce:	4664      	mov	r4, ip
 8001bd0:	40ab      	lsls	r3, r5
 8001bd2:	40ac      	lsls	r4, r5
 8001bd4:	40d6      	lsrs	r6, r2
 8001bd6:	1e5d      	subs	r5, r3, #1
 8001bd8:	41ab      	sbcs	r3, r5
 8001bda:	4334      	orrs	r4, r6
 8001bdc:	4323      	orrs	r3, r4
 8001bde:	4664      	mov	r4, ip
 8001be0:	40d4      	lsrs	r4, r2
 8001be2:	1b09      	subs	r1, r1, r4
 8001be4:	e049      	b.n	8001c7a <__aeabi_dsub+0x47e>
 8001be6:	4660      	mov	r0, ip
 8001be8:	1bdc      	subs	r4, r3, r7
 8001bea:	1a46      	subs	r6, r0, r1
 8001bec:	42a3      	cmp	r3, r4
 8001bee:	4180      	sbcs	r0, r0
 8001bf0:	4240      	negs	r0, r0
 8001bf2:	4681      	mov	r9, r0
 8001bf4:	0030      	movs	r0, r6
 8001bf6:	464e      	mov	r6, r9
 8001bf8:	1b80      	subs	r0, r0, r6
 8001bfa:	4681      	mov	r9, r0
 8001bfc:	0200      	lsls	r0, r0, #8
 8001bfe:	d476      	bmi.n	8001cee <__aeabi_dsub+0x4f2>
 8001c00:	464b      	mov	r3, r9
 8001c02:	4323      	orrs	r3, r4
 8001c04:	d000      	beq.n	8001c08 <__aeabi_dsub+0x40c>
 8001c06:	e652      	b.n	80018ae <__aeabi_dsub+0xb2>
 8001c08:	2400      	movs	r4, #0
 8001c0a:	2500      	movs	r5, #0
 8001c0c:	e771      	b.n	8001af2 <__aeabi_dsub+0x2f6>
 8001c0e:	4339      	orrs	r1, r7
 8001c10:	000c      	movs	r4, r1
 8001c12:	1e62      	subs	r2, r4, #1
 8001c14:	4194      	sbcs	r4, r2
 8001c16:	18e4      	adds	r4, r4, r3
 8001c18:	429c      	cmp	r4, r3
 8001c1a:	419b      	sbcs	r3, r3
 8001c1c:	425b      	negs	r3, r3
 8001c1e:	4463      	add	r3, ip
 8001c20:	4699      	mov	r9, r3
 8001c22:	464b      	mov	r3, r9
 8001c24:	021b      	lsls	r3, r3, #8
 8001c26:	d400      	bmi.n	8001c2a <__aeabi_dsub+0x42e>
 8001c28:	e756      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001c2a:	2301      	movs	r3, #1
 8001c2c:	469c      	mov	ip, r3
 8001c2e:	4ba8      	ldr	r3, [pc, #672]	; (8001ed0 <__aeabi_dsub+0x6d4>)
 8001c30:	44e0      	add	r8, ip
 8001c32:	4598      	cmp	r8, r3
 8001c34:	d038      	beq.n	8001ca8 <__aeabi_dsub+0x4ac>
 8001c36:	464b      	mov	r3, r9
 8001c38:	48a6      	ldr	r0, [pc, #664]	; (8001ed4 <__aeabi_dsub+0x6d8>)
 8001c3a:	2201      	movs	r2, #1
 8001c3c:	4003      	ands	r3, r0
 8001c3e:	0018      	movs	r0, r3
 8001c40:	0863      	lsrs	r3, r4, #1
 8001c42:	4014      	ands	r4, r2
 8001c44:	431c      	orrs	r4, r3
 8001c46:	07c3      	lsls	r3, r0, #31
 8001c48:	431c      	orrs	r4, r3
 8001c4a:	0843      	lsrs	r3, r0, #1
 8001c4c:	4699      	mov	r9, r3
 8001c4e:	e657      	b.n	8001900 <__aeabi_dsub+0x104>
 8001c50:	0010      	movs	r0, r2
 8001c52:	000e      	movs	r6, r1
 8001c54:	3820      	subs	r0, #32
 8001c56:	40c6      	lsrs	r6, r0
 8001c58:	2a20      	cmp	r2, #32
 8001c5a:	d004      	beq.n	8001c66 <__aeabi_dsub+0x46a>
 8001c5c:	2040      	movs	r0, #64	; 0x40
 8001c5e:	1a82      	subs	r2, r0, r2
 8001c60:	4091      	lsls	r1, r2
 8001c62:	430f      	orrs	r7, r1
 8001c64:	46b9      	mov	r9, r7
 8001c66:	464f      	mov	r7, r9
 8001c68:	1e7a      	subs	r2, r7, #1
 8001c6a:	4197      	sbcs	r7, r2
 8001c6c:	4337      	orrs	r7, r6
 8001c6e:	e60f      	b.n	8001890 <__aeabi_dsub+0x94>
 8001c70:	4662      	mov	r2, ip
 8001c72:	431a      	orrs	r2, r3
 8001c74:	0013      	movs	r3, r2
 8001c76:	1e5a      	subs	r2, r3, #1
 8001c78:	4193      	sbcs	r3, r2
 8001c7a:	1afc      	subs	r4, r7, r3
 8001c7c:	42a7      	cmp	r7, r4
 8001c7e:	41bf      	sbcs	r7, r7
 8001c80:	427f      	negs	r7, r7
 8001c82:	1bcb      	subs	r3, r1, r7
 8001c84:	4699      	mov	r9, r3
 8001c86:	465d      	mov	r5, fp
 8001c88:	4680      	mov	r8, r0
 8001c8a:	e608      	b.n	800189e <__aeabi_dsub+0xa2>
 8001c8c:	4666      	mov	r6, ip
 8001c8e:	431e      	orrs	r6, r3
 8001c90:	d100      	bne.n	8001c94 <__aeabi_dsub+0x498>
 8001c92:	e0be      	b.n	8001e12 <__aeabi_dsub+0x616>
 8001c94:	1e56      	subs	r6, r2, #1
 8001c96:	2a01      	cmp	r2, #1
 8001c98:	d100      	bne.n	8001c9c <__aeabi_dsub+0x4a0>
 8001c9a:	e109      	b.n	8001eb0 <__aeabi_dsub+0x6b4>
 8001c9c:	4c8c      	ldr	r4, [pc, #560]	; (8001ed0 <__aeabi_dsub+0x6d4>)
 8001c9e:	42a2      	cmp	r2, r4
 8001ca0:	d100      	bne.n	8001ca4 <__aeabi_dsub+0x4a8>
 8001ca2:	e119      	b.n	8001ed8 <__aeabi_dsub+0x6dc>
 8001ca4:	0032      	movs	r2, r6
 8001ca6:	e6c1      	b.n	8001a2c <__aeabi_dsub+0x230>
 8001ca8:	4642      	mov	r2, r8
 8001caa:	2400      	movs	r4, #0
 8001cac:	2300      	movs	r3, #0
 8001cae:	e648      	b.n	8001942 <__aeabi_dsub+0x146>
 8001cb0:	2020      	movs	r0, #32
 8001cb2:	000c      	movs	r4, r1
 8001cb4:	1a80      	subs	r0, r0, r2
 8001cb6:	003e      	movs	r6, r7
 8001cb8:	4087      	lsls	r7, r0
 8001cba:	4084      	lsls	r4, r0
 8001cbc:	40d6      	lsrs	r6, r2
 8001cbe:	1e78      	subs	r0, r7, #1
 8001cc0:	4187      	sbcs	r7, r0
 8001cc2:	40d1      	lsrs	r1, r2
 8001cc4:	4334      	orrs	r4, r6
 8001cc6:	433c      	orrs	r4, r7
 8001cc8:	448c      	add	ip, r1
 8001cca:	e7a4      	b.n	8001c16 <__aeabi_dsub+0x41a>
 8001ccc:	4a80      	ldr	r2, [pc, #512]	; (8001ed0 <__aeabi_dsub+0x6d4>)
 8001cce:	4290      	cmp	r0, r2
 8001cd0:	d100      	bne.n	8001cd4 <__aeabi_dsub+0x4d8>
 8001cd2:	e0e9      	b.n	8001ea8 <__aeabi_dsub+0x6ac>
 8001cd4:	19df      	adds	r7, r3, r7
 8001cd6:	429f      	cmp	r7, r3
 8001cd8:	419b      	sbcs	r3, r3
 8001cda:	4461      	add	r1, ip
 8001cdc:	425b      	negs	r3, r3
 8001cde:	18c9      	adds	r1, r1, r3
 8001ce0:	07cc      	lsls	r4, r1, #31
 8001ce2:	087f      	lsrs	r7, r7, #1
 8001ce4:	084b      	lsrs	r3, r1, #1
 8001ce6:	4699      	mov	r9, r3
 8001ce8:	4680      	mov	r8, r0
 8001cea:	433c      	orrs	r4, r7
 8001cec:	e6f4      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001cee:	1afc      	subs	r4, r7, r3
 8001cf0:	42a7      	cmp	r7, r4
 8001cf2:	41bf      	sbcs	r7, r7
 8001cf4:	4663      	mov	r3, ip
 8001cf6:	427f      	negs	r7, r7
 8001cf8:	1ac9      	subs	r1, r1, r3
 8001cfa:	1bcb      	subs	r3, r1, r7
 8001cfc:	4699      	mov	r9, r3
 8001cfe:	465d      	mov	r5, fp
 8001d00:	e5d5      	b.n	80018ae <__aeabi_dsub+0xb2>
 8001d02:	08ff      	lsrs	r7, r7, #3
 8001d04:	074b      	lsls	r3, r1, #29
 8001d06:	465d      	mov	r5, fp
 8001d08:	433b      	orrs	r3, r7
 8001d0a:	08cc      	lsrs	r4, r1, #3
 8001d0c:	e6ee      	b.n	8001aec <__aeabi_dsub+0x2f0>
 8001d0e:	4662      	mov	r2, ip
 8001d10:	431a      	orrs	r2, r3
 8001d12:	d000      	beq.n	8001d16 <__aeabi_dsub+0x51a>
 8001d14:	e082      	b.n	8001e1c <__aeabi_dsub+0x620>
 8001d16:	000b      	movs	r3, r1
 8001d18:	433b      	orrs	r3, r7
 8001d1a:	d11b      	bne.n	8001d54 <__aeabi_dsub+0x558>
 8001d1c:	2480      	movs	r4, #128	; 0x80
 8001d1e:	2500      	movs	r5, #0
 8001d20:	0324      	lsls	r4, r4, #12
 8001d22:	e6f9      	b.n	8001b18 <__aeabi_dsub+0x31c>
 8001d24:	19dc      	adds	r4, r3, r7
 8001d26:	429c      	cmp	r4, r3
 8001d28:	419b      	sbcs	r3, r3
 8001d2a:	4461      	add	r1, ip
 8001d2c:	4689      	mov	r9, r1
 8001d2e:	425b      	negs	r3, r3
 8001d30:	4499      	add	r9, r3
 8001d32:	464b      	mov	r3, r9
 8001d34:	021b      	lsls	r3, r3, #8
 8001d36:	d444      	bmi.n	8001dc2 <__aeabi_dsub+0x5c6>
 8001d38:	2301      	movs	r3, #1
 8001d3a:	4698      	mov	r8, r3
 8001d3c:	e6cc      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001d3e:	1bdc      	subs	r4, r3, r7
 8001d40:	4662      	mov	r2, ip
 8001d42:	42a3      	cmp	r3, r4
 8001d44:	419b      	sbcs	r3, r3
 8001d46:	1a51      	subs	r1, r2, r1
 8001d48:	425b      	negs	r3, r3
 8001d4a:	1acb      	subs	r3, r1, r3
 8001d4c:	4699      	mov	r9, r3
 8001d4e:	2301      	movs	r3, #1
 8001d50:	4698      	mov	r8, r3
 8001d52:	e5a4      	b.n	800189e <__aeabi_dsub+0xa2>
 8001d54:	08ff      	lsrs	r7, r7, #3
 8001d56:	074b      	lsls	r3, r1, #29
 8001d58:	465d      	mov	r5, fp
 8001d5a:	433b      	orrs	r3, r7
 8001d5c:	08cc      	lsrs	r4, r1, #3
 8001d5e:	e6d7      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001d60:	4662      	mov	r2, ip
 8001d62:	431a      	orrs	r2, r3
 8001d64:	0014      	movs	r4, r2
 8001d66:	1e63      	subs	r3, r4, #1
 8001d68:	419c      	sbcs	r4, r3
 8001d6a:	e679      	b.n	8001a60 <__aeabi_dsub+0x264>
 8001d6c:	0015      	movs	r5, r2
 8001d6e:	4664      	mov	r4, ip
 8001d70:	3d20      	subs	r5, #32
 8001d72:	40ec      	lsrs	r4, r5
 8001d74:	46a0      	mov	r8, r4
 8001d76:	2a20      	cmp	r2, #32
 8001d78:	d005      	beq.n	8001d86 <__aeabi_dsub+0x58a>
 8001d7a:	2540      	movs	r5, #64	; 0x40
 8001d7c:	4664      	mov	r4, ip
 8001d7e:	1aaa      	subs	r2, r5, r2
 8001d80:	4094      	lsls	r4, r2
 8001d82:	4323      	orrs	r3, r4
 8001d84:	469a      	mov	sl, r3
 8001d86:	4654      	mov	r4, sl
 8001d88:	1e63      	subs	r3, r4, #1
 8001d8a:	419c      	sbcs	r4, r3
 8001d8c:	4643      	mov	r3, r8
 8001d8e:	4323      	orrs	r3, r4
 8001d90:	e773      	b.n	8001c7a <__aeabi_dsub+0x47e>
 8001d92:	4662      	mov	r2, ip
 8001d94:	431a      	orrs	r2, r3
 8001d96:	d023      	beq.n	8001de0 <__aeabi_dsub+0x5e4>
 8001d98:	000a      	movs	r2, r1
 8001d9a:	433a      	orrs	r2, r7
 8001d9c:	d000      	beq.n	8001da0 <__aeabi_dsub+0x5a4>
 8001d9e:	e0a0      	b.n	8001ee2 <__aeabi_dsub+0x6e6>
 8001da0:	4662      	mov	r2, ip
 8001da2:	08db      	lsrs	r3, r3, #3
 8001da4:	0752      	lsls	r2, r2, #29
 8001da6:	4313      	orrs	r3, r2
 8001da8:	4662      	mov	r2, ip
 8001daa:	08d4      	lsrs	r4, r2, #3
 8001dac:	e6b0      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001dae:	000b      	movs	r3, r1
 8001db0:	433b      	orrs	r3, r7
 8001db2:	d100      	bne.n	8001db6 <__aeabi_dsub+0x5ba>
 8001db4:	e728      	b.n	8001c08 <__aeabi_dsub+0x40c>
 8001db6:	08ff      	lsrs	r7, r7, #3
 8001db8:	074b      	lsls	r3, r1, #29
 8001dba:	465d      	mov	r5, fp
 8001dbc:	433b      	orrs	r3, r7
 8001dbe:	08cc      	lsrs	r4, r1, #3
 8001dc0:	e697      	b.n	8001af2 <__aeabi_dsub+0x2f6>
 8001dc2:	2302      	movs	r3, #2
 8001dc4:	4698      	mov	r8, r3
 8001dc6:	e736      	b.n	8001c36 <__aeabi_dsub+0x43a>
 8001dc8:	1afc      	subs	r4, r7, r3
 8001dca:	42a7      	cmp	r7, r4
 8001dcc:	41bf      	sbcs	r7, r7
 8001dce:	4663      	mov	r3, ip
 8001dd0:	427f      	negs	r7, r7
 8001dd2:	1ac9      	subs	r1, r1, r3
 8001dd4:	1bcb      	subs	r3, r1, r7
 8001dd6:	4699      	mov	r9, r3
 8001dd8:	2301      	movs	r3, #1
 8001dda:	465d      	mov	r5, fp
 8001ddc:	4698      	mov	r8, r3
 8001dde:	e55e      	b.n	800189e <__aeabi_dsub+0xa2>
 8001de0:	074b      	lsls	r3, r1, #29
 8001de2:	08ff      	lsrs	r7, r7, #3
 8001de4:	433b      	orrs	r3, r7
 8001de6:	08cc      	lsrs	r4, r1, #3
 8001de8:	e692      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001dea:	1bdc      	subs	r4, r3, r7
 8001dec:	4660      	mov	r0, ip
 8001dee:	42a3      	cmp	r3, r4
 8001df0:	41b6      	sbcs	r6, r6
 8001df2:	1a40      	subs	r0, r0, r1
 8001df4:	4276      	negs	r6, r6
 8001df6:	1b80      	subs	r0, r0, r6
 8001df8:	4681      	mov	r9, r0
 8001dfa:	0200      	lsls	r0, r0, #8
 8001dfc:	d560      	bpl.n	8001ec0 <__aeabi_dsub+0x6c4>
 8001dfe:	1afc      	subs	r4, r7, r3
 8001e00:	42a7      	cmp	r7, r4
 8001e02:	41bf      	sbcs	r7, r7
 8001e04:	4663      	mov	r3, ip
 8001e06:	427f      	negs	r7, r7
 8001e08:	1ac9      	subs	r1, r1, r3
 8001e0a:	1bcb      	subs	r3, r1, r7
 8001e0c:	4699      	mov	r9, r3
 8001e0e:	465d      	mov	r5, fp
 8001e10:	e576      	b.n	8001900 <__aeabi_dsub+0x104>
 8001e12:	08ff      	lsrs	r7, r7, #3
 8001e14:	074b      	lsls	r3, r1, #29
 8001e16:	433b      	orrs	r3, r7
 8001e18:	08cc      	lsrs	r4, r1, #3
 8001e1a:	e667      	b.n	8001aec <__aeabi_dsub+0x2f0>
 8001e1c:	000a      	movs	r2, r1
 8001e1e:	08db      	lsrs	r3, r3, #3
 8001e20:	433a      	orrs	r2, r7
 8001e22:	d100      	bne.n	8001e26 <__aeabi_dsub+0x62a>
 8001e24:	e66f      	b.n	8001b06 <__aeabi_dsub+0x30a>
 8001e26:	4662      	mov	r2, ip
 8001e28:	0752      	lsls	r2, r2, #29
 8001e2a:	4313      	orrs	r3, r2
 8001e2c:	4662      	mov	r2, ip
 8001e2e:	08d4      	lsrs	r4, r2, #3
 8001e30:	2280      	movs	r2, #128	; 0x80
 8001e32:	0312      	lsls	r2, r2, #12
 8001e34:	4214      	tst	r4, r2
 8001e36:	d007      	beq.n	8001e48 <__aeabi_dsub+0x64c>
 8001e38:	08c8      	lsrs	r0, r1, #3
 8001e3a:	4210      	tst	r0, r2
 8001e3c:	d104      	bne.n	8001e48 <__aeabi_dsub+0x64c>
 8001e3e:	465d      	mov	r5, fp
 8001e40:	0004      	movs	r4, r0
 8001e42:	08fb      	lsrs	r3, r7, #3
 8001e44:	0749      	lsls	r1, r1, #29
 8001e46:	430b      	orrs	r3, r1
 8001e48:	0f5a      	lsrs	r2, r3, #29
 8001e4a:	00db      	lsls	r3, r3, #3
 8001e4c:	08db      	lsrs	r3, r3, #3
 8001e4e:	0752      	lsls	r2, r2, #29
 8001e50:	4313      	orrs	r3, r2
 8001e52:	e65d      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001e54:	074b      	lsls	r3, r1, #29
 8001e56:	08ff      	lsrs	r7, r7, #3
 8001e58:	433b      	orrs	r3, r7
 8001e5a:	08cc      	lsrs	r4, r1, #3
 8001e5c:	e649      	b.n	8001af2 <__aeabi_dsub+0x2f6>
 8001e5e:	19dc      	adds	r4, r3, r7
 8001e60:	429c      	cmp	r4, r3
 8001e62:	419b      	sbcs	r3, r3
 8001e64:	4461      	add	r1, ip
 8001e66:	4689      	mov	r9, r1
 8001e68:	425b      	negs	r3, r3
 8001e6a:	4499      	add	r9, r3
 8001e6c:	464b      	mov	r3, r9
 8001e6e:	021b      	lsls	r3, r3, #8
 8001e70:	d400      	bmi.n	8001e74 <__aeabi_dsub+0x678>
 8001e72:	e631      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001e74:	464a      	mov	r2, r9
 8001e76:	4b17      	ldr	r3, [pc, #92]	; (8001ed4 <__aeabi_dsub+0x6d8>)
 8001e78:	401a      	ands	r2, r3
 8001e7a:	2301      	movs	r3, #1
 8001e7c:	4691      	mov	r9, r2
 8001e7e:	4698      	mov	r8, r3
 8001e80:	e62a      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001e82:	0016      	movs	r6, r2
 8001e84:	4664      	mov	r4, ip
 8001e86:	3e20      	subs	r6, #32
 8001e88:	40f4      	lsrs	r4, r6
 8001e8a:	46a0      	mov	r8, r4
 8001e8c:	2a20      	cmp	r2, #32
 8001e8e:	d005      	beq.n	8001e9c <__aeabi_dsub+0x6a0>
 8001e90:	2640      	movs	r6, #64	; 0x40
 8001e92:	4664      	mov	r4, ip
 8001e94:	1ab2      	subs	r2, r6, r2
 8001e96:	4094      	lsls	r4, r2
 8001e98:	4323      	orrs	r3, r4
 8001e9a:	469a      	mov	sl, r3
 8001e9c:	4654      	mov	r4, sl
 8001e9e:	1e63      	subs	r3, r4, #1
 8001ea0:	419c      	sbcs	r4, r3
 8001ea2:	4643      	mov	r3, r8
 8001ea4:	431c      	orrs	r4, r3
 8001ea6:	e5db      	b.n	8001a60 <__aeabi_dsub+0x264>
 8001ea8:	0002      	movs	r2, r0
 8001eaa:	2400      	movs	r4, #0
 8001eac:	2300      	movs	r3, #0
 8001eae:	e548      	b.n	8001942 <__aeabi_dsub+0x146>
 8001eb0:	19dc      	adds	r4, r3, r7
 8001eb2:	42bc      	cmp	r4, r7
 8001eb4:	41bf      	sbcs	r7, r7
 8001eb6:	4461      	add	r1, ip
 8001eb8:	4689      	mov	r9, r1
 8001eba:	427f      	negs	r7, r7
 8001ebc:	44b9      	add	r9, r7
 8001ebe:	e738      	b.n	8001d32 <__aeabi_dsub+0x536>
 8001ec0:	464b      	mov	r3, r9
 8001ec2:	4323      	orrs	r3, r4
 8001ec4:	d100      	bne.n	8001ec8 <__aeabi_dsub+0x6cc>
 8001ec6:	e69f      	b.n	8001c08 <__aeabi_dsub+0x40c>
 8001ec8:	e606      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001eca:	46c0      	nop			; (mov r8, r8)
 8001ecc:	000007fe 	.word	0x000007fe
 8001ed0:	000007ff 	.word	0x000007ff
 8001ed4:	ff7fffff 	.word	0xff7fffff
 8001ed8:	08ff      	lsrs	r7, r7, #3
 8001eda:	074b      	lsls	r3, r1, #29
 8001edc:	433b      	orrs	r3, r7
 8001ede:	08cc      	lsrs	r4, r1, #3
 8001ee0:	e616      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001ee2:	4662      	mov	r2, ip
 8001ee4:	08db      	lsrs	r3, r3, #3
 8001ee6:	0752      	lsls	r2, r2, #29
 8001ee8:	4313      	orrs	r3, r2
 8001eea:	4662      	mov	r2, ip
 8001eec:	08d4      	lsrs	r4, r2, #3
 8001eee:	2280      	movs	r2, #128	; 0x80
 8001ef0:	0312      	lsls	r2, r2, #12
 8001ef2:	4214      	tst	r4, r2
 8001ef4:	d007      	beq.n	8001f06 <__aeabi_dsub+0x70a>
 8001ef6:	08c8      	lsrs	r0, r1, #3
 8001ef8:	4210      	tst	r0, r2
 8001efa:	d104      	bne.n	8001f06 <__aeabi_dsub+0x70a>
 8001efc:	465d      	mov	r5, fp
 8001efe:	0004      	movs	r4, r0
 8001f00:	08fb      	lsrs	r3, r7, #3
 8001f02:	0749      	lsls	r1, r1, #29
 8001f04:	430b      	orrs	r3, r1
 8001f06:	0f5a      	lsrs	r2, r3, #29
 8001f08:	00db      	lsls	r3, r3, #3
 8001f0a:	0752      	lsls	r2, r2, #29
 8001f0c:	08db      	lsrs	r3, r3, #3
 8001f0e:	4313      	orrs	r3, r2
 8001f10:	e5fe      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001f12:	2300      	movs	r3, #0
 8001f14:	4a01      	ldr	r2, [pc, #4]	; (8001f1c <__aeabi_dsub+0x720>)
 8001f16:	001c      	movs	r4, r3
 8001f18:	e513      	b.n	8001942 <__aeabi_dsub+0x146>
 8001f1a:	46c0      	nop			; (mov r8, r8)
 8001f1c:	000007ff 	.word	0x000007ff

08001f20 <__aeabi_dcmpun>:
 8001f20:	b570      	push	{r4, r5, r6, lr}
 8001f22:	0005      	movs	r5, r0
 8001f24:	480c      	ldr	r0, [pc, #48]	; (8001f58 <__aeabi_dcmpun+0x38>)
 8001f26:	031c      	lsls	r4, r3, #12
 8001f28:	0016      	movs	r6, r2
 8001f2a:	005b      	lsls	r3, r3, #1
 8001f2c:	030a      	lsls	r2, r1, #12
 8001f2e:	0049      	lsls	r1, r1, #1
 8001f30:	0b12      	lsrs	r2, r2, #12
 8001f32:	0d49      	lsrs	r1, r1, #21
 8001f34:	0b24      	lsrs	r4, r4, #12
 8001f36:	0d5b      	lsrs	r3, r3, #21
 8001f38:	4281      	cmp	r1, r0
 8001f3a:	d008      	beq.n	8001f4e <__aeabi_dcmpun+0x2e>
 8001f3c:	4a06      	ldr	r2, [pc, #24]	; (8001f58 <__aeabi_dcmpun+0x38>)
 8001f3e:	2000      	movs	r0, #0
 8001f40:	4293      	cmp	r3, r2
 8001f42:	d103      	bne.n	8001f4c <__aeabi_dcmpun+0x2c>
 8001f44:	0020      	movs	r0, r4
 8001f46:	4330      	orrs	r0, r6
 8001f48:	1e43      	subs	r3, r0, #1
 8001f4a:	4198      	sbcs	r0, r3
 8001f4c:	bd70      	pop	{r4, r5, r6, pc}
 8001f4e:	2001      	movs	r0, #1
 8001f50:	432a      	orrs	r2, r5
 8001f52:	d1fb      	bne.n	8001f4c <__aeabi_dcmpun+0x2c>
 8001f54:	e7f2      	b.n	8001f3c <__aeabi_dcmpun+0x1c>
 8001f56:	46c0      	nop			; (mov r8, r8)
 8001f58:	000007ff 	.word	0x000007ff

08001f5c <__aeabi_d2iz>:
 8001f5c:	000a      	movs	r2, r1
 8001f5e:	b530      	push	{r4, r5, lr}
 8001f60:	4c13      	ldr	r4, [pc, #76]	; (8001fb0 <__aeabi_d2iz+0x54>)
 8001f62:	0053      	lsls	r3, r2, #1
 8001f64:	0309      	lsls	r1, r1, #12
 8001f66:	0005      	movs	r5, r0
 8001f68:	0b09      	lsrs	r1, r1, #12
 8001f6a:	2000      	movs	r0, #0
 8001f6c:	0d5b      	lsrs	r3, r3, #21
 8001f6e:	0fd2      	lsrs	r2, r2, #31
 8001f70:	42a3      	cmp	r3, r4
 8001f72:	dd04      	ble.n	8001f7e <__aeabi_d2iz+0x22>
 8001f74:	480f      	ldr	r0, [pc, #60]	; (8001fb4 <__aeabi_d2iz+0x58>)
 8001f76:	4283      	cmp	r3, r0
 8001f78:	dd02      	ble.n	8001f80 <__aeabi_d2iz+0x24>
 8001f7a:	4b0f      	ldr	r3, [pc, #60]	; (8001fb8 <__aeabi_d2iz+0x5c>)
 8001f7c:	18d0      	adds	r0, r2, r3
 8001f7e:	bd30      	pop	{r4, r5, pc}
 8001f80:	2080      	movs	r0, #128	; 0x80
 8001f82:	0340      	lsls	r0, r0, #13
 8001f84:	4301      	orrs	r1, r0
 8001f86:	480d      	ldr	r0, [pc, #52]	; (8001fbc <__aeabi_d2iz+0x60>)
 8001f88:	1ac0      	subs	r0, r0, r3
 8001f8a:	281f      	cmp	r0, #31
 8001f8c:	dd08      	ble.n	8001fa0 <__aeabi_d2iz+0x44>
 8001f8e:	480c      	ldr	r0, [pc, #48]	; (8001fc0 <__aeabi_d2iz+0x64>)
 8001f90:	1ac3      	subs	r3, r0, r3
 8001f92:	40d9      	lsrs	r1, r3
 8001f94:	000b      	movs	r3, r1
 8001f96:	4258      	negs	r0, r3
 8001f98:	2a00      	cmp	r2, #0
 8001f9a:	d1f0      	bne.n	8001f7e <__aeabi_d2iz+0x22>
 8001f9c:	0018      	movs	r0, r3
 8001f9e:	e7ee      	b.n	8001f7e <__aeabi_d2iz+0x22>
 8001fa0:	4c08      	ldr	r4, [pc, #32]	; (8001fc4 <__aeabi_d2iz+0x68>)
 8001fa2:	40c5      	lsrs	r5, r0
 8001fa4:	46a4      	mov	ip, r4
 8001fa6:	4463      	add	r3, ip
 8001fa8:	4099      	lsls	r1, r3
 8001faa:	000b      	movs	r3, r1
 8001fac:	432b      	orrs	r3, r5
 8001fae:	e7f2      	b.n	8001f96 <__aeabi_d2iz+0x3a>
 8001fb0:	000003fe 	.word	0x000003fe
 8001fb4:	0000041d 	.word	0x0000041d
 8001fb8:	7fffffff 	.word	0x7fffffff
 8001fbc:	00000433 	.word	0x00000433
 8001fc0:	00000413 	.word	0x00000413
 8001fc4:	fffffbed 	.word	0xfffffbed

08001fc8 <__aeabi_i2d>:
 8001fc8:	b570      	push	{r4, r5, r6, lr}
 8001fca:	2800      	cmp	r0, #0
 8001fcc:	d016      	beq.n	8001ffc <__aeabi_i2d+0x34>
 8001fce:	17c3      	asrs	r3, r0, #31
 8001fd0:	18c5      	adds	r5, r0, r3
 8001fd2:	405d      	eors	r5, r3
 8001fd4:	0fc4      	lsrs	r4, r0, #31
 8001fd6:	0028      	movs	r0, r5
 8001fd8:	f000 f84c 	bl	8002074 <__clzsi2>
 8001fdc:	4a11      	ldr	r2, [pc, #68]	; (8002024 <__aeabi_i2d+0x5c>)
 8001fde:	1a12      	subs	r2, r2, r0
 8001fe0:	280a      	cmp	r0, #10
 8001fe2:	dc16      	bgt.n	8002012 <__aeabi_i2d+0x4a>
 8001fe4:	0003      	movs	r3, r0
 8001fe6:	002e      	movs	r6, r5
 8001fe8:	3315      	adds	r3, #21
 8001fea:	409e      	lsls	r6, r3
 8001fec:	230b      	movs	r3, #11
 8001fee:	1a18      	subs	r0, r3, r0
 8001ff0:	40c5      	lsrs	r5, r0
 8001ff2:	0552      	lsls	r2, r2, #21
 8001ff4:	032d      	lsls	r5, r5, #12
 8001ff6:	0b2d      	lsrs	r5, r5, #12
 8001ff8:	0d53      	lsrs	r3, r2, #21
 8001ffa:	e003      	b.n	8002004 <__aeabi_i2d+0x3c>
 8001ffc:	2400      	movs	r4, #0
 8001ffe:	2300      	movs	r3, #0
 8002000:	2500      	movs	r5, #0
 8002002:	2600      	movs	r6, #0
 8002004:	051b      	lsls	r3, r3, #20
 8002006:	432b      	orrs	r3, r5
 8002008:	07e4      	lsls	r4, r4, #31
 800200a:	4323      	orrs	r3, r4
 800200c:	0030      	movs	r0, r6
 800200e:	0019      	movs	r1, r3
 8002010:	bd70      	pop	{r4, r5, r6, pc}
 8002012:	380b      	subs	r0, #11
 8002014:	4085      	lsls	r5, r0
 8002016:	0552      	lsls	r2, r2, #21
 8002018:	032d      	lsls	r5, r5, #12
 800201a:	2600      	movs	r6, #0
 800201c:	0b2d      	lsrs	r5, r5, #12
 800201e:	0d53      	lsrs	r3, r2, #21
 8002020:	e7f0      	b.n	8002004 <__aeabi_i2d+0x3c>
 8002022:	46c0      	nop			; (mov r8, r8)
 8002024:	0000041e 	.word	0x0000041e

08002028 <__aeabi_ui2d>:
 8002028:	b510      	push	{r4, lr}
 800202a:	1e04      	subs	r4, r0, #0
 800202c:	d010      	beq.n	8002050 <__aeabi_ui2d+0x28>
 800202e:	f000 f821 	bl	8002074 <__clzsi2>
 8002032:	4b0f      	ldr	r3, [pc, #60]	; (8002070 <__aeabi_ui2d+0x48>)
 8002034:	1a1b      	subs	r3, r3, r0
 8002036:	280a      	cmp	r0, #10
 8002038:	dc11      	bgt.n	800205e <__aeabi_ui2d+0x36>
 800203a:	220b      	movs	r2, #11
 800203c:	0021      	movs	r1, r4
 800203e:	1a12      	subs	r2, r2, r0
 8002040:	40d1      	lsrs	r1, r2
 8002042:	3015      	adds	r0, #21
 8002044:	030a      	lsls	r2, r1, #12
 8002046:	055b      	lsls	r3, r3, #21
 8002048:	4084      	lsls	r4, r0
 800204a:	0b12      	lsrs	r2, r2, #12
 800204c:	0d5b      	lsrs	r3, r3, #21
 800204e:	e001      	b.n	8002054 <__aeabi_ui2d+0x2c>
 8002050:	2300      	movs	r3, #0
 8002052:	2200      	movs	r2, #0
 8002054:	051b      	lsls	r3, r3, #20
 8002056:	4313      	orrs	r3, r2
 8002058:	0020      	movs	r0, r4
 800205a:	0019      	movs	r1, r3
 800205c:	bd10      	pop	{r4, pc}
 800205e:	0022      	movs	r2, r4
 8002060:	380b      	subs	r0, #11
 8002062:	4082      	lsls	r2, r0
 8002064:	055b      	lsls	r3, r3, #21
 8002066:	0312      	lsls	r2, r2, #12
 8002068:	2400      	movs	r4, #0
 800206a:	0b12      	lsrs	r2, r2, #12
 800206c:	0d5b      	lsrs	r3, r3, #21
 800206e:	e7f1      	b.n	8002054 <__aeabi_ui2d+0x2c>
 8002070:	0000041e 	.word	0x0000041e

08002074 <__clzsi2>:
 8002074:	211c      	movs	r1, #28
 8002076:	2301      	movs	r3, #1
 8002078:	041b      	lsls	r3, r3, #16
 800207a:	4298      	cmp	r0, r3
 800207c:	d301      	bcc.n	8002082 <__clzsi2+0xe>
 800207e:	0c00      	lsrs	r0, r0, #16
 8002080:	3910      	subs	r1, #16
 8002082:	0a1b      	lsrs	r3, r3, #8
 8002084:	4298      	cmp	r0, r3
 8002086:	d301      	bcc.n	800208c <__clzsi2+0x18>
 8002088:	0a00      	lsrs	r0, r0, #8
 800208a:	3908      	subs	r1, #8
 800208c:	091b      	lsrs	r3, r3, #4
 800208e:	4298      	cmp	r0, r3
 8002090:	d301      	bcc.n	8002096 <__clzsi2+0x22>
 8002092:	0900      	lsrs	r0, r0, #4
 8002094:	3904      	subs	r1, #4
 8002096:	a202      	add	r2, pc, #8	; (adr r2, 80020a0 <__clzsi2+0x2c>)
 8002098:	5c10      	ldrb	r0, [r2, r0]
 800209a:	1840      	adds	r0, r0, r1
 800209c:	4770      	bx	lr
 800209e:	46c0      	nop			; (mov r8, r8)
 80020a0:	02020304 	.word	0x02020304
 80020a4:	01010101 	.word	0x01010101
	...

080020b0 <max30100_configfun>:
	//		;

	MAX30100_resetFifo();
}

void max30100_configfun() {
 80020b0:	b580      	push	{r7, lr}
 80020b2:	af00      	add	r7, sp, #0
	MAX30100_setMode(MAX30100_MODE_SPO2_HR);
 80020b4:	2003      	movs	r0, #3
 80020b6:	f001 ff3c 	bl	8003f32 <MAX30100_setMode>
	MAX30100_setLedsCurrent(MAX30100_LED_CURR_7_6MA, MAX30100_LED_CURR_7_6MA);
 80020ba:	2102      	movs	r1, #2
 80020bc:	2002      	movs	r0, #2
 80020be:	f001 ff8e 	bl	8003fde <MAX30100_setLedsCurrent>
	MAX30100_setSamplingRate(MAX30100_SAMPRATE_1000HZ);
 80020c2:	2007      	movs	r0, #7
 80020c4:	f001 ff68 	bl	8003f98 <MAX30100_setSamplingRate>
	MAX30100_setHighresModeEnabled(true);
 80020c8:	2001      	movs	r0, #1
 80020ca:	f001 ffa4 	bl	8004016 <MAX30100_setHighresModeEnabled>
}
 80020ce:	46c0      	nop			; (mov r8, r8)
 80020d0:	46bd      	mov	sp, r7
 80020d2:	bd80      	pop	{r7, pc}

080020d4 <main>:

int main(void) {
 80020d4:	b580      	push	{r7, lr}
 80020d6:	b084      	sub	sp, #16
 80020d8:	af00      	add	r7, sp, #0
	RCC_CONFIG_48MHZ();
 80020da:	f001 fbd7 	bl	800388c <RCC_CONFIG_48MHZ>
	uart_print_config(9600);
 80020de:	2396      	movs	r3, #150	; 0x96
 80020e0:	019b      	lsls	r3, r3, #6
 80020e2:	0018      	movs	r0, r3
 80020e4:	f001 fe2c 	bl	8003d40 <uart_print_config>
	print("Running\n");
 80020e8:	4b2f      	ldr	r3, [pc, #188]	; (80021a8 <main+0xd4>)
 80020ea:	0018      	movs	r0, r3
 80020ec:	f001 fe00 	bl	8003cf0 <print>

//	Tester();
	MAX30100_begin();
 80020f0:	f001 fe80 	bl	8003df4 <MAX30100_begin>
	max30100_configfun();
 80020f4:	f7ff ffdc 	bl	80020b0 <max30100_configfun>
	uint32_t start = 0;
 80020f8:	2300      	movs	r3, #0
 80020fa:	60bb      	str	r3, [r7, #8]
	uint32_t end = 0;
 80020fc:	2300      	movs	r3, #0
 80020fe:	607b      	str	r3, [r7, #4]

	uint16_t ir = 0;
 8002100:	1cbb      	adds	r3, r7, #2
 8002102:	2200      	movs	r2, #0
 8002104:	801a      	strh	r2, [r3, #0]
	uint16_t red = 0;
 8002106:	003b      	movs	r3, r7
 8002108:	2200      	movs	r2, #0
 800210a:	801a      	strh	r2, [r3, #0]
	uint8_t MAX30100_ready = 1;
 800210c:	230f      	movs	r3, #15
 800210e:	18fb      	adds	r3, r7, r3
 8002110:	2201      	movs	r2, #1
 8002112:	701a      	strb	r2, [r3, #0]

	while (1) {
		start = HAL_GetTick();
 8002114:	f000 f99a 	bl	800244c <HAL_GetTick>
 8002118:	0003      	movs	r3, r0
 800211a:	60bb      	str	r3, [r7, #8]
		ret = MAX30100_update();
 800211c:	f001 ffa6 	bl	800406c <MAX30100_update>
 8002120:	0003      	movs	r3, r0
 8002122:	001a      	movs	r2, r3
 8002124:	4b21      	ldr	r3, [pc, #132]	; (80021ac <main+0xd8>)
 8002126:	701a      	strb	r2, [r3, #0]
		if (ret != BML_OK) {
 8002128:	4b20      	ldr	r3, [pc, #128]	; (80021ac <main+0xd8>)
 800212a:	781b      	ldrb	r3, [r3, #0]
 800212c:	2b00      	cmp	r3, #0
 800212e:	d01a      	beq.n	8002166 <main+0x92>
			print("ERROR...Retrying\n");
 8002130:	4b1f      	ldr	r3, [pc, #124]	; (80021b0 <main+0xdc>)
 8002132:	0018      	movs	r0, r3
 8002134:	f001 fddc 	bl	8003cf0 <print>
			if(MAX30100_begin() == BML_OK){
 8002138:	f001 fe5c 	bl	8003df4 <MAX30100_begin>
 800213c:	1e03      	subs	r3, r0, #0
 800213e:	d108      	bne.n	8002152 <main+0x7e>
//				MAX30100_shutdown();
//				Delay(500);
//				MAX30100_resume();
				max30100_configfun();
 8002140:	f7ff ffb6 	bl	80020b0 <max30100_configfun>
				MAX30100_resetFifo();
 8002144:	f001 ffc0 	bl	80040c8 <MAX30100_resetFifo>
				MAX30100_ready = 1;
 8002148:	230f      	movs	r3, #15
 800214a:	18fb      	adds	r3, r7, r3
 800214c:	2201      	movs	r2, #1
 800214e:	701a      	strb	r2, [r3, #0]
 8002150:	e011      	b.n	8002176 <main+0xa2>
			}
			else{
				MAX30100_ready = 0;
 8002152:	230f      	movs	r3, #15
 8002154:	18fb      	adds	r3, r7, r3
 8002156:	2200      	movs	r2, #0
 8002158:	701a      	strb	r2, [r3, #0]
				Delay(500);
 800215a:	23fa      	movs	r3, #250	; 0xfa
 800215c:	005b      	lsls	r3, r3, #1
 800215e:	0018      	movs	r0, r3
 8002160:	f000 f97e 	bl	8002460 <HAL_Delay>
 8002164:	e007      	b.n	8002176 <main+0xa2>
			}


		} else if (ret == BML_OK) {
 8002166:	4b11      	ldr	r3, [pc, #68]	; (80021ac <main+0xd8>)
 8002168:	781b      	ldrb	r3, [r3, #0]
 800216a:	2b00      	cmp	r3, #0
 800216c:	d103      	bne.n	8002176 <main+0xa2>
			MAX30100_ready = 1;
 800216e:	230f      	movs	r3, #15
 8002170:	18fb      	adds	r3, r7, r3
 8002172:	2201      	movs	r2, #1
 8002174:	701a      	strb	r2, [r3, #0]
		}

		if (MAX30100_ready) {
 8002176:	230f      	movs	r3, #15
 8002178:	18fb      	adds	r3, r7, r3
 800217a:	781b      	ldrb	r3, [r3, #0]
 800217c:	2b00      	cmp	r3, #0
 800217e:	d0c9      	beq.n	8002114 <main+0x40>
			if (MAX30100_getRawValues(&ir, &red)) {
 8002180:	003a      	movs	r2, r7
 8002182:	1cbb      	adds	r3, r7, #2
 8002184:	0011      	movs	r1, r2
 8002186:	0018      	movs	r0, r3
 8002188:	f001 ff78 	bl	800407c <MAX30100_getRawValues>
 800218c:	1e03      	subs	r3, r0, #0
 800218e:	d0c1      	beq.n	8002114 <main+0x40>
				print("IR: %d, RED: %d\n", ir, red);
 8002190:	1cbb      	adds	r3, r7, #2
 8002192:	881b      	ldrh	r3, [r3, #0]
 8002194:	0019      	movs	r1, r3
 8002196:	003b      	movs	r3, r7
 8002198:	881b      	ldrh	r3, [r3, #0]
 800219a:	001a      	movs	r2, r3
 800219c:	4b05      	ldr	r3, [pc, #20]	; (80021b4 <main+0xe0>)
 800219e:	0018      	movs	r0, r3
 80021a0:	f001 fda6 	bl	8003cf0 <print>
		start = HAL_GetTick();
 80021a4:	e7b6      	b.n	8002114 <main+0x40>
 80021a6:	46c0      	nop			; (mov r8, r8)
 80021a8:	08007454 	.word	0x08007454
 80021ac:	2000023c 	.word	0x2000023c
 80021b0:	08007460 	.word	0x08007460
 80021b4:	08007474 	.word	0x08007474

080021b8 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80021b8:	b580      	push	{r7, lr}
 80021ba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80021bc:	e7fe      	b.n	80021bc <NMI_Handler+0x4>

080021be <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80021be:	b580      	push	{r7, lr}
 80021c0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80021c2:	e7fe      	b.n	80021c2 <HardFault_Handler+0x4>

080021c4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80021c4:	b580      	push	{r7, lr}
 80021c6:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 80021c8:	46c0      	nop			; (mov r8, r8)
 80021ca:	46bd      	mov	sp, r7
 80021cc:	bd80      	pop	{r7, pc}

080021ce <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80021ce:	b580      	push	{r7, lr}
 80021d0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80021d2:	46c0      	nop			; (mov r8, r8)
 80021d4:	46bd      	mov	sp, r7
 80021d6:	bd80      	pop	{r7, pc}

080021d8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80021d8:	b580      	push	{r7, lr}
 80021da:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80021dc:	f000 f924 	bl	8002428 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80021e0:	46c0      	nop			; (mov r8, r8)
 80021e2:	46bd      	mov	sp, r7
 80021e4:	bd80      	pop	{r7, pc}

080021e6 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80021e6:	b580      	push	{r7, lr}
 80021e8:	af00      	add	r7, sp, #0
	return 1;
 80021ea:	2301      	movs	r3, #1
}
 80021ec:	0018      	movs	r0, r3
 80021ee:	46bd      	mov	sp, r7
 80021f0:	bd80      	pop	{r7, pc}

080021f2 <_kill>:

int _kill(int pid, int sig)
{
 80021f2:	b580      	push	{r7, lr}
 80021f4:	b082      	sub	sp, #8
 80021f6:	af00      	add	r7, sp, #0
 80021f8:	6078      	str	r0, [r7, #4]
 80021fa:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80021fc:	f002 f866 	bl	80042cc <__errno>
 8002200:	0003      	movs	r3, r0
 8002202:	2216      	movs	r2, #22
 8002204:	601a      	str	r2, [r3, #0]
	return -1;
 8002206:	2301      	movs	r3, #1
 8002208:	425b      	negs	r3, r3
}
 800220a:	0018      	movs	r0, r3
 800220c:	46bd      	mov	sp, r7
 800220e:	b002      	add	sp, #8
 8002210:	bd80      	pop	{r7, pc}

08002212 <_exit>:

void _exit (int status)
{
 8002212:	b580      	push	{r7, lr}
 8002214:	b082      	sub	sp, #8
 8002216:	af00      	add	r7, sp, #0
 8002218:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800221a:	2301      	movs	r3, #1
 800221c:	425a      	negs	r2, r3
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	0011      	movs	r1, r2
 8002222:	0018      	movs	r0, r3
 8002224:	f7ff ffe5 	bl	80021f2 <_kill>
	while (1) {}		/* Make sure we hang here */
 8002228:	e7fe      	b.n	8002228 <_exit+0x16>

0800222a <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800222a:	b580      	push	{r7, lr}
 800222c:	b086      	sub	sp, #24
 800222e:	af00      	add	r7, sp, #0
 8002230:	60f8      	str	r0, [r7, #12]
 8002232:	60b9      	str	r1, [r7, #8]
 8002234:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002236:	2300      	movs	r3, #0
 8002238:	617b      	str	r3, [r7, #20]
 800223a:	e00a      	b.n	8002252 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800223c:	e000      	b.n	8002240 <_read+0x16>
 800223e:	bf00      	nop
 8002240:	0001      	movs	r1, r0
 8002242:	68bb      	ldr	r3, [r7, #8]
 8002244:	1c5a      	adds	r2, r3, #1
 8002246:	60ba      	str	r2, [r7, #8]
 8002248:	b2ca      	uxtb	r2, r1
 800224a:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800224c:	697b      	ldr	r3, [r7, #20]
 800224e:	3301      	adds	r3, #1
 8002250:	617b      	str	r3, [r7, #20]
 8002252:	697a      	ldr	r2, [r7, #20]
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	429a      	cmp	r2, r3
 8002258:	dbf0      	blt.n	800223c <_read+0x12>
	}

return len;
 800225a:	687b      	ldr	r3, [r7, #4]
}
 800225c:	0018      	movs	r0, r3
 800225e:	46bd      	mov	sp, r7
 8002260:	b006      	add	sp, #24
 8002262:	bd80      	pop	{r7, pc}

08002264 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002264:	b580      	push	{r7, lr}
 8002266:	b086      	sub	sp, #24
 8002268:	af00      	add	r7, sp, #0
 800226a:	60f8      	str	r0, [r7, #12]
 800226c:	60b9      	str	r1, [r7, #8]
 800226e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002270:	2300      	movs	r3, #0
 8002272:	617b      	str	r3, [r7, #20]
 8002274:	e009      	b.n	800228a <_write+0x26>
	{
		__io_putchar(*ptr++);
 8002276:	68bb      	ldr	r3, [r7, #8]
 8002278:	1c5a      	adds	r2, r3, #1
 800227a:	60ba      	str	r2, [r7, #8]
 800227c:	781b      	ldrb	r3, [r3, #0]
 800227e:	0018      	movs	r0, r3
 8002280:	e000      	b.n	8002284 <_write+0x20>
 8002282:	bf00      	nop
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002284:	697b      	ldr	r3, [r7, #20]
 8002286:	3301      	adds	r3, #1
 8002288:	617b      	str	r3, [r7, #20]
 800228a:	697a      	ldr	r2, [r7, #20]
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	429a      	cmp	r2, r3
 8002290:	dbf1      	blt.n	8002276 <_write+0x12>
	}
	return len;
 8002292:	687b      	ldr	r3, [r7, #4]
}
 8002294:	0018      	movs	r0, r3
 8002296:	46bd      	mov	sp, r7
 8002298:	b006      	add	sp, #24
 800229a:	bd80      	pop	{r7, pc}

0800229c <_close>:

int _close(int file)
{
 800229c:	b580      	push	{r7, lr}
 800229e:	b082      	sub	sp, #8
 80022a0:	af00      	add	r7, sp, #0
 80022a2:	6078      	str	r0, [r7, #4]
	return -1;
 80022a4:	2301      	movs	r3, #1
 80022a6:	425b      	negs	r3, r3
}
 80022a8:	0018      	movs	r0, r3
 80022aa:	46bd      	mov	sp, r7
 80022ac:	b002      	add	sp, #8
 80022ae:	bd80      	pop	{r7, pc}

080022b0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80022b0:	b580      	push	{r7, lr}
 80022b2:	b082      	sub	sp, #8
 80022b4:	af00      	add	r7, sp, #0
 80022b6:	6078      	str	r0, [r7, #4]
 80022b8:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80022ba:	683b      	ldr	r3, [r7, #0]
 80022bc:	2280      	movs	r2, #128	; 0x80
 80022be:	0192      	lsls	r2, r2, #6
 80022c0:	605a      	str	r2, [r3, #4]
	return 0;
 80022c2:	2300      	movs	r3, #0
}
 80022c4:	0018      	movs	r0, r3
 80022c6:	46bd      	mov	sp, r7
 80022c8:	b002      	add	sp, #8
 80022ca:	bd80      	pop	{r7, pc}

080022cc <_isatty>:

int _isatty(int file)
{
 80022cc:	b580      	push	{r7, lr}
 80022ce:	b082      	sub	sp, #8
 80022d0:	af00      	add	r7, sp, #0
 80022d2:	6078      	str	r0, [r7, #4]
	return 1;
 80022d4:	2301      	movs	r3, #1
}
 80022d6:	0018      	movs	r0, r3
 80022d8:	46bd      	mov	sp, r7
 80022da:	b002      	add	sp, #8
 80022dc:	bd80      	pop	{r7, pc}

080022de <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80022de:	b580      	push	{r7, lr}
 80022e0:	b084      	sub	sp, #16
 80022e2:	af00      	add	r7, sp, #0
 80022e4:	60f8      	str	r0, [r7, #12]
 80022e6:	60b9      	str	r1, [r7, #8]
 80022e8:	607a      	str	r2, [r7, #4]
	return 0;
 80022ea:	2300      	movs	r3, #0
}
 80022ec:	0018      	movs	r0, r3
 80022ee:	46bd      	mov	sp, r7
 80022f0:	b004      	add	sp, #16
 80022f2:	bd80      	pop	{r7, pc}

080022f4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80022f4:	b580      	push	{r7, lr}
 80022f6:	b086      	sub	sp, #24
 80022f8:	af00      	add	r7, sp, #0
 80022fa:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80022fc:	4a14      	ldr	r2, [pc, #80]	; (8002350 <_sbrk+0x5c>)
 80022fe:	4b15      	ldr	r3, [pc, #84]	; (8002354 <_sbrk+0x60>)
 8002300:	1ad3      	subs	r3, r2, r3
 8002302:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002304:	697b      	ldr	r3, [r7, #20]
 8002306:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002308:	4b13      	ldr	r3, [pc, #76]	; (8002358 <_sbrk+0x64>)
 800230a:	681b      	ldr	r3, [r3, #0]
 800230c:	2b00      	cmp	r3, #0
 800230e:	d102      	bne.n	8002316 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002310:	4b11      	ldr	r3, [pc, #68]	; (8002358 <_sbrk+0x64>)
 8002312:	4a12      	ldr	r2, [pc, #72]	; (800235c <_sbrk+0x68>)
 8002314:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002316:	4b10      	ldr	r3, [pc, #64]	; (8002358 <_sbrk+0x64>)
 8002318:	681a      	ldr	r2, [r3, #0]
 800231a:	687b      	ldr	r3, [r7, #4]
 800231c:	18d3      	adds	r3, r2, r3
 800231e:	693a      	ldr	r2, [r7, #16]
 8002320:	429a      	cmp	r2, r3
 8002322:	d207      	bcs.n	8002334 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002324:	f001 ffd2 	bl	80042cc <__errno>
 8002328:	0003      	movs	r3, r0
 800232a:	220c      	movs	r2, #12
 800232c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800232e:	2301      	movs	r3, #1
 8002330:	425b      	negs	r3, r3
 8002332:	e009      	b.n	8002348 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002334:	4b08      	ldr	r3, [pc, #32]	; (8002358 <_sbrk+0x64>)
 8002336:	681b      	ldr	r3, [r3, #0]
 8002338:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800233a:	4b07      	ldr	r3, [pc, #28]	; (8002358 <_sbrk+0x64>)
 800233c:	681a      	ldr	r2, [r3, #0]
 800233e:	687b      	ldr	r3, [r7, #4]
 8002340:	18d2      	adds	r2, r2, r3
 8002342:	4b05      	ldr	r3, [pc, #20]	; (8002358 <_sbrk+0x64>)
 8002344:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8002346:	68fb      	ldr	r3, [r7, #12]
}
 8002348:	0018      	movs	r0, r3
 800234a:	46bd      	mov	sp, r7
 800234c:	b006      	add	sp, #24
 800234e:	bd80      	pop	{r7, pc}
 8002350:	20004000 	.word	0x20004000
 8002354:	00000400 	.word	0x00000400
 8002358:	20000240 	.word	0x20000240
 800235c:	200003a8 	.word	0x200003a8

08002360 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002360:	b580      	push	{r7, lr}
 8002362:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8002364:	46c0      	nop			; (mov r8, r8)
 8002366:	46bd      	mov	sp, r7
 8002368:	bd80      	pop	{r7, pc}
	...

0800236c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800236c:	480d      	ldr	r0, [pc, #52]	; (80023a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800236e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002370:	480d      	ldr	r0, [pc, #52]	; (80023a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8002372:	490e      	ldr	r1, [pc, #56]	; (80023ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8002374:	4a0e      	ldr	r2, [pc, #56]	; (80023b0 <LoopForever+0xe>)
  movs r3, #0
 8002376:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002378:	e002      	b.n	8002380 <LoopCopyDataInit>

0800237a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800237a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800237c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800237e:	3304      	adds	r3, #4

08002380 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002380:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002382:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002384:	d3f9      	bcc.n	800237a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002386:	4a0b      	ldr	r2, [pc, #44]	; (80023b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002388:	4c0b      	ldr	r4, [pc, #44]	; (80023b8 <LoopForever+0x16>)
  movs r3, #0
 800238a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800238c:	e001      	b.n	8002392 <LoopFillZerobss>

0800238e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800238e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002390:	3204      	adds	r2, #4

08002392 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002392:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002394:	d3fb      	bcc.n	800238e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8002396:	f7ff ffe3 	bl	8002360 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 800239a:	f001 ff9d 	bl	80042d8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800239e:	f7ff fe99 	bl	80020d4 <main>

080023a2 <LoopForever>:

LoopForever:
    b LoopForever
 80023a2:	e7fe      	b.n	80023a2 <LoopForever>
  ldr   r0, =_estack
 80023a4:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 80023a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80023ac:	20000220 	.word	0x20000220
  ldr r2, =_sidata
 80023b0:	08007954 	.word	0x08007954
  ldr r2, =_sbss
 80023b4:	20000220 	.word	0x20000220
  ldr r4, =_ebss
 80023b8:	200003a4 	.word	0x200003a4

080023bc <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80023bc:	e7fe      	b.n	80023bc <ADC1_IRQHandler>
	...

080023c0 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80023c0:	b590      	push	{r4, r7, lr}
 80023c2:	b083      	sub	sp, #12
 80023c4:	af00      	add	r7, sp, #0
 80023c6:	6078      	str	r0, [r7, #4]
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80023c8:	4b14      	ldr	r3, [pc, #80]	; (800241c <HAL_InitTick+0x5c>)
 80023ca:	681c      	ldr	r4, [r3, #0]
 80023cc:	4b14      	ldr	r3, [pc, #80]	; (8002420 <HAL_InitTick+0x60>)
 80023ce:	781b      	ldrb	r3, [r3, #0]
 80023d0:	0019      	movs	r1, r3
 80023d2:	23fa      	movs	r3, #250	; 0xfa
 80023d4:	0098      	lsls	r0, r3, #2
 80023d6:	f7fd feb3 	bl	8000140 <__udivsi3>
 80023da:	0003      	movs	r3, r0
 80023dc:	0019      	movs	r1, r3
 80023de:	0020      	movs	r0, r4
 80023e0:	f7fd feae 	bl	8000140 <__udivsi3>
 80023e4:	0003      	movs	r3, r0
 80023e6:	0018      	movs	r0, r3
 80023e8:	f000 f905 	bl	80025f6 <HAL_SYSTICK_Config>
 80023ec:	1e03      	subs	r3, r0, #0
 80023ee:	d001      	beq.n	80023f4 <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 80023f0:	2301      	movs	r3, #1
 80023f2:	e00f      	b.n	8002414 <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80023f4:	687b      	ldr	r3, [r7, #4]
 80023f6:	2b03      	cmp	r3, #3
 80023f8:	d80b      	bhi.n	8002412 <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80023fa:	6879      	ldr	r1, [r7, #4]
 80023fc:	2301      	movs	r3, #1
 80023fe:	425b      	negs	r3, r3
 8002400:	2200      	movs	r2, #0
 8002402:	0018      	movs	r0, r3
 8002404:	f000 f8e2 	bl	80025cc <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002408:	4b06      	ldr	r3, [pc, #24]	; (8002424 <HAL_InitTick+0x64>)
 800240a:	687a      	ldr	r2, [r7, #4]
 800240c:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
 800240e:	2300      	movs	r3, #0
 8002410:	e000      	b.n	8002414 <HAL_InitTick+0x54>
    return HAL_ERROR;
 8002412:	2301      	movs	r3, #1
}
 8002414:	0018      	movs	r0, r3
 8002416:	46bd      	mov	sp, r7
 8002418:	b003      	add	sp, #12
 800241a:	bd90      	pop	{r4, r7, pc}
 800241c:	20000000 	.word	0x20000000
 8002420:	20000008 	.word	0x20000008
 8002424:	20000004 	.word	0x20000004

08002428 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002428:	b580      	push	{r7, lr}
 800242a:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 800242c:	4b05      	ldr	r3, [pc, #20]	; (8002444 <HAL_IncTick+0x1c>)
 800242e:	781b      	ldrb	r3, [r3, #0]
 8002430:	001a      	movs	r2, r3
 8002432:	4b05      	ldr	r3, [pc, #20]	; (8002448 <HAL_IncTick+0x20>)
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	18d2      	adds	r2, r2, r3
 8002438:	4b03      	ldr	r3, [pc, #12]	; (8002448 <HAL_IncTick+0x20>)
 800243a:	601a      	str	r2, [r3, #0]
}
 800243c:	46c0      	nop			; (mov r8, r8)
 800243e:	46bd      	mov	sp, r7
 8002440:	bd80      	pop	{r7, pc}
 8002442:	46c0      	nop			; (mov r8, r8)
 8002444:	20000008 	.word	0x20000008
 8002448:	20000244 	.word	0x20000244

0800244c <HAL_GetTick>:
  * @note   This function is declared as __weak  to be overwritten  in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 800244c:	b580      	push	{r7, lr}
 800244e:	af00      	add	r7, sp, #0
  return uwTick;
 8002450:	4b02      	ldr	r3, [pc, #8]	; (800245c <HAL_GetTick+0x10>)
 8002452:	681b      	ldr	r3, [r3, #0]
}
 8002454:	0018      	movs	r0, r3
 8002456:	46bd      	mov	sp, r7
 8002458:	bd80      	pop	{r7, pc}
 800245a:	46c0      	nop			; (mov r8, r8)
 800245c:	20000244 	.word	0x20000244

08002460 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002460:	b580      	push	{r7, lr}
 8002462:	b084      	sub	sp, #16
 8002464:	af00      	add	r7, sp, #0
 8002466:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002468:	f7ff fff0 	bl	800244c <HAL_GetTick>
 800246c:	0003      	movs	r3, r0
 800246e:	60bb      	str	r3, [r7, #8]
  uint32_t wait = Delay;
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	60fb      	str	r3, [r7, #12]
  
  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002474:	68fb      	ldr	r3, [r7, #12]
 8002476:	3301      	adds	r3, #1
 8002478:	d005      	beq.n	8002486 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 800247a:	4b0a      	ldr	r3, [pc, #40]	; (80024a4 <HAL_Delay+0x44>)
 800247c:	781b      	ldrb	r3, [r3, #0]
 800247e:	001a      	movs	r2, r3
 8002480:	68fb      	ldr	r3, [r7, #12]
 8002482:	189b      	adds	r3, r3, r2
 8002484:	60fb      	str	r3, [r7, #12]
  }
  
  while((HAL_GetTick() - tickstart) < wait)
 8002486:	46c0      	nop			; (mov r8, r8)
 8002488:	f7ff ffe0 	bl	800244c <HAL_GetTick>
 800248c:	0002      	movs	r2, r0
 800248e:	68bb      	ldr	r3, [r7, #8]
 8002490:	1ad3      	subs	r3, r2, r3
 8002492:	68fa      	ldr	r2, [r7, #12]
 8002494:	429a      	cmp	r2, r3
 8002496:	d8f7      	bhi.n	8002488 <HAL_Delay+0x28>
  {
  }
}
 8002498:	46c0      	nop			; (mov r8, r8)
 800249a:	46c0      	nop			; (mov r8, r8)
 800249c:	46bd      	mov	sp, r7
 800249e:	b004      	add	sp, #16
 80024a0:	bd80      	pop	{r7, pc}
 80024a2:	46c0      	nop			; (mov r8, r8)
 80024a4:	20000008 	.word	0x20000008

080024a8 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80024a8:	b590      	push	{r4, r7, lr}
 80024aa:	b083      	sub	sp, #12
 80024ac:	af00      	add	r7, sp, #0
 80024ae:	0002      	movs	r2, r0
 80024b0:	6039      	str	r1, [r7, #0]
 80024b2:	1dfb      	adds	r3, r7, #7
 80024b4:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 80024b6:	1dfb      	adds	r3, r7, #7
 80024b8:	781b      	ldrb	r3, [r3, #0]
 80024ba:	2b7f      	cmp	r3, #127	; 0x7f
 80024bc:	d828      	bhi.n	8002510 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80024be:	4a2f      	ldr	r2, [pc, #188]	; (800257c <__NVIC_SetPriority+0xd4>)
 80024c0:	1dfb      	adds	r3, r7, #7
 80024c2:	781b      	ldrb	r3, [r3, #0]
 80024c4:	b25b      	sxtb	r3, r3
 80024c6:	089b      	lsrs	r3, r3, #2
 80024c8:	33c0      	adds	r3, #192	; 0xc0
 80024ca:	009b      	lsls	r3, r3, #2
 80024cc:	589b      	ldr	r3, [r3, r2]
 80024ce:	1dfa      	adds	r2, r7, #7
 80024d0:	7812      	ldrb	r2, [r2, #0]
 80024d2:	0011      	movs	r1, r2
 80024d4:	2203      	movs	r2, #3
 80024d6:	400a      	ands	r2, r1
 80024d8:	00d2      	lsls	r2, r2, #3
 80024da:	21ff      	movs	r1, #255	; 0xff
 80024dc:	4091      	lsls	r1, r2
 80024de:	000a      	movs	r2, r1
 80024e0:	43d2      	mvns	r2, r2
 80024e2:	401a      	ands	r2, r3
 80024e4:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80024e6:	683b      	ldr	r3, [r7, #0]
 80024e8:	019b      	lsls	r3, r3, #6
 80024ea:	22ff      	movs	r2, #255	; 0xff
 80024ec:	401a      	ands	r2, r3
 80024ee:	1dfb      	adds	r3, r7, #7
 80024f0:	781b      	ldrb	r3, [r3, #0]
 80024f2:	0018      	movs	r0, r3
 80024f4:	2303      	movs	r3, #3
 80024f6:	4003      	ands	r3, r0
 80024f8:	00db      	lsls	r3, r3, #3
 80024fa:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80024fc:	481f      	ldr	r0, [pc, #124]	; (800257c <__NVIC_SetPriority+0xd4>)
 80024fe:	1dfb      	adds	r3, r7, #7
 8002500:	781b      	ldrb	r3, [r3, #0]
 8002502:	b25b      	sxtb	r3, r3
 8002504:	089b      	lsrs	r3, r3, #2
 8002506:	430a      	orrs	r2, r1
 8002508:	33c0      	adds	r3, #192	; 0xc0
 800250a:	009b      	lsls	r3, r3, #2
 800250c:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 800250e:	e031      	b.n	8002574 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002510:	4a1b      	ldr	r2, [pc, #108]	; (8002580 <__NVIC_SetPriority+0xd8>)
 8002512:	1dfb      	adds	r3, r7, #7
 8002514:	781b      	ldrb	r3, [r3, #0]
 8002516:	0019      	movs	r1, r3
 8002518:	230f      	movs	r3, #15
 800251a:	400b      	ands	r3, r1
 800251c:	3b08      	subs	r3, #8
 800251e:	089b      	lsrs	r3, r3, #2
 8002520:	3306      	adds	r3, #6
 8002522:	009b      	lsls	r3, r3, #2
 8002524:	18d3      	adds	r3, r2, r3
 8002526:	3304      	adds	r3, #4
 8002528:	681b      	ldr	r3, [r3, #0]
 800252a:	1dfa      	adds	r2, r7, #7
 800252c:	7812      	ldrb	r2, [r2, #0]
 800252e:	0011      	movs	r1, r2
 8002530:	2203      	movs	r2, #3
 8002532:	400a      	ands	r2, r1
 8002534:	00d2      	lsls	r2, r2, #3
 8002536:	21ff      	movs	r1, #255	; 0xff
 8002538:	4091      	lsls	r1, r2
 800253a:	000a      	movs	r2, r1
 800253c:	43d2      	mvns	r2, r2
 800253e:	401a      	ands	r2, r3
 8002540:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002542:	683b      	ldr	r3, [r7, #0]
 8002544:	019b      	lsls	r3, r3, #6
 8002546:	22ff      	movs	r2, #255	; 0xff
 8002548:	401a      	ands	r2, r3
 800254a:	1dfb      	adds	r3, r7, #7
 800254c:	781b      	ldrb	r3, [r3, #0]
 800254e:	0018      	movs	r0, r3
 8002550:	2303      	movs	r3, #3
 8002552:	4003      	ands	r3, r0
 8002554:	00db      	lsls	r3, r3, #3
 8002556:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002558:	4809      	ldr	r0, [pc, #36]	; (8002580 <__NVIC_SetPriority+0xd8>)
 800255a:	1dfb      	adds	r3, r7, #7
 800255c:	781b      	ldrb	r3, [r3, #0]
 800255e:	001c      	movs	r4, r3
 8002560:	230f      	movs	r3, #15
 8002562:	4023      	ands	r3, r4
 8002564:	3b08      	subs	r3, #8
 8002566:	089b      	lsrs	r3, r3, #2
 8002568:	430a      	orrs	r2, r1
 800256a:	3306      	adds	r3, #6
 800256c:	009b      	lsls	r3, r3, #2
 800256e:	18c3      	adds	r3, r0, r3
 8002570:	3304      	adds	r3, #4
 8002572:	601a      	str	r2, [r3, #0]
}
 8002574:	46c0      	nop			; (mov r8, r8)
 8002576:	46bd      	mov	sp, r7
 8002578:	b003      	add	sp, #12
 800257a:	bd90      	pop	{r4, r7, pc}
 800257c:	e000e100 	.word	0xe000e100
 8002580:	e000ed00 	.word	0xe000ed00

08002584 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8002584:	b580      	push	{r7, lr}
 8002586:	b082      	sub	sp, #8
 8002588:	af00      	add	r7, sp, #0
 800258a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	1e5a      	subs	r2, r3, #1
 8002590:	2380      	movs	r3, #128	; 0x80
 8002592:	045b      	lsls	r3, r3, #17
 8002594:	429a      	cmp	r2, r3
 8002596:	d301      	bcc.n	800259c <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 8002598:	2301      	movs	r3, #1
 800259a:	e010      	b.n	80025be <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800259c:	4b0a      	ldr	r3, [pc, #40]	; (80025c8 <SysTick_Config+0x44>)
 800259e:	687a      	ldr	r2, [r7, #4]
 80025a0:	3a01      	subs	r2, #1
 80025a2:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80025a4:	2301      	movs	r3, #1
 80025a6:	425b      	negs	r3, r3
 80025a8:	2103      	movs	r1, #3
 80025aa:	0018      	movs	r0, r3
 80025ac:	f7ff ff7c 	bl	80024a8 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80025b0:	4b05      	ldr	r3, [pc, #20]	; (80025c8 <SysTick_Config+0x44>)
 80025b2:	2200      	movs	r2, #0
 80025b4:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80025b6:	4b04      	ldr	r3, [pc, #16]	; (80025c8 <SysTick_Config+0x44>)
 80025b8:	2207      	movs	r2, #7
 80025ba:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80025bc:	2300      	movs	r3, #0
}
 80025be:	0018      	movs	r0, r3
 80025c0:	46bd      	mov	sp, r7
 80025c2:	b002      	add	sp, #8
 80025c4:	bd80      	pop	{r7, pc}
 80025c6:	46c0      	nop			; (mov r8, r8)
 80025c8:	e000e010 	.word	0xe000e010

080025cc <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80025cc:	b580      	push	{r7, lr}
 80025ce:	b084      	sub	sp, #16
 80025d0:	af00      	add	r7, sp, #0
 80025d2:	60b9      	str	r1, [r7, #8]
 80025d4:	607a      	str	r2, [r7, #4]
 80025d6:	210f      	movs	r1, #15
 80025d8:	187b      	adds	r3, r7, r1
 80025da:	1c02      	adds	r2, r0, #0
 80025dc:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 80025de:	68ba      	ldr	r2, [r7, #8]
 80025e0:	187b      	adds	r3, r7, r1
 80025e2:	781b      	ldrb	r3, [r3, #0]
 80025e4:	b25b      	sxtb	r3, r3
 80025e6:	0011      	movs	r1, r2
 80025e8:	0018      	movs	r0, r3
 80025ea:	f7ff ff5d 	bl	80024a8 <__NVIC_SetPriority>
}
 80025ee:	46c0      	nop			; (mov r8, r8)
 80025f0:	46bd      	mov	sp, r7
 80025f2:	b004      	add	sp, #16
 80025f4:	bd80      	pop	{r7, pc}

080025f6 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80025f6:	b580      	push	{r7, lr}
 80025f8:	b082      	sub	sp, #8
 80025fa:	af00      	add	r7, sp, #0
 80025fc:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80025fe:	687b      	ldr	r3, [r7, #4]
 8002600:	0018      	movs	r0, r3
 8002602:	f7ff ffbf 	bl	8002584 <SysTick_Config>
 8002606:	0003      	movs	r3, r0
}
 8002608:	0018      	movs	r0, r3
 800260a:	46bd      	mov	sp, r7
 800260c:	b002      	add	sp, #8
 800260e:	bd80      	pop	{r7, pc}

08002610 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8002610:	b580      	push	{r7, lr}
 8002612:	b088      	sub	sp, #32
 8002614:	af00      	add	r7, sp, #0
 8002616:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	2b00      	cmp	r3, #0
 800261c:	d101      	bne.n	8002622 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 800261e:	2301      	movs	r3, #1
 8002620:	e305      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002622:	687b      	ldr	r3, [r7, #4]
 8002624:	681b      	ldr	r3, [r3, #0]
 8002626:	2201      	movs	r2, #1
 8002628:	4013      	ands	r3, r2
 800262a:	d100      	bne.n	800262e <HAL_RCC_OscConfig+0x1e>
 800262c:	e08d      	b.n	800274a <HAL_RCC_OscConfig+0x13a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 800262e:	4bc5      	ldr	r3, [pc, #788]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 8002630:	685b      	ldr	r3, [r3, #4]
 8002632:	220c      	movs	r2, #12
 8002634:	4013      	ands	r3, r2
 8002636:	2b04      	cmp	r3, #4
 8002638:	d00e      	beq.n	8002658 <HAL_RCC_OscConfig+0x48>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 800263a:	4bc2      	ldr	r3, [pc, #776]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 800263c:	685b      	ldr	r3, [r3, #4]
 800263e:	220c      	movs	r2, #12
 8002640:	4013      	ands	r3, r2
 8002642:	2b08      	cmp	r3, #8
 8002644:	d116      	bne.n	8002674 <HAL_RCC_OscConfig+0x64>
 8002646:	4bbf      	ldr	r3, [pc, #764]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 8002648:	685a      	ldr	r2, [r3, #4]
 800264a:	23c0      	movs	r3, #192	; 0xc0
 800264c:	025b      	lsls	r3, r3, #9
 800264e:	401a      	ands	r2, r3
 8002650:	2380      	movs	r3, #128	; 0x80
 8002652:	025b      	lsls	r3, r3, #9
 8002654:	429a      	cmp	r2, r3
 8002656:	d10d      	bne.n	8002674 <HAL_RCC_OscConfig+0x64>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002658:	4bba      	ldr	r3, [pc, #744]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 800265a:	681a      	ldr	r2, [r3, #0]
 800265c:	2380      	movs	r3, #128	; 0x80
 800265e:	029b      	lsls	r3, r3, #10
 8002660:	4013      	ands	r3, r2
 8002662:	d100      	bne.n	8002666 <HAL_RCC_OscConfig+0x56>
 8002664:	e070      	b.n	8002748 <HAL_RCC_OscConfig+0x138>
 8002666:	687b      	ldr	r3, [r7, #4]
 8002668:	685b      	ldr	r3, [r3, #4]
 800266a:	2b00      	cmp	r3, #0
 800266c:	d000      	beq.n	8002670 <HAL_RCC_OscConfig+0x60>
 800266e:	e06b      	b.n	8002748 <HAL_RCC_OscConfig+0x138>
      {
        return HAL_ERROR;
 8002670:	2301      	movs	r3, #1
 8002672:	e2dc      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002674:	687b      	ldr	r3, [r7, #4]
 8002676:	685b      	ldr	r3, [r3, #4]
 8002678:	2b01      	cmp	r3, #1
 800267a:	d107      	bne.n	800268c <HAL_RCC_OscConfig+0x7c>
 800267c:	4bb1      	ldr	r3, [pc, #708]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 800267e:	681a      	ldr	r2, [r3, #0]
 8002680:	4bb0      	ldr	r3, [pc, #704]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 8002682:	2180      	movs	r1, #128	; 0x80
 8002684:	0249      	lsls	r1, r1, #9
 8002686:	430a      	orrs	r2, r1
 8002688:	601a      	str	r2, [r3, #0]
 800268a:	e02f      	b.n	80026ec <HAL_RCC_OscConfig+0xdc>
 800268c:	687b      	ldr	r3, [r7, #4]
 800268e:	685b      	ldr	r3, [r3, #4]
 8002690:	2b00      	cmp	r3, #0
 8002692:	d10c      	bne.n	80026ae <HAL_RCC_OscConfig+0x9e>
 8002694:	4bab      	ldr	r3, [pc, #684]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 8002696:	681a      	ldr	r2, [r3, #0]
 8002698:	4baa      	ldr	r3, [pc, #680]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 800269a:	49ab      	ldr	r1, [pc, #684]	; (8002948 <HAL_RCC_OscConfig+0x338>)
 800269c:	400a      	ands	r2, r1
 800269e:	601a      	str	r2, [r3, #0]
 80026a0:	4ba8      	ldr	r3, [pc, #672]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80026a2:	681a      	ldr	r2, [r3, #0]
 80026a4:	4ba7      	ldr	r3, [pc, #668]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80026a6:	49a9      	ldr	r1, [pc, #676]	; (800294c <HAL_RCC_OscConfig+0x33c>)
 80026a8:	400a      	ands	r2, r1
 80026aa:	601a      	str	r2, [r3, #0]
 80026ac:	e01e      	b.n	80026ec <HAL_RCC_OscConfig+0xdc>
 80026ae:	687b      	ldr	r3, [r7, #4]
 80026b0:	685b      	ldr	r3, [r3, #4]
 80026b2:	2b05      	cmp	r3, #5
 80026b4:	d10e      	bne.n	80026d4 <HAL_RCC_OscConfig+0xc4>
 80026b6:	4ba3      	ldr	r3, [pc, #652]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80026b8:	681a      	ldr	r2, [r3, #0]
 80026ba:	4ba2      	ldr	r3, [pc, #648]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80026bc:	2180      	movs	r1, #128	; 0x80
 80026be:	02c9      	lsls	r1, r1, #11
 80026c0:	430a      	orrs	r2, r1
 80026c2:	601a      	str	r2, [r3, #0]
 80026c4:	4b9f      	ldr	r3, [pc, #636]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80026c6:	681a      	ldr	r2, [r3, #0]
 80026c8:	4b9e      	ldr	r3, [pc, #632]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80026ca:	2180      	movs	r1, #128	; 0x80
 80026cc:	0249      	lsls	r1, r1, #9
 80026ce:	430a      	orrs	r2, r1
 80026d0:	601a      	str	r2, [r3, #0]
 80026d2:	e00b      	b.n	80026ec <HAL_RCC_OscConfig+0xdc>
 80026d4:	4b9b      	ldr	r3, [pc, #620]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80026d6:	681a      	ldr	r2, [r3, #0]
 80026d8:	4b9a      	ldr	r3, [pc, #616]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80026da:	499b      	ldr	r1, [pc, #620]	; (8002948 <HAL_RCC_OscConfig+0x338>)
 80026dc:	400a      	ands	r2, r1
 80026de:	601a      	str	r2, [r3, #0]
 80026e0:	4b98      	ldr	r3, [pc, #608]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80026e2:	681a      	ldr	r2, [r3, #0]
 80026e4:	4b97      	ldr	r3, [pc, #604]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80026e6:	4999      	ldr	r1, [pc, #612]	; (800294c <HAL_RCC_OscConfig+0x33c>)
 80026e8:	400a      	ands	r2, r1
 80026ea:	601a      	str	r2, [r3, #0]
      

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80026ec:	687b      	ldr	r3, [r7, #4]
 80026ee:	685b      	ldr	r3, [r3, #4]
 80026f0:	2b00      	cmp	r3, #0
 80026f2:	d014      	beq.n	800271e <HAL_RCC_OscConfig+0x10e>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80026f4:	f7ff feaa 	bl	800244c <HAL_GetTick>
 80026f8:	0003      	movs	r3, r0
 80026fa:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80026fc:	e008      	b.n	8002710 <HAL_RCC_OscConfig+0x100>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80026fe:	f7ff fea5 	bl	800244c <HAL_GetTick>
 8002702:	0002      	movs	r2, r0
 8002704:	69bb      	ldr	r3, [r7, #24]
 8002706:	1ad3      	subs	r3, r2, r3
 8002708:	2b64      	cmp	r3, #100	; 0x64
 800270a:	d901      	bls.n	8002710 <HAL_RCC_OscConfig+0x100>
          {
            return HAL_TIMEOUT;
 800270c:	2303      	movs	r3, #3
 800270e:	e28e      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002710:	4b8c      	ldr	r3, [pc, #560]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 8002712:	681a      	ldr	r2, [r3, #0]
 8002714:	2380      	movs	r3, #128	; 0x80
 8002716:	029b      	lsls	r3, r3, #10
 8002718:	4013      	ands	r3, r2
 800271a:	d0f0      	beq.n	80026fe <HAL_RCC_OscConfig+0xee>
 800271c:	e015      	b.n	800274a <HAL_RCC_OscConfig+0x13a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800271e:	f7ff fe95 	bl	800244c <HAL_GetTick>
 8002722:	0003      	movs	r3, r0
 8002724:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8002726:	e008      	b.n	800273a <HAL_RCC_OscConfig+0x12a>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002728:	f7ff fe90 	bl	800244c <HAL_GetTick>
 800272c:	0002      	movs	r2, r0
 800272e:	69bb      	ldr	r3, [r7, #24]
 8002730:	1ad3      	subs	r3, r2, r3
 8002732:	2b64      	cmp	r3, #100	; 0x64
 8002734:	d901      	bls.n	800273a <HAL_RCC_OscConfig+0x12a>
          {
            return HAL_TIMEOUT;
 8002736:	2303      	movs	r3, #3
 8002738:	e279      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800273a:	4b82      	ldr	r3, [pc, #520]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 800273c:	681a      	ldr	r2, [r3, #0]
 800273e:	2380      	movs	r3, #128	; 0x80
 8002740:	029b      	lsls	r3, r3, #10
 8002742:	4013      	ands	r3, r2
 8002744:	d1f0      	bne.n	8002728 <HAL_RCC_OscConfig+0x118>
 8002746:	e000      	b.n	800274a <HAL_RCC_OscConfig+0x13a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002748:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800274a:	687b      	ldr	r3, [r7, #4]
 800274c:	681b      	ldr	r3, [r3, #0]
 800274e:	2202      	movs	r2, #2
 8002750:	4013      	ands	r3, r2
 8002752:	d100      	bne.n	8002756 <HAL_RCC_OscConfig+0x146>
 8002754:	e06c      	b.n	8002830 <HAL_RCC_OscConfig+0x220>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 8002756:	4b7b      	ldr	r3, [pc, #492]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 8002758:	685b      	ldr	r3, [r3, #4]
 800275a:	220c      	movs	r2, #12
 800275c:	4013      	ands	r3, r2
 800275e:	d00e      	beq.n	800277e <HAL_RCC_OscConfig+0x16e>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8002760:	4b78      	ldr	r3, [pc, #480]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 8002762:	685b      	ldr	r3, [r3, #4]
 8002764:	220c      	movs	r2, #12
 8002766:	4013      	ands	r3, r2
 8002768:	2b08      	cmp	r3, #8
 800276a:	d11f      	bne.n	80027ac <HAL_RCC_OscConfig+0x19c>
 800276c:	4b75      	ldr	r3, [pc, #468]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 800276e:	685a      	ldr	r2, [r3, #4]
 8002770:	23c0      	movs	r3, #192	; 0xc0
 8002772:	025b      	lsls	r3, r3, #9
 8002774:	401a      	ands	r2, r3
 8002776:	2380      	movs	r3, #128	; 0x80
 8002778:	021b      	lsls	r3, r3, #8
 800277a:	429a      	cmp	r2, r3
 800277c:	d116      	bne.n	80027ac <HAL_RCC_OscConfig+0x19c>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800277e:	4b71      	ldr	r3, [pc, #452]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 8002780:	681b      	ldr	r3, [r3, #0]
 8002782:	2202      	movs	r2, #2
 8002784:	4013      	ands	r3, r2
 8002786:	d005      	beq.n	8002794 <HAL_RCC_OscConfig+0x184>
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	68db      	ldr	r3, [r3, #12]
 800278c:	2b01      	cmp	r3, #1
 800278e:	d001      	beq.n	8002794 <HAL_RCC_OscConfig+0x184>
      {
        return HAL_ERROR;
 8002790:	2301      	movs	r3, #1
 8002792:	e24c      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002794:	4b6b      	ldr	r3, [pc, #428]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 8002796:	681b      	ldr	r3, [r3, #0]
 8002798:	22f8      	movs	r2, #248	; 0xf8
 800279a:	4393      	bics	r3, r2
 800279c:	0019      	movs	r1, r3
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	691b      	ldr	r3, [r3, #16]
 80027a2:	00da      	lsls	r2, r3, #3
 80027a4:	4b67      	ldr	r3, [pc, #412]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80027a6:	430a      	orrs	r2, r1
 80027a8:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80027aa:	e041      	b.n	8002830 <HAL_RCC_OscConfig+0x220>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	68db      	ldr	r3, [r3, #12]
 80027b0:	2b00      	cmp	r3, #0
 80027b2:	d024      	beq.n	80027fe <HAL_RCC_OscConfig+0x1ee>
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80027b4:	4b63      	ldr	r3, [pc, #396]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80027b6:	681a      	ldr	r2, [r3, #0]
 80027b8:	4b62      	ldr	r3, [pc, #392]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80027ba:	2101      	movs	r1, #1
 80027bc:	430a      	orrs	r2, r1
 80027be:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80027c0:	f7ff fe44 	bl	800244c <HAL_GetTick>
 80027c4:	0003      	movs	r3, r0
 80027c6:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80027c8:	e008      	b.n	80027dc <HAL_RCC_OscConfig+0x1cc>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80027ca:	f7ff fe3f 	bl	800244c <HAL_GetTick>
 80027ce:	0002      	movs	r2, r0
 80027d0:	69bb      	ldr	r3, [r7, #24]
 80027d2:	1ad3      	subs	r3, r2, r3
 80027d4:	2b02      	cmp	r3, #2
 80027d6:	d901      	bls.n	80027dc <HAL_RCC_OscConfig+0x1cc>
          {
            return HAL_TIMEOUT;
 80027d8:	2303      	movs	r3, #3
 80027da:	e228      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80027dc:	4b59      	ldr	r3, [pc, #356]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80027de:	681b      	ldr	r3, [r3, #0]
 80027e0:	2202      	movs	r2, #2
 80027e2:	4013      	ands	r3, r2
 80027e4:	d0f1      	beq.n	80027ca <HAL_RCC_OscConfig+0x1ba>
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80027e6:	4b57      	ldr	r3, [pc, #348]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80027e8:	681b      	ldr	r3, [r3, #0]
 80027ea:	22f8      	movs	r2, #248	; 0xf8
 80027ec:	4393      	bics	r3, r2
 80027ee:	0019      	movs	r1, r3
 80027f0:	687b      	ldr	r3, [r7, #4]
 80027f2:	691b      	ldr	r3, [r3, #16]
 80027f4:	00da      	lsls	r2, r3, #3
 80027f6:	4b53      	ldr	r3, [pc, #332]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80027f8:	430a      	orrs	r2, r1
 80027fa:	601a      	str	r2, [r3, #0]
 80027fc:	e018      	b.n	8002830 <HAL_RCC_OscConfig+0x220>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80027fe:	4b51      	ldr	r3, [pc, #324]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 8002800:	681a      	ldr	r2, [r3, #0]
 8002802:	4b50      	ldr	r3, [pc, #320]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 8002804:	2101      	movs	r1, #1
 8002806:	438a      	bics	r2, r1
 8002808:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800280a:	f7ff fe1f 	bl	800244c <HAL_GetTick>
 800280e:	0003      	movs	r3, r0
 8002810:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002812:	e008      	b.n	8002826 <HAL_RCC_OscConfig+0x216>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002814:	f7ff fe1a 	bl	800244c <HAL_GetTick>
 8002818:	0002      	movs	r2, r0
 800281a:	69bb      	ldr	r3, [r7, #24]
 800281c:	1ad3      	subs	r3, r2, r3
 800281e:	2b02      	cmp	r3, #2
 8002820:	d901      	bls.n	8002826 <HAL_RCC_OscConfig+0x216>
          {
            return HAL_TIMEOUT;
 8002822:	2303      	movs	r3, #3
 8002824:	e203      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002826:	4b47      	ldr	r3, [pc, #284]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 8002828:	681b      	ldr	r3, [r3, #0]
 800282a:	2202      	movs	r2, #2
 800282c:	4013      	ands	r3, r2
 800282e:	d1f1      	bne.n	8002814 <HAL_RCC_OscConfig+0x204>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	681b      	ldr	r3, [r3, #0]
 8002834:	2208      	movs	r2, #8
 8002836:	4013      	ands	r3, r2
 8002838:	d036      	beq.n	80028a8 <HAL_RCC_OscConfig+0x298>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
    
    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 800283a:	687b      	ldr	r3, [r7, #4]
 800283c:	69db      	ldr	r3, [r3, #28]
 800283e:	2b00      	cmp	r3, #0
 8002840:	d019      	beq.n	8002876 <HAL_RCC_OscConfig+0x266>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8002842:	4b40      	ldr	r3, [pc, #256]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 8002844:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002846:	4b3f      	ldr	r3, [pc, #252]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 8002848:	2101      	movs	r1, #1
 800284a:	430a      	orrs	r2, r1
 800284c:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800284e:	f7ff fdfd 	bl	800244c <HAL_GetTick>
 8002852:	0003      	movs	r3, r0
 8002854:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8002856:	e008      	b.n	800286a <HAL_RCC_OscConfig+0x25a>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002858:	f7ff fdf8 	bl	800244c <HAL_GetTick>
 800285c:	0002      	movs	r2, r0
 800285e:	69bb      	ldr	r3, [r7, #24]
 8002860:	1ad3      	subs	r3, r2, r3
 8002862:	2b02      	cmp	r3, #2
 8002864:	d901      	bls.n	800286a <HAL_RCC_OscConfig+0x25a>
        {
          return HAL_TIMEOUT;
 8002866:	2303      	movs	r3, #3
 8002868:	e1e1      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800286a:	4b36      	ldr	r3, [pc, #216]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 800286c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800286e:	2202      	movs	r2, #2
 8002870:	4013      	ands	r3, r2
 8002872:	d0f1      	beq.n	8002858 <HAL_RCC_OscConfig+0x248>
 8002874:	e018      	b.n	80028a8 <HAL_RCC_OscConfig+0x298>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8002876:	4b33      	ldr	r3, [pc, #204]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 8002878:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800287a:	4b32      	ldr	r3, [pc, #200]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 800287c:	2101      	movs	r1, #1
 800287e:	438a      	bics	r2, r1
 8002880:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002882:	f7ff fde3 	bl	800244c <HAL_GetTick>
 8002886:	0003      	movs	r3, r0
 8002888:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800288a:	e008      	b.n	800289e <HAL_RCC_OscConfig+0x28e>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800288c:	f7ff fdde 	bl	800244c <HAL_GetTick>
 8002890:	0002      	movs	r2, r0
 8002892:	69bb      	ldr	r3, [r7, #24]
 8002894:	1ad3      	subs	r3, r2, r3
 8002896:	2b02      	cmp	r3, #2
 8002898:	d901      	bls.n	800289e <HAL_RCC_OscConfig+0x28e>
        {
          return HAL_TIMEOUT;
 800289a:	2303      	movs	r3, #3
 800289c:	e1c7      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800289e:	4b29      	ldr	r3, [pc, #164]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80028a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028a2:	2202      	movs	r2, #2
 80028a4:	4013      	ands	r3, r2
 80028a6:	d1f1      	bne.n	800288c <HAL_RCC_OscConfig+0x27c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80028a8:	687b      	ldr	r3, [r7, #4]
 80028aa:	681b      	ldr	r3, [r3, #0]
 80028ac:	2204      	movs	r2, #4
 80028ae:	4013      	ands	r3, r2
 80028b0:	d100      	bne.n	80028b4 <HAL_RCC_OscConfig+0x2a4>
 80028b2:	e0b5      	b.n	8002a20 <HAL_RCC_OscConfig+0x410>
  {
    FlagStatus       pwrclkchanged = RESET;
 80028b4:	201f      	movs	r0, #31
 80028b6:	183b      	adds	r3, r7, r0
 80028b8:	2200      	movs	r2, #0
 80028ba:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80028bc:	4b21      	ldr	r3, [pc, #132]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80028be:	69da      	ldr	r2, [r3, #28]
 80028c0:	2380      	movs	r3, #128	; 0x80
 80028c2:	055b      	lsls	r3, r3, #21
 80028c4:	4013      	ands	r3, r2
 80028c6:	d110      	bne.n	80028ea <HAL_RCC_OscConfig+0x2da>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80028c8:	4b1e      	ldr	r3, [pc, #120]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80028ca:	69da      	ldr	r2, [r3, #28]
 80028cc:	4b1d      	ldr	r3, [pc, #116]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80028ce:	2180      	movs	r1, #128	; 0x80
 80028d0:	0549      	lsls	r1, r1, #21
 80028d2:	430a      	orrs	r2, r1
 80028d4:	61da      	str	r2, [r3, #28]
 80028d6:	4b1b      	ldr	r3, [pc, #108]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 80028d8:	69da      	ldr	r2, [r3, #28]
 80028da:	2380      	movs	r3, #128	; 0x80
 80028dc:	055b      	lsls	r3, r3, #21
 80028de:	4013      	ands	r3, r2
 80028e0:	60fb      	str	r3, [r7, #12]
 80028e2:	68fb      	ldr	r3, [r7, #12]
      pwrclkchanged = SET;
 80028e4:	183b      	adds	r3, r7, r0
 80028e6:	2201      	movs	r2, #1
 80028e8:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80028ea:	4b19      	ldr	r3, [pc, #100]	; (8002950 <HAL_RCC_OscConfig+0x340>)
 80028ec:	681a      	ldr	r2, [r3, #0]
 80028ee:	2380      	movs	r3, #128	; 0x80
 80028f0:	005b      	lsls	r3, r3, #1
 80028f2:	4013      	ands	r3, r2
 80028f4:	d11a      	bne.n	800292c <HAL_RCC_OscConfig+0x31c>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80028f6:	4b16      	ldr	r3, [pc, #88]	; (8002950 <HAL_RCC_OscConfig+0x340>)
 80028f8:	681a      	ldr	r2, [r3, #0]
 80028fa:	4b15      	ldr	r3, [pc, #84]	; (8002950 <HAL_RCC_OscConfig+0x340>)
 80028fc:	2180      	movs	r1, #128	; 0x80
 80028fe:	0049      	lsls	r1, r1, #1
 8002900:	430a      	orrs	r2, r1
 8002902:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8002904:	f7ff fda2 	bl	800244c <HAL_GetTick>
 8002908:	0003      	movs	r3, r0
 800290a:	61bb      	str	r3, [r7, #24]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800290c:	e008      	b.n	8002920 <HAL_RCC_OscConfig+0x310>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800290e:	f7ff fd9d 	bl	800244c <HAL_GetTick>
 8002912:	0002      	movs	r2, r0
 8002914:	69bb      	ldr	r3, [r7, #24]
 8002916:	1ad3      	subs	r3, r2, r3
 8002918:	2b64      	cmp	r3, #100	; 0x64
 800291a:	d901      	bls.n	8002920 <HAL_RCC_OscConfig+0x310>
        {
          return HAL_TIMEOUT;
 800291c:	2303      	movs	r3, #3
 800291e:	e186      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002920:	4b0b      	ldr	r3, [pc, #44]	; (8002950 <HAL_RCC_OscConfig+0x340>)
 8002922:	681a      	ldr	r2, [r3, #0]
 8002924:	2380      	movs	r3, #128	; 0x80
 8002926:	005b      	lsls	r3, r3, #1
 8002928:	4013      	ands	r3, r2
 800292a:	d0f0      	beq.n	800290e <HAL_RCC_OscConfig+0x2fe>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	689b      	ldr	r3, [r3, #8]
 8002930:	2b01      	cmp	r3, #1
 8002932:	d10f      	bne.n	8002954 <HAL_RCC_OscConfig+0x344>
 8002934:	4b03      	ldr	r3, [pc, #12]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 8002936:	6a1a      	ldr	r2, [r3, #32]
 8002938:	4b02      	ldr	r3, [pc, #8]	; (8002944 <HAL_RCC_OscConfig+0x334>)
 800293a:	2101      	movs	r1, #1
 800293c:	430a      	orrs	r2, r1
 800293e:	621a      	str	r2, [r3, #32]
 8002940:	e036      	b.n	80029b0 <HAL_RCC_OscConfig+0x3a0>
 8002942:	46c0      	nop			; (mov r8, r8)
 8002944:	40021000 	.word	0x40021000
 8002948:	fffeffff 	.word	0xfffeffff
 800294c:	fffbffff 	.word	0xfffbffff
 8002950:	40007000 	.word	0x40007000
 8002954:	687b      	ldr	r3, [r7, #4]
 8002956:	689b      	ldr	r3, [r3, #8]
 8002958:	2b00      	cmp	r3, #0
 800295a:	d10c      	bne.n	8002976 <HAL_RCC_OscConfig+0x366>
 800295c:	4bb6      	ldr	r3, [pc, #728]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 800295e:	6a1a      	ldr	r2, [r3, #32]
 8002960:	4bb5      	ldr	r3, [pc, #724]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002962:	2101      	movs	r1, #1
 8002964:	438a      	bics	r2, r1
 8002966:	621a      	str	r2, [r3, #32]
 8002968:	4bb3      	ldr	r3, [pc, #716]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 800296a:	6a1a      	ldr	r2, [r3, #32]
 800296c:	4bb2      	ldr	r3, [pc, #712]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 800296e:	2104      	movs	r1, #4
 8002970:	438a      	bics	r2, r1
 8002972:	621a      	str	r2, [r3, #32]
 8002974:	e01c      	b.n	80029b0 <HAL_RCC_OscConfig+0x3a0>
 8002976:	687b      	ldr	r3, [r7, #4]
 8002978:	689b      	ldr	r3, [r3, #8]
 800297a:	2b05      	cmp	r3, #5
 800297c:	d10c      	bne.n	8002998 <HAL_RCC_OscConfig+0x388>
 800297e:	4bae      	ldr	r3, [pc, #696]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002980:	6a1a      	ldr	r2, [r3, #32]
 8002982:	4bad      	ldr	r3, [pc, #692]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002984:	2104      	movs	r1, #4
 8002986:	430a      	orrs	r2, r1
 8002988:	621a      	str	r2, [r3, #32]
 800298a:	4bab      	ldr	r3, [pc, #684]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 800298c:	6a1a      	ldr	r2, [r3, #32]
 800298e:	4baa      	ldr	r3, [pc, #680]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002990:	2101      	movs	r1, #1
 8002992:	430a      	orrs	r2, r1
 8002994:	621a      	str	r2, [r3, #32]
 8002996:	e00b      	b.n	80029b0 <HAL_RCC_OscConfig+0x3a0>
 8002998:	4ba7      	ldr	r3, [pc, #668]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 800299a:	6a1a      	ldr	r2, [r3, #32]
 800299c:	4ba6      	ldr	r3, [pc, #664]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 800299e:	2101      	movs	r1, #1
 80029a0:	438a      	bics	r2, r1
 80029a2:	621a      	str	r2, [r3, #32]
 80029a4:	4ba4      	ldr	r3, [pc, #656]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 80029a6:	6a1a      	ldr	r2, [r3, #32]
 80029a8:	4ba3      	ldr	r3, [pc, #652]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 80029aa:	2104      	movs	r1, #4
 80029ac:	438a      	bics	r2, r1
 80029ae:	621a      	str	r2, [r3, #32]
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 80029b0:	687b      	ldr	r3, [r7, #4]
 80029b2:	689b      	ldr	r3, [r3, #8]
 80029b4:	2b00      	cmp	r3, #0
 80029b6:	d014      	beq.n	80029e2 <HAL_RCC_OscConfig+0x3d2>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80029b8:	f7ff fd48 	bl	800244c <HAL_GetTick>
 80029bc:	0003      	movs	r3, r0
 80029be:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80029c0:	e009      	b.n	80029d6 <HAL_RCC_OscConfig+0x3c6>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80029c2:	f7ff fd43 	bl	800244c <HAL_GetTick>
 80029c6:	0002      	movs	r2, r0
 80029c8:	69bb      	ldr	r3, [r7, #24]
 80029ca:	1ad3      	subs	r3, r2, r3
 80029cc:	4a9b      	ldr	r2, [pc, #620]	; (8002c3c <HAL_RCC_OscConfig+0x62c>)
 80029ce:	4293      	cmp	r3, r2
 80029d0:	d901      	bls.n	80029d6 <HAL_RCC_OscConfig+0x3c6>
        {
          return HAL_TIMEOUT;
 80029d2:	2303      	movs	r3, #3
 80029d4:	e12b      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80029d6:	4b98      	ldr	r3, [pc, #608]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 80029d8:	6a1b      	ldr	r3, [r3, #32]
 80029da:	2202      	movs	r2, #2
 80029dc:	4013      	ands	r3, r2
 80029de:	d0f0      	beq.n	80029c2 <HAL_RCC_OscConfig+0x3b2>
 80029e0:	e013      	b.n	8002a0a <HAL_RCC_OscConfig+0x3fa>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80029e2:	f7ff fd33 	bl	800244c <HAL_GetTick>
 80029e6:	0003      	movs	r3, r0
 80029e8:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80029ea:	e009      	b.n	8002a00 <HAL_RCC_OscConfig+0x3f0>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80029ec:	f7ff fd2e 	bl	800244c <HAL_GetTick>
 80029f0:	0002      	movs	r2, r0
 80029f2:	69bb      	ldr	r3, [r7, #24]
 80029f4:	1ad3      	subs	r3, r2, r3
 80029f6:	4a91      	ldr	r2, [pc, #580]	; (8002c3c <HAL_RCC_OscConfig+0x62c>)
 80029f8:	4293      	cmp	r3, r2
 80029fa:	d901      	bls.n	8002a00 <HAL_RCC_OscConfig+0x3f0>
        {
          return HAL_TIMEOUT;
 80029fc:	2303      	movs	r3, #3
 80029fe:	e116      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002a00:	4b8d      	ldr	r3, [pc, #564]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002a02:	6a1b      	ldr	r3, [r3, #32]
 8002a04:	2202      	movs	r2, #2
 8002a06:	4013      	ands	r3, r2
 8002a08:	d1f0      	bne.n	80029ec <HAL_RCC_OscConfig+0x3dc>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8002a0a:	231f      	movs	r3, #31
 8002a0c:	18fb      	adds	r3, r7, r3
 8002a0e:	781b      	ldrb	r3, [r3, #0]
 8002a10:	2b01      	cmp	r3, #1
 8002a12:	d105      	bne.n	8002a20 <HAL_RCC_OscConfig+0x410>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8002a14:	4b88      	ldr	r3, [pc, #544]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002a16:	69da      	ldr	r2, [r3, #28]
 8002a18:	4b87      	ldr	r3, [pc, #540]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002a1a:	4989      	ldr	r1, [pc, #548]	; (8002c40 <HAL_RCC_OscConfig+0x630>)
 8002a1c:	400a      	ands	r2, r1
 8002a1e:	61da      	str	r2, [r3, #28]
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 8002a20:	687b      	ldr	r3, [r7, #4]
 8002a22:	681b      	ldr	r3, [r3, #0]
 8002a24:	2210      	movs	r2, #16
 8002a26:	4013      	ands	r3, r2
 8002a28:	d063      	beq.n	8002af2 <HAL_RCC_OscConfig+0x4e2>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 8002a2a:	687b      	ldr	r3, [r7, #4]
 8002a2c:	695b      	ldr	r3, [r3, #20]
 8002a2e:	2b01      	cmp	r3, #1
 8002a30:	d12a      	bne.n	8002a88 <HAL_RCC_OscConfig+0x478>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8002a32:	4b81      	ldr	r3, [pc, #516]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002a34:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002a36:	4b80      	ldr	r3, [pc, #512]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002a38:	2104      	movs	r1, #4
 8002a3a:	430a      	orrs	r2, r1
 8002a3c:	635a      	str	r2, [r3, #52]	; 0x34

      /* Enable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_ENABLE();
 8002a3e:	4b7e      	ldr	r3, [pc, #504]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002a40:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002a42:	4b7d      	ldr	r3, [pc, #500]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002a44:	2101      	movs	r1, #1
 8002a46:	430a      	orrs	r2, r1
 8002a48:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002a4a:	f7ff fcff 	bl	800244c <HAL_GetTick>
 8002a4e:	0003      	movs	r3, r0
 8002a50:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8002a52:	e008      	b.n	8002a66 <HAL_RCC_OscConfig+0x456>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8002a54:	f7ff fcfa 	bl	800244c <HAL_GetTick>
 8002a58:	0002      	movs	r2, r0
 8002a5a:	69bb      	ldr	r3, [r7, #24]
 8002a5c:	1ad3      	subs	r3, r2, r3
 8002a5e:	2b02      	cmp	r3, #2
 8002a60:	d901      	bls.n	8002a66 <HAL_RCC_OscConfig+0x456>
        {
          return HAL_TIMEOUT;
 8002a62:	2303      	movs	r3, #3
 8002a64:	e0e3      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8002a66:	4b74      	ldr	r3, [pc, #464]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002a68:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002a6a:	2202      	movs	r2, #2
 8002a6c:	4013      	ands	r3, r2
 8002a6e:	d0f1      	beq.n	8002a54 <HAL_RCC_OscConfig+0x444>
        }      
      } 

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8002a70:	4b71      	ldr	r3, [pc, #452]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002a72:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002a74:	22f8      	movs	r2, #248	; 0xf8
 8002a76:	4393      	bics	r3, r2
 8002a78:	0019      	movs	r1, r3
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	699b      	ldr	r3, [r3, #24]
 8002a7e:	00da      	lsls	r2, r3, #3
 8002a80:	4b6d      	ldr	r3, [pc, #436]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002a82:	430a      	orrs	r2, r1
 8002a84:	635a      	str	r2, [r3, #52]	; 0x34
 8002a86:	e034      	b.n	8002af2 <HAL_RCC_OscConfig+0x4e2>
    }
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8002a88:	687b      	ldr	r3, [r7, #4]
 8002a8a:	695b      	ldr	r3, [r3, #20]
 8002a8c:	3305      	adds	r3, #5
 8002a8e:	d111      	bne.n	8002ab4 <HAL_RCC_OscConfig+0x4a4>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();
 8002a90:	4b69      	ldr	r3, [pc, #420]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002a92:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002a94:	4b68      	ldr	r3, [pc, #416]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002a96:	2104      	movs	r1, #4
 8002a98:	438a      	bics	r2, r1
 8002a9a:	635a      	str	r2, [r3, #52]	; 0x34

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8002a9c:	4b66      	ldr	r3, [pc, #408]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002a9e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002aa0:	22f8      	movs	r2, #248	; 0xf8
 8002aa2:	4393      	bics	r3, r2
 8002aa4:	0019      	movs	r1, r3
 8002aa6:	687b      	ldr	r3, [r7, #4]
 8002aa8:	699b      	ldr	r3, [r3, #24]
 8002aaa:	00da      	lsls	r2, r3, #3
 8002aac:	4b62      	ldr	r3, [pc, #392]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002aae:	430a      	orrs	r2, r1
 8002ab0:	635a      	str	r2, [r3, #52]	; 0x34
 8002ab2:	e01e      	b.n	8002af2 <HAL_RCC_OscConfig+0x4e2>
    }
    else
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8002ab4:	4b60      	ldr	r3, [pc, #384]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002ab6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002ab8:	4b5f      	ldr	r3, [pc, #380]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002aba:	2104      	movs	r1, #4
 8002abc:	430a      	orrs	r2, r1
 8002abe:	635a      	str	r2, [r3, #52]	; 0x34

      /* Disable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_DISABLE();
 8002ac0:	4b5d      	ldr	r3, [pc, #372]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002ac2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002ac4:	4b5c      	ldr	r3, [pc, #368]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002ac6:	2101      	movs	r1, #1
 8002ac8:	438a      	bics	r2, r1
 8002aca:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002acc:	f7ff fcbe 	bl	800244c <HAL_GetTick>
 8002ad0:	0003      	movs	r3, r0
 8002ad2:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8002ad4:	e008      	b.n	8002ae8 <HAL_RCC_OscConfig+0x4d8>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8002ad6:	f7ff fcb9 	bl	800244c <HAL_GetTick>
 8002ada:	0002      	movs	r2, r0
 8002adc:	69bb      	ldr	r3, [r7, #24]
 8002ade:	1ad3      	subs	r3, r2, r3
 8002ae0:	2b02      	cmp	r3, #2
 8002ae2:	d901      	bls.n	8002ae8 <HAL_RCC_OscConfig+0x4d8>
        {
          return HAL_TIMEOUT;
 8002ae4:	2303      	movs	r3, #3
 8002ae6:	e0a2      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8002ae8:	4b53      	ldr	r3, [pc, #332]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002aea:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002aec:	2202      	movs	r2, #2
 8002aee:	4013      	ands	r3, r2
 8002af0:	d1f1      	bne.n	8002ad6 <HAL_RCC_OscConfig+0x4c6>
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	6a1b      	ldr	r3, [r3, #32]
 8002af6:	2b00      	cmp	r3, #0
 8002af8:	d100      	bne.n	8002afc <HAL_RCC_OscConfig+0x4ec>
 8002afa:	e097      	b.n	8002c2c <HAL_RCC_OscConfig+0x61c>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8002afc:	4b4e      	ldr	r3, [pc, #312]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002afe:	685b      	ldr	r3, [r3, #4]
 8002b00:	220c      	movs	r2, #12
 8002b02:	4013      	ands	r3, r2
 8002b04:	2b08      	cmp	r3, #8
 8002b06:	d100      	bne.n	8002b0a <HAL_RCC_OscConfig+0x4fa>
 8002b08:	e06b      	b.n	8002be2 <HAL_RCC_OscConfig+0x5d2>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8002b0a:	687b      	ldr	r3, [r7, #4]
 8002b0c:	6a1b      	ldr	r3, [r3, #32]
 8002b0e:	2b02      	cmp	r3, #2
 8002b10:	d14c      	bne.n	8002bac <HAL_RCC_OscConfig+0x59c>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
  
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8002b12:	4b49      	ldr	r3, [pc, #292]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002b14:	681a      	ldr	r2, [r3, #0]
 8002b16:	4b48      	ldr	r3, [pc, #288]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002b18:	494a      	ldr	r1, [pc, #296]	; (8002c44 <HAL_RCC_OscConfig+0x634>)
 8002b1a:	400a      	ands	r2, r1
 8002b1c:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002b1e:	f7ff fc95 	bl	800244c <HAL_GetTick>
 8002b22:	0003      	movs	r3, r0
 8002b24:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8002b26:	e008      	b.n	8002b3a <HAL_RCC_OscConfig+0x52a>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002b28:	f7ff fc90 	bl	800244c <HAL_GetTick>
 8002b2c:	0002      	movs	r2, r0
 8002b2e:	69bb      	ldr	r3, [r7, #24]
 8002b30:	1ad3      	subs	r3, r2, r3
 8002b32:	2b02      	cmp	r3, #2
 8002b34:	d901      	bls.n	8002b3a <HAL_RCC_OscConfig+0x52a>
          {
            return HAL_TIMEOUT;
 8002b36:	2303      	movs	r3, #3
 8002b38:	e079      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8002b3a:	4b3f      	ldr	r3, [pc, #252]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002b3c:	681a      	ldr	r2, [r3, #0]
 8002b3e:	2380      	movs	r3, #128	; 0x80
 8002b40:	049b      	lsls	r3, r3, #18
 8002b42:	4013      	ands	r3, r2
 8002b44:	d1f0      	bne.n	8002b28 <HAL_RCC_OscConfig+0x518>
          }
        }

        /* Configure the main PLL clock source, predivider and multiplication factor. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8002b46:	4b3c      	ldr	r3, [pc, #240]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002b48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002b4a:	220f      	movs	r2, #15
 8002b4c:	4393      	bics	r3, r2
 8002b4e:	0019      	movs	r1, r3
 8002b50:	687b      	ldr	r3, [r7, #4]
 8002b52:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002b54:	4b38      	ldr	r3, [pc, #224]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002b56:	430a      	orrs	r2, r1
 8002b58:	62da      	str	r2, [r3, #44]	; 0x2c
 8002b5a:	4b37      	ldr	r3, [pc, #220]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002b5c:	685b      	ldr	r3, [r3, #4]
 8002b5e:	4a3a      	ldr	r2, [pc, #232]	; (8002c48 <HAL_RCC_OscConfig+0x638>)
 8002b60:	4013      	ands	r3, r2
 8002b62:	0019      	movs	r1, r3
 8002b64:	687b      	ldr	r3, [r7, #4]
 8002b66:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b6c:	431a      	orrs	r2, r3
 8002b6e:	4b32      	ldr	r3, [pc, #200]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002b70:	430a      	orrs	r2, r1
 8002b72:	605a      	str	r2, [r3, #4]
                             RCC_OscInitStruct->PLL.PREDIV,
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8002b74:	4b30      	ldr	r3, [pc, #192]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002b76:	681a      	ldr	r2, [r3, #0]
 8002b78:	4b2f      	ldr	r3, [pc, #188]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002b7a:	2180      	movs	r1, #128	; 0x80
 8002b7c:	0449      	lsls	r1, r1, #17
 8002b7e:	430a      	orrs	r2, r1
 8002b80:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002b82:	f7ff fc63 	bl	800244c <HAL_GetTick>
 8002b86:	0003      	movs	r3, r0
 8002b88:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8002b8a:	e008      	b.n	8002b9e <HAL_RCC_OscConfig+0x58e>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002b8c:	f7ff fc5e 	bl	800244c <HAL_GetTick>
 8002b90:	0002      	movs	r2, r0
 8002b92:	69bb      	ldr	r3, [r7, #24]
 8002b94:	1ad3      	subs	r3, r2, r3
 8002b96:	2b02      	cmp	r3, #2
 8002b98:	d901      	bls.n	8002b9e <HAL_RCC_OscConfig+0x58e>
          {
            return HAL_TIMEOUT;
 8002b9a:	2303      	movs	r3, #3
 8002b9c:	e047      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8002b9e:	4b26      	ldr	r3, [pc, #152]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002ba0:	681a      	ldr	r2, [r3, #0]
 8002ba2:	2380      	movs	r3, #128	; 0x80
 8002ba4:	049b      	lsls	r3, r3, #18
 8002ba6:	4013      	ands	r3, r2
 8002ba8:	d0f0      	beq.n	8002b8c <HAL_RCC_OscConfig+0x57c>
 8002baa:	e03f      	b.n	8002c2c <HAL_RCC_OscConfig+0x61c>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8002bac:	4b22      	ldr	r3, [pc, #136]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002bae:	681a      	ldr	r2, [r3, #0]
 8002bb0:	4b21      	ldr	r3, [pc, #132]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002bb2:	4924      	ldr	r1, [pc, #144]	; (8002c44 <HAL_RCC_OscConfig+0x634>)
 8002bb4:	400a      	ands	r2, r1
 8002bb6:	601a      	str	r2, [r3, #0]
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002bb8:	f7ff fc48 	bl	800244c <HAL_GetTick>
 8002bbc:	0003      	movs	r3, r0
 8002bbe:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8002bc0:	e008      	b.n	8002bd4 <HAL_RCC_OscConfig+0x5c4>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002bc2:	f7ff fc43 	bl	800244c <HAL_GetTick>
 8002bc6:	0002      	movs	r2, r0
 8002bc8:	69bb      	ldr	r3, [r7, #24]
 8002bca:	1ad3      	subs	r3, r2, r3
 8002bcc:	2b02      	cmp	r3, #2
 8002bce:	d901      	bls.n	8002bd4 <HAL_RCC_OscConfig+0x5c4>
          {
            return HAL_TIMEOUT;
 8002bd0:	2303      	movs	r3, #3
 8002bd2:	e02c      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8002bd4:	4b18      	ldr	r3, [pc, #96]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002bd6:	681a      	ldr	r2, [r3, #0]
 8002bd8:	2380      	movs	r3, #128	; 0x80
 8002bda:	049b      	lsls	r3, r3, #18
 8002bdc:	4013      	ands	r3, r2
 8002bde:	d1f0      	bne.n	8002bc2 <HAL_RCC_OscConfig+0x5b2>
 8002be0:	e024      	b.n	8002c2c <HAL_RCC_OscConfig+0x61c>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	6a1b      	ldr	r3, [r3, #32]
 8002be6:	2b01      	cmp	r3, #1
 8002be8:	d101      	bne.n	8002bee <HAL_RCC_OscConfig+0x5de>
      {
        return HAL_ERROR;
 8002bea:	2301      	movs	r3, #1
 8002bec:	e01f      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config  = RCC->CFGR;
 8002bee:	4b12      	ldr	r3, [pc, #72]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002bf0:	685b      	ldr	r3, [r3, #4]
 8002bf2:	617b      	str	r3, [r7, #20]
        pll_config2 = RCC->CFGR2;
 8002bf4:	4b10      	ldr	r3, [pc, #64]	; (8002c38 <HAL_RCC_OscConfig+0x628>)
 8002bf6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bf8:	613b      	str	r3, [r7, #16]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8002bfa:	697a      	ldr	r2, [r7, #20]
 8002bfc:	23c0      	movs	r3, #192	; 0xc0
 8002bfe:	025b      	lsls	r3, r3, #9
 8002c00:	401a      	ands	r2, r3
 8002c02:	687b      	ldr	r3, [r7, #4]
 8002c04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c06:	429a      	cmp	r2, r3
 8002c08:	d10e      	bne.n	8002c28 <HAL_RCC_OscConfig+0x618>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8002c0a:	693b      	ldr	r3, [r7, #16]
 8002c0c:	220f      	movs	r2, #15
 8002c0e:	401a      	ands	r2, r3
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8002c14:	429a      	cmp	r2, r3
 8002c16:	d107      	bne.n	8002c28 <HAL_RCC_OscConfig+0x618>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 8002c18:	697a      	ldr	r2, [r7, #20]
 8002c1a:	23f0      	movs	r3, #240	; 0xf0
 8002c1c:	039b      	lsls	r3, r3, #14
 8002c1e:	401a      	ands	r2, r3
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8002c24:	429a      	cmp	r2, r3
 8002c26:	d001      	beq.n	8002c2c <HAL_RCC_OscConfig+0x61c>
        {
          return HAL_ERROR;
 8002c28:	2301      	movs	r3, #1
 8002c2a:	e000      	b.n	8002c2e <HAL_RCC_OscConfig+0x61e>
        }
      }
    }
  }

  return HAL_OK;
 8002c2c:	2300      	movs	r3, #0
}
 8002c2e:	0018      	movs	r0, r3
 8002c30:	46bd      	mov	sp, r7
 8002c32:	b008      	add	sp, #32
 8002c34:	bd80      	pop	{r7, pc}
 8002c36:	46c0      	nop			; (mov r8, r8)
 8002c38:	40021000 	.word	0x40021000
 8002c3c:	00001388 	.word	0x00001388
 8002c40:	efffffff 	.word	0xefffffff
 8002c44:	feffffff 	.word	0xfeffffff
 8002c48:	ffc27fff 	.word	0xffc27fff

08002c4c <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8002c4c:	b580      	push	{r7, lr}
 8002c4e:	b084      	sub	sp, #16
 8002c50:	af00      	add	r7, sp, #0
 8002c52:	6078      	str	r0, [r7, #4]
 8002c54:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	2b00      	cmp	r3, #0
 8002c5a:	d101      	bne.n	8002c60 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8002c5c:	2301      	movs	r3, #1
 8002c5e:	e0b3      	b.n	8002dc8 <HAL_RCC_ClockConfig+0x17c>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8002c60:	4b5b      	ldr	r3, [pc, #364]	; (8002dd0 <HAL_RCC_ClockConfig+0x184>)
 8002c62:	681b      	ldr	r3, [r3, #0]
 8002c64:	2201      	movs	r2, #1
 8002c66:	4013      	ands	r3, r2
 8002c68:	683a      	ldr	r2, [r7, #0]
 8002c6a:	429a      	cmp	r2, r3
 8002c6c:	d911      	bls.n	8002c92 <HAL_RCC_ClockConfig+0x46>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002c6e:	4b58      	ldr	r3, [pc, #352]	; (8002dd0 <HAL_RCC_ClockConfig+0x184>)
 8002c70:	681b      	ldr	r3, [r3, #0]
 8002c72:	2201      	movs	r2, #1
 8002c74:	4393      	bics	r3, r2
 8002c76:	0019      	movs	r1, r3
 8002c78:	4b55      	ldr	r3, [pc, #340]	; (8002dd0 <HAL_RCC_ClockConfig+0x184>)
 8002c7a:	683a      	ldr	r2, [r7, #0]
 8002c7c:	430a      	orrs	r2, r1
 8002c7e:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8002c80:	4b53      	ldr	r3, [pc, #332]	; (8002dd0 <HAL_RCC_ClockConfig+0x184>)
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	2201      	movs	r2, #1
 8002c86:	4013      	ands	r3, r2
 8002c88:	683a      	ldr	r2, [r7, #0]
 8002c8a:	429a      	cmp	r2, r3
 8002c8c:	d001      	beq.n	8002c92 <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 8002c8e:	2301      	movs	r3, #1
 8002c90:	e09a      	b.n	8002dc8 <HAL_RCC_ClockConfig+0x17c>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	681b      	ldr	r3, [r3, #0]
 8002c96:	2202      	movs	r2, #2
 8002c98:	4013      	ands	r3, r2
 8002c9a:	d015      	beq.n	8002cc8 <HAL_RCC_ClockConfig+0x7c>
  {
    /* Set the highest APB divider in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002c9c:	687b      	ldr	r3, [r7, #4]
 8002c9e:	681b      	ldr	r3, [r3, #0]
 8002ca0:	2204      	movs	r2, #4
 8002ca2:	4013      	ands	r3, r2
 8002ca4:	d006      	beq.n	8002cb4 <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8002ca6:	4b4b      	ldr	r3, [pc, #300]	; (8002dd4 <HAL_RCC_ClockConfig+0x188>)
 8002ca8:	685a      	ldr	r2, [r3, #4]
 8002caa:	4b4a      	ldr	r3, [pc, #296]	; (8002dd4 <HAL_RCC_ClockConfig+0x188>)
 8002cac:	21e0      	movs	r1, #224	; 0xe0
 8002cae:	00c9      	lsls	r1, r1, #3
 8002cb0:	430a      	orrs	r2, r1
 8002cb2:	605a      	str	r2, [r3, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8002cb4:	4b47      	ldr	r3, [pc, #284]	; (8002dd4 <HAL_RCC_ClockConfig+0x188>)
 8002cb6:	685b      	ldr	r3, [r3, #4]
 8002cb8:	22f0      	movs	r2, #240	; 0xf0
 8002cba:	4393      	bics	r3, r2
 8002cbc:	0019      	movs	r1, r3
 8002cbe:	687b      	ldr	r3, [r7, #4]
 8002cc0:	689a      	ldr	r2, [r3, #8]
 8002cc2:	4b44      	ldr	r3, [pc, #272]	; (8002dd4 <HAL_RCC_ClockConfig+0x188>)
 8002cc4:	430a      	orrs	r2, r1
 8002cc6:	605a      	str	r2, [r3, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8002cc8:	687b      	ldr	r3, [r7, #4]
 8002cca:	681b      	ldr	r3, [r3, #0]
 8002ccc:	2201      	movs	r2, #1
 8002cce:	4013      	ands	r3, r2
 8002cd0:	d040      	beq.n	8002d54 <HAL_RCC_ClockConfig+0x108>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
    
    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002cd2:	687b      	ldr	r3, [r7, #4]
 8002cd4:	685b      	ldr	r3, [r3, #4]
 8002cd6:	2b01      	cmp	r3, #1
 8002cd8:	d107      	bne.n	8002cea <HAL_RCC_ClockConfig+0x9e>
    {
      /* Check the HSE ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002cda:	4b3e      	ldr	r3, [pc, #248]	; (8002dd4 <HAL_RCC_ClockConfig+0x188>)
 8002cdc:	681a      	ldr	r2, [r3, #0]
 8002cde:	2380      	movs	r3, #128	; 0x80
 8002ce0:	029b      	lsls	r3, r3, #10
 8002ce2:	4013      	ands	r3, r2
 8002ce4:	d114      	bne.n	8002d10 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8002ce6:	2301      	movs	r3, #1
 8002ce8:	e06e      	b.n	8002dc8 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	685b      	ldr	r3, [r3, #4]
 8002cee:	2b02      	cmp	r3, #2
 8002cf0:	d107      	bne.n	8002d02 <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the PLL ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002cf2:	4b38      	ldr	r3, [pc, #224]	; (8002dd4 <HAL_RCC_ClockConfig+0x188>)
 8002cf4:	681a      	ldr	r2, [r3, #0]
 8002cf6:	2380      	movs	r3, #128	; 0x80
 8002cf8:	049b      	lsls	r3, r3, #18
 8002cfa:	4013      	ands	r3, r2
 8002cfc:	d108      	bne.n	8002d10 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8002cfe:	2301      	movs	r3, #1
 8002d00:	e062      	b.n	8002dc8 <HAL_RCC_ClockConfig+0x17c>
#endif /* RCC_CFGR_SWS_HSI48 */
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002d02:	4b34      	ldr	r3, [pc, #208]	; (8002dd4 <HAL_RCC_ClockConfig+0x188>)
 8002d04:	681b      	ldr	r3, [r3, #0]
 8002d06:	2202      	movs	r2, #2
 8002d08:	4013      	ands	r3, r2
 8002d0a:	d101      	bne.n	8002d10 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8002d0c:	2301      	movs	r3, #1
 8002d0e:	e05b      	b.n	8002dc8 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8002d10:	4b30      	ldr	r3, [pc, #192]	; (8002dd4 <HAL_RCC_ClockConfig+0x188>)
 8002d12:	685b      	ldr	r3, [r3, #4]
 8002d14:	2203      	movs	r2, #3
 8002d16:	4393      	bics	r3, r2
 8002d18:	0019      	movs	r1, r3
 8002d1a:	687b      	ldr	r3, [r7, #4]
 8002d1c:	685a      	ldr	r2, [r3, #4]
 8002d1e:	4b2d      	ldr	r3, [pc, #180]	; (8002dd4 <HAL_RCC_ClockConfig+0x188>)
 8002d20:	430a      	orrs	r2, r1
 8002d22:	605a      	str	r2, [r3, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8002d24:	f7ff fb92 	bl	800244c <HAL_GetTick>
 8002d28:	0003      	movs	r3, r0
 8002d2a:	60fb      	str	r3, [r7, #12]
    
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8002d2c:	e009      	b.n	8002d42 <HAL_RCC_ClockConfig+0xf6>
    {
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002d2e:	f7ff fb8d 	bl	800244c <HAL_GetTick>
 8002d32:	0002      	movs	r2, r0
 8002d34:	68fb      	ldr	r3, [r7, #12]
 8002d36:	1ad3      	subs	r3, r2, r3
 8002d38:	4a27      	ldr	r2, [pc, #156]	; (8002dd8 <HAL_RCC_ClockConfig+0x18c>)
 8002d3a:	4293      	cmp	r3, r2
 8002d3c:	d901      	bls.n	8002d42 <HAL_RCC_ClockConfig+0xf6>
      {
        return HAL_TIMEOUT;
 8002d3e:	2303      	movs	r3, #3
 8002d40:	e042      	b.n	8002dc8 <HAL_RCC_ClockConfig+0x17c>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8002d42:	4b24      	ldr	r3, [pc, #144]	; (8002dd4 <HAL_RCC_ClockConfig+0x188>)
 8002d44:	685b      	ldr	r3, [r3, #4]
 8002d46:	220c      	movs	r2, #12
 8002d48:	401a      	ands	r2, r3
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	685b      	ldr	r3, [r3, #4]
 8002d4e:	009b      	lsls	r3, r3, #2
 8002d50:	429a      	cmp	r2, r3
 8002d52:	d1ec      	bne.n	8002d2e <HAL_RCC_ClockConfig+0xe2>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8002d54:	4b1e      	ldr	r3, [pc, #120]	; (8002dd0 <HAL_RCC_ClockConfig+0x184>)
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	2201      	movs	r2, #1
 8002d5a:	4013      	ands	r3, r2
 8002d5c:	683a      	ldr	r2, [r7, #0]
 8002d5e:	429a      	cmp	r2, r3
 8002d60:	d211      	bcs.n	8002d86 <HAL_RCC_ClockConfig+0x13a>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002d62:	4b1b      	ldr	r3, [pc, #108]	; (8002dd0 <HAL_RCC_ClockConfig+0x184>)
 8002d64:	681b      	ldr	r3, [r3, #0]
 8002d66:	2201      	movs	r2, #1
 8002d68:	4393      	bics	r3, r2
 8002d6a:	0019      	movs	r1, r3
 8002d6c:	4b18      	ldr	r3, [pc, #96]	; (8002dd0 <HAL_RCC_ClockConfig+0x184>)
 8002d6e:	683a      	ldr	r2, [r7, #0]
 8002d70:	430a      	orrs	r2, r1
 8002d72:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8002d74:	4b16      	ldr	r3, [pc, #88]	; (8002dd0 <HAL_RCC_ClockConfig+0x184>)
 8002d76:	681b      	ldr	r3, [r3, #0]
 8002d78:	2201      	movs	r2, #1
 8002d7a:	4013      	ands	r3, r2
 8002d7c:	683a      	ldr	r2, [r7, #0]
 8002d7e:	429a      	cmp	r2, r3
 8002d80:	d001      	beq.n	8002d86 <HAL_RCC_ClockConfig+0x13a>
    {
      return HAL_ERROR;
 8002d82:	2301      	movs	r3, #1
 8002d84:	e020      	b.n	8002dc8 <HAL_RCC_ClockConfig+0x17c>
    }
  }    

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002d86:	687b      	ldr	r3, [r7, #4]
 8002d88:	681b      	ldr	r3, [r3, #0]
 8002d8a:	2204      	movs	r2, #4
 8002d8c:	4013      	ands	r3, r2
 8002d8e:	d009      	beq.n	8002da4 <HAL_RCC_ClockConfig+0x158>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8002d90:	4b10      	ldr	r3, [pc, #64]	; (8002dd4 <HAL_RCC_ClockConfig+0x188>)
 8002d92:	685b      	ldr	r3, [r3, #4]
 8002d94:	4a11      	ldr	r2, [pc, #68]	; (8002ddc <HAL_RCC_ClockConfig+0x190>)
 8002d96:	4013      	ands	r3, r2
 8002d98:	0019      	movs	r1, r3
 8002d9a:	687b      	ldr	r3, [r7, #4]
 8002d9c:	68da      	ldr	r2, [r3, #12]
 8002d9e:	4b0d      	ldr	r3, [pc, #52]	; (8002dd4 <HAL_RCC_ClockConfig+0x188>)
 8002da0:	430a      	orrs	r2, r1
 8002da2:	605a      	str	r2, [r3, #4]
  }
  
  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 8002da4:	f000 f820 	bl	8002de8 <HAL_RCC_GetSysClockFreq>
 8002da8:	0001      	movs	r1, r0
 8002daa:	4b0a      	ldr	r3, [pc, #40]	; (8002dd4 <HAL_RCC_ClockConfig+0x188>)
 8002dac:	685b      	ldr	r3, [r3, #4]
 8002dae:	091b      	lsrs	r3, r3, #4
 8002db0:	220f      	movs	r2, #15
 8002db2:	4013      	ands	r3, r2
 8002db4:	4a0a      	ldr	r2, [pc, #40]	; (8002de0 <HAL_RCC_ClockConfig+0x194>)
 8002db6:	5cd3      	ldrb	r3, [r2, r3]
 8002db8:	000a      	movs	r2, r1
 8002dba:	40da      	lsrs	r2, r3
 8002dbc:	4b09      	ldr	r3, [pc, #36]	; (8002de4 <HAL_RCC_ClockConfig+0x198>)
 8002dbe:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 8002dc0:	2000      	movs	r0, #0
 8002dc2:	f7ff fafd 	bl	80023c0 <HAL_InitTick>
  
  return HAL_OK;
 8002dc6:	2300      	movs	r3, #0
}
 8002dc8:	0018      	movs	r0, r3
 8002dca:	46bd      	mov	sp, r7
 8002dcc:	b004      	add	sp, #16
 8002dce:	bd80      	pop	{r7, pc}
 8002dd0:	40022000 	.word	0x40022000
 8002dd4:	40021000 	.word	0x40021000
 8002dd8:	00001388 	.word	0x00001388
 8002ddc:	fffff8ff 	.word	0xfffff8ff
 8002de0:	08007528 	.word	0x08007528
 8002de4:	20000000 	.word	0x20000000

08002de8 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8002de8:	b590      	push	{r4, r7, lr}
 8002dea:	b08f      	sub	sp, #60	; 0x3c
 8002dec:	af00      	add	r7, sp, #0
  const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 8002dee:	2314      	movs	r3, #20
 8002df0:	18fb      	adds	r3, r7, r3
 8002df2:	4a2c      	ldr	r2, [pc, #176]	; (8002ea4 <HAL_RCC_GetSysClockFreq+0xbc>)
 8002df4:	ca13      	ldmia	r2!, {r0, r1, r4}
 8002df6:	c313      	stmia	r3!, {r0, r1, r4}
 8002df8:	6812      	ldr	r2, [r2, #0]
 8002dfa:	601a      	str	r2, [r3, #0]
                                         10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
  const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 8002dfc:	1d3b      	adds	r3, r7, #4
 8002dfe:	4a2a      	ldr	r2, [pc, #168]	; (8002ea8 <HAL_RCC_GetSysClockFreq+0xc0>)
 8002e00:	ca13      	ldmia	r2!, {r0, r1, r4}
 8002e02:	c313      	stmia	r3!, {r0, r1, r4}
 8002e04:	6812      	ldr	r2, [r2, #0]
 8002e06:	601a      	str	r2, [r3, #0]
                                           9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};

  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8002e08:	2300      	movs	r3, #0
 8002e0a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002e0c:	2300      	movs	r3, #0
 8002e0e:	62bb      	str	r3, [r7, #40]	; 0x28
 8002e10:	2300      	movs	r3, #0
 8002e12:	637b      	str	r3, [r7, #52]	; 0x34
 8002e14:	2300      	movs	r3, #0
 8002e16:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t sysclockfreq = 0U;
 8002e18:	2300      	movs	r3, #0
 8002e1a:	633b      	str	r3, [r7, #48]	; 0x30
  
  tmpreg = RCC->CFGR;
 8002e1c:	4b23      	ldr	r3, [pc, #140]	; (8002eac <HAL_RCC_GetSysClockFreq+0xc4>)
 8002e1e:	685b      	ldr	r3, [r3, #4]
 8002e20:	62fb      	str	r3, [r7, #44]	; 0x2c
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8002e22:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002e24:	220c      	movs	r2, #12
 8002e26:	4013      	ands	r3, r2
 8002e28:	2b04      	cmp	r3, #4
 8002e2a:	d002      	beq.n	8002e32 <HAL_RCC_GetSysClockFreq+0x4a>
 8002e2c:	2b08      	cmp	r3, #8
 8002e2e:	d003      	beq.n	8002e38 <HAL_RCC_GetSysClockFreq+0x50>
 8002e30:	e02f      	b.n	8002e92 <HAL_RCC_GetSysClockFreq+0xaa>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8002e32:	4b1f      	ldr	r3, [pc, #124]	; (8002eb0 <HAL_RCC_GetSysClockFreq+0xc8>)
 8002e34:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8002e36:	e02f      	b.n	8002e98 <HAL_RCC_GetSysClockFreq+0xb0>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8002e38:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002e3a:	0c9b      	lsrs	r3, r3, #18
 8002e3c:	220f      	movs	r2, #15
 8002e3e:	4013      	ands	r3, r2
 8002e40:	2214      	movs	r2, #20
 8002e42:	18ba      	adds	r2, r7, r2
 8002e44:	5cd3      	ldrb	r3, [r2, r3]
 8002e46:	627b      	str	r3, [r7, #36]	; 0x24
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8002e48:	4b18      	ldr	r3, [pc, #96]	; (8002eac <HAL_RCC_GetSysClockFreq+0xc4>)
 8002e4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e4c:	220f      	movs	r2, #15
 8002e4e:	4013      	ands	r3, r2
 8002e50:	1d3a      	adds	r2, r7, #4
 8002e52:	5cd3      	ldrb	r3, [r2, r3]
 8002e54:	62bb      	str	r3, [r7, #40]	; 0x28
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 8002e56:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8002e58:	23c0      	movs	r3, #192	; 0xc0
 8002e5a:	025b      	lsls	r3, r3, #9
 8002e5c:	401a      	ands	r2, r3
 8002e5e:	2380      	movs	r3, #128	; 0x80
 8002e60:	025b      	lsls	r3, r3, #9
 8002e62:	429a      	cmp	r2, r3
 8002e64:	d109      	bne.n	8002e7a <HAL_RCC_GetSysClockFreq+0x92>
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8002e66:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8002e68:	4811      	ldr	r0, [pc, #68]	; (8002eb0 <HAL_RCC_GetSysClockFreq+0xc8>)
 8002e6a:	f7fd f969 	bl	8000140 <__udivsi3>
 8002e6e:	0003      	movs	r3, r0
 8002e70:	001a      	movs	r2, r3
 8002e72:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002e74:	4353      	muls	r3, r2
 8002e76:	637b      	str	r3, [r7, #52]	; 0x34
 8002e78:	e008      	b.n	8002e8c <HAL_RCC_GetSysClockFreq+0xa4>
#endif /* RCC_CFGR_PLLSRC_HSI48_PREDIV */
      else
      {
#if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx) || defined(STM32F030xC))
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8002e7a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8002e7c:	480c      	ldr	r0, [pc, #48]	; (8002eb0 <HAL_RCC_GetSysClockFreq+0xc8>)
 8002e7e:	f7fd f95f 	bl	8000140 <__udivsi3>
 8002e82:	0003      	movs	r3, r0
 8002e84:	001a      	movs	r2, r3
 8002e86:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002e88:	4353      	muls	r3, r2
 8002e8a:	637b      	str	r3, [r7, #52]	; 0x34
#else
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
#endif
      }
      sysclockfreq = pllclk;
 8002e8c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002e8e:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8002e90:	e002      	b.n	8002e98 <HAL_RCC_GetSysClockFreq+0xb0>
    }
#endif /* RCC_CFGR_SWS_HSI48 */
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8002e92:	4b07      	ldr	r3, [pc, #28]	; (8002eb0 <HAL_RCC_GetSysClockFreq+0xc8>)
 8002e94:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8002e96:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 8002e98:	6b3b      	ldr	r3, [r7, #48]	; 0x30
}
 8002e9a:	0018      	movs	r0, r3
 8002e9c:	46bd      	mov	sp, r7
 8002e9e:	b00f      	add	sp, #60	; 0x3c
 8002ea0:	bd90      	pop	{r4, r7, pc}
 8002ea2:	46c0      	nop			; (mov r8, r8)
 8002ea4:	08007488 	.word	0x08007488
 8002ea8:	08007498 	.word	0x08007498
 8002eac:	40021000 	.word	0x40021000
 8002eb0:	007a1200 	.word	0x007a1200

08002eb4 <adc_chsel>:
			return BML_TIMEOUT;
		}
		/* For robust implementation, add here time-out management */
	}
}
void adc_chsel(GPIO_TypeDef *port, uint16_t pin) {
 8002eb4:	b580      	push	{r7, lr}
 8002eb6:	b082      	sub	sp, #8
 8002eb8:	af00      	add	r7, sp, #0
 8002eba:	6078      	str	r0, [r7, #4]
 8002ebc:	000a      	movs	r2, r1
 8002ebe:	1cbb      	adds	r3, r7, #2
 8002ec0:	801a      	strh	r2, [r3, #0]

	if (port == GPIOA) {
 8002ec2:	687a      	ldr	r2, [r7, #4]
 8002ec4:	2390      	movs	r3, #144	; 0x90
 8002ec6:	05db      	lsls	r3, r3, #23
 8002ec8:	429a      	cmp	r2, r3
 8002eca:	d141      	bne.n	8002f50 <adc_chsel+0x9c>
		switch (pin) {
 8002ecc:	1cbb      	adds	r3, r7, #2
 8002ece:	881b      	ldrh	r3, [r3, #0]
 8002ed0:	2b07      	cmp	r3, #7
 8002ed2:	d900      	bls.n	8002ed6 <adc_chsel+0x22>
 8002ed4:	e094      	b.n	8003000 <adc_chsel+0x14c>
 8002ed6:	009a      	lsls	r2, r3, #2
 8002ed8:	4b4e      	ldr	r3, [pc, #312]	; (8003014 <adc_chsel+0x160>)
 8002eda:	18d3      	adds	r3, r2, r3
 8002edc:	681b      	ldr	r3, [r3, #0]
 8002ede:	469f      	mov	pc, r3
		case 0:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL0;
 8002ee0:	4b4d      	ldr	r3, [pc, #308]	; (8003018 <adc_chsel+0x164>)
 8002ee2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002ee4:	4b4c      	ldr	r3, [pc, #304]	; (8003018 <adc_chsel+0x164>)
 8002ee6:	2101      	movs	r1, #1
 8002ee8:	430a      	orrs	r2, r1
 8002eea:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8002eec:	e08d      	b.n	800300a <adc_chsel+0x156>
		case 1:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL1;
 8002eee:	4b4a      	ldr	r3, [pc, #296]	; (8003018 <adc_chsel+0x164>)
 8002ef0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002ef2:	4b49      	ldr	r3, [pc, #292]	; (8003018 <adc_chsel+0x164>)
 8002ef4:	2102      	movs	r1, #2
 8002ef6:	430a      	orrs	r2, r1
 8002ef8:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8002efa:	e086      	b.n	800300a <adc_chsel+0x156>
		case 2:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL2;
 8002efc:	4b46      	ldr	r3, [pc, #280]	; (8003018 <adc_chsel+0x164>)
 8002efe:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002f00:	4b45      	ldr	r3, [pc, #276]	; (8003018 <adc_chsel+0x164>)
 8002f02:	2104      	movs	r1, #4
 8002f04:	430a      	orrs	r2, r1
 8002f06:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8002f08:	e07f      	b.n	800300a <adc_chsel+0x156>
		case 3:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL3;
 8002f0a:	4b43      	ldr	r3, [pc, #268]	; (8003018 <adc_chsel+0x164>)
 8002f0c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002f0e:	4b42      	ldr	r3, [pc, #264]	; (8003018 <adc_chsel+0x164>)
 8002f10:	2108      	movs	r1, #8
 8002f12:	430a      	orrs	r2, r1
 8002f14:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8002f16:	e078      	b.n	800300a <adc_chsel+0x156>
		case 4:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL4;
 8002f18:	4b3f      	ldr	r3, [pc, #252]	; (8003018 <adc_chsel+0x164>)
 8002f1a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002f1c:	4b3e      	ldr	r3, [pc, #248]	; (8003018 <adc_chsel+0x164>)
 8002f1e:	2110      	movs	r1, #16
 8002f20:	430a      	orrs	r2, r1
 8002f22:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8002f24:	e071      	b.n	800300a <adc_chsel+0x156>
		case 5:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL5;
 8002f26:	4b3c      	ldr	r3, [pc, #240]	; (8003018 <adc_chsel+0x164>)
 8002f28:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002f2a:	4b3b      	ldr	r3, [pc, #236]	; (8003018 <adc_chsel+0x164>)
 8002f2c:	2120      	movs	r1, #32
 8002f2e:	430a      	orrs	r2, r1
 8002f30:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8002f32:	e06a      	b.n	800300a <adc_chsel+0x156>
		case 6:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL6;
 8002f34:	4b38      	ldr	r3, [pc, #224]	; (8003018 <adc_chsel+0x164>)
 8002f36:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002f38:	4b37      	ldr	r3, [pc, #220]	; (8003018 <adc_chsel+0x164>)
 8002f3a:	2140      	movs	r1, #64	; 0x40
 8002f3c:	430a      	orrs	r2, r1
 8002f3e:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8002f40:	e063      	b.n	800300a <adc_chsel+0x156>
		case 7:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL7;
 8002f42:	4b35      	ldr	r3, [pc, #212]	; (8003018 <adc_chsel+0x164>)
 8002f44:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002f46:	4b34      	ldr	r3, [pc, #208]	; (8003018 <adc_chsel+0x164>)
 8002f48:	2180      	movs	r1, #128	; 0x80
 8002f4a:	430a      	orrs	r2, r1
 8002f4c:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8002f4e:	e05c      	b.n	800300a <adc_chsel+0x156>
		default:
			break;
		}
	} else if (port == GPIOB) {
 8002f50:	687b      	ldr	r3, [r7, #4]
 8002f52:	4a32      	ldr	r2, [pc, #200]	; (800301c <adc_chsel+0x168>)
 8002f54:	4293      	cmp	r3, r2
 8002f56:	d116      	bne.n	8002f86 <adc_chsel+0xd2>
		switch (pin) {
 8002f58:	1cbb      	adds	r3, r7, #2
 8002f5a:	881b      	ldrh	r3, [r3, #0]
 8002f5c:	2b00      	cmp	r3, #0
 8002f5e:	d002      	beq.n	8002f66 <adc_chsel+0xb2>
 8002f60:	2b01      	cmp	r3, #1
 8002f62:	d008      	beq.n	8002f76 <adc_chsel+0xc2>
			break;
		case 1:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL9;
			break;
		default:
			break;
 8002f64:	e051      	b.n	800300a <adc_chsel+0x156>
			ADC1->CHSELR |= ADC_CHSELR_CHSEL8;
 8002f66:	4b2c      	ldr	r3, [pc, #176]	; (8003018 <adc_chsel+0x164>)
 8002f68:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002f6a:	4b2b      	ldr	r3, [pc, #172]	; (8003018 <adc_chsel+0x164>)
 8002f6c:	2180      	movs	r1, #128	; 0x80
 8002f6e:	0049      	lsls	r1, r1, #1
 8002f70:	430a      	orrs	r2, r1
 8002f72:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8002f74:	e049      	b.n	800300a <adc_chsel+0x156>
			ADC1->CHSELR |= ADC_CHSELR_CHSEL9;
 8002f76:	4b28      	ldr	r3, [pc, #160]	; (8003018 <adc_chsel+0x164>)
 8002f78:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002f7a:	4b27      	ldr	r3, [pc, #156]	; (8003018 <adc_chsel+0x164>)
 8002f7c:	2180      	movs	r1, #128	; 0x80
 8002f7e:	0089      	lsls	r1, r1, #2
 8002f80:	430a      	orrs	r2, r1
 8002f82:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8002f84:	e041      	b.n	800300a <adc_chsel+0x156>
		}
	} else if (port == GPIOC) {
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	4a25      	ldr	r2, [pc, #148]	; (8003020 <adc_chsel+0x16c>)
 8002f8a:	4293      	cmp	r3, r2
 8002f8c:	d13a      	bne.n	8003004 <adc_chsel+0x150>
		switch (pin) {
 8002f8e:	1cbb      	adds	r3, r7, #2
 8002f90:	881b      	ldrh	r3, [r3, #0]
 8002f92:	2b05      	cmp	r3, #5
 8002f94:	d838      	bhi.n	8003008 <adc_chsel+0x154>
 8002f96:	009a      	lsls	r2, r3, #2
 8002f98:	4b22      	ldr	r3, [pc, #136]	; (8003024 <adc_chsel+0x170>)
 8002f9a:	18d3      	adds	r3, r2, r3
 8002f9c:	681b      	ldr	r3, [r3, #0]
 8002f9e:	469f      	mov	pc, r3
		case 0:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL10;
 8002fa0:	4b1d      	ldr	r3, [pc, #116]	; (8003018 <adc_chsel+0x164>)
 8002fa2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002fa4:	4b1c      	ldr	r3, [pc, #112]	; (8003018 <adc_chsel+0x164>)
 8002fa6:	2180      	movs	r1, #128	; 0x80
 8002fa8:	00c9      	lsls	r1, r1, #3
 8002faa:	430a      	orrs	r2, r1
 8002fac:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8002fae:	e02c      	b.n	800300a <adc_chsel+0x156>
		case 1:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL11;
 8002fb0:	4b19      	ldr	r3, [pc, #100]	; (8003018 <adc_chsel+0x164>)
 8002fb2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002fb4:	4b18      	ldr	r3, [pc, #96]	; (8003018 <adc_chsel+0x164>)
 8002fb6:	2180      	movs	r1, #128	; 0x80
 8002fb8:	0109      	lsls	r1, r1, #4
 8002fba:	430a      	orrs	r2, r1
 8002fbc:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8002fbe:	e024      	b.n	800300a <adc_chsel+0x156>
		case 2:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL12;
 8002fc0:	4b15      	ldr	r3, [pc, #84]	; (8003018 <adc_chsel+0x164>)
 8002fc2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002fc4:	4b14      	ldr	r3, [pc, #80]	; (8003018 <adc_chsel+0x164>)
 8002fc6:	2180      	movs	r1, #128	; 0x80
 8002fc8:	0149      	lsls	r1, r1, #5
 8002fca:	430a      	orrs	r2, r1
 8002fcc:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8002fce:	e01c      	b.n	800300a <adc_chsel+0x156>
		case 3:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL13;
 8002fd0:	4b11      	ldr	r3, [pc, #68]	; (8003018 <adc_chsel+0x164>)
 8002fd2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002fd4:	4b10      	ldr	r3, [pc, #64]	; (8003018 <adc_chsel+0x164>)
 8002fd6:	2180      	movs	r1, #128	; 0x80
 8002fd8:	0189      	lsls	r1, r1, #6
 8002fda:	430a      	orrs	r2, r1
 8002fdc:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8002fde:	e014      	b.n	800300a <adc_chsel+0x156>
		case 4:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL14;
 8002fe0:	4b0d      	ldr	r3, [pc, #52]	; (8003018 <adc_chsel+0x164>)
 8002fe2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002fe4:	4b0c      	ldr	r3, [pc, #48]	; (8003018 <adc_chsel+0x164>)
 8002fe6:	2180      	movs	r1, #128	; 0x80
 8002fe8:	01c9      	lsls	r1, r1, #7
 8002fea:	430a      	orrs	r2, r1
 8002fec:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8002fee:	e00c      	b.n	800300a <adc_chsel+0x156>
		case 5:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL15;
 8002ff0:	4b09      	ldr	r3, [pc, #36]	; (8003018 <adc_chsel+0x164>)
 8002ff2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002ff4:	4b08      	ldr	r3, [pc, #32]	; (8003018 <adc_chsel+0x164>)
 8002ff6:	2180      	movs	r1, #128	; 0x80
 8002ff8:	0209      	lsls	r1, r1, #8
 8002ffa:	430a      	orrs	r2, r1
 8002ffc:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8002ffe:	e004      	b.n	800300a <adc_chsel+0x156>
			break;
 8003000:	46c0      	nop			; (mov r8, r8)
 8003002:	e002      	b.n	800300a <adc_chsel+0x156>
		default:
			break;
		}
	}
 8003004:	46c0      	nop			; (mov r8, r8)
 8003006:	e000      	b.n	800300a <adc_chsel+0x156>
			break;
 8003008:	46c0      	nop			; (mov r8, r8)
}
 800300a:	46c0      	nop			; (mov r8, r8)
 800300c:	46bd      	mov	sp, r7
 800300e:	b002      	add	sp, #8
 8003010:	bd80      	pop	{r7, pc}
 8003012:	46c0      	nop			; (mov r8, r8)
 8003014:	08007538 	.word	0x08007538
 8003018:	40012400 	.word	0x40012400
 800301c:	48000400 	.word	0x48000400
 8003020:	48000800 	.word	0x48000800
 8003024:	08007558 	.word	0x08007558

08003028 <gpio_clk_en>:
		uint16_t out_max) {
	return (((x - in_min) * (out_max - out_min)) / ((in_max - in_min) + out_min));
}

/**********************Enable clock Function*************************************/
void gpio_clk_en(GPIO_TypeDef *port) {
 8003028:	b580      	push	{r7, lr}
 800302a:	b082      	sub	sp, #8
 800302c:	af00      	add	r7, sp, #0
 800302e:	6078      	str	r0, [r7, #4]
	if (port == GPIOA) {
 8003030:	687a      	ldr	r2, [r7, #4]
 8003032:	2390      	movs	r3, #144	; 0x90
 8003034:	05db      	lsls	r3, r3, #23
 8003036:	429a      	cmp	r2, r3
 8003038:	d107      	bne.n	800304a <gpio_clk_en+0x22>
		GPIOA_CLK_EN;
 800303a:	4b1b      	ldr	r3, [pc, #108]	; (80030a8 <gpio_clk_en+0x80>)
 800303c:	695a      	ldr	r2, [r3, #20]
 800303e:	4b1a      	ldr	r3, [pc, #104]	; (80030a8 <gpio_clk_en+0x80>)
 8003040:	2180      	movs	r1, #128	; 0x80
 8003042:	0289      	lsls	r1, r1, #10
 8003044:	430a      	orrs	r2, r1
 8003046:	615a      	str	r2, [r3, #20]
	} else if (port == GPIOD) {
		GPIOD_CLK_EN;
	} else {
		GPIOF_CLK_EN;
	}
}
 8003048:	e02a      	b.n	80030a0 <gpio_clk_en+0x78>
	} else if (port == GPIOB) {
 800304a:	687b      	ldr	r3, [r7, #4]
 800304c:	4a17      	ldr	r2, [pc, #92]	; (80030ac <gpio_clk_en+0x84>)
 800304e:	4293      	cmp	r3, r2
 8003050:	d107      	bne.n	8003062 <gpio_clk_en+0x3a>
		GPIOB_CLK_EN;
 8003052:	4b15      	ldr	r3, [pc, #84]	; (80030a8 <gpio_clk_en+0x80>)
 8003054:	695a      	ldr	r2, [r3, #20]
 8003056:	4b14      	ldr	r3, [pc, #80]	; (80030a8 <gpio_clk_en+0x80>)
 8003058:	2180      	movs	r1, #128	; 0x80
 800305a:	02c9      	lsls	r1, r1, #11
 800305c:	430a      	orrs	r2, r1
 800305e:	615a      	str	r2, [r3, #20]
}
 8003060:	e01e      	b.n	80030a0 <gpio_clk_en+0x78>
	} else if (port == GPIOC) {
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	4a12      	ldr	r2, [pc, #72]	; (80030b0 <gpio_clk_en+0x88>)
 8003066:	4293      	cmp	r3, r2
 8003068:	d107      	bne.n	800307a <gpio_clk_en+0x52>
		GPIOC_CLK_EN;
 800306a:	4b0f      	ldr	r3, [pc, #60]	; (80030a8 <gpio_clk_en+0x80>)
 800306c:	695a      	ldr	r2, [r3, #20]
 800306e:	4b0e      	ldr	r3, [pc, #56]	; (80030a8 <gpio_clk_en+0x80>)
 8003070:	2180      	movs	r1, #128	; 0x80
 8003072:	0309      	lsls	r1, r1, #12
 8003074:	430a      	orrs	r2, r1
 8003076:	615a      	str	r2, [r3, #20]
}
 8003078:	e012      	b.n	80030a0 <gpio_clk_en+0x78>
	} else if (port == GPIOD) {
 800307a:	687b      	ldr	r3, [r7, #4]
 800307c:	4a0d      	ldr	r2, [pc, #52]	; (80030b4 <gpio_clk_en+0x8c>)
 800307e:	4293      	cmp	r3, r2
 8003080:	d107      	bne.n	8003092 <gpio_clk_en+0x6a>
		GPIOD_CLK_EN;
 8003082:	4b09      	ldr	r3, [pc, #36]	; (80030a8 <gpio_clk_en+0x80>)
 8003084:	695a      	ldr	r2, [r3, #20]
 8003086:	4b08      	ldr	r3, [pc, #32]	; (80030a8 <gpio_clk_en+0x80>)
 8003088:	2180      	movs	r1, #128	; 0x80
 800308a:	0349      	lsls	r1, r1, #13
 800308c:	430a      	orrs	r2, r1
 800308e:	615a      	str	r2, [r3, #20]
}
 8003090:	e006      	b.n	80030a0 <gpio_clk_en+0x78>
		GPIOF_CLK_EN;
 8003092:	4b05      	ldr	r3, [pc, #20]	; (80030a8 <gpio_clk_en+0x80>)
 8003094:	695a      	ldr	r2, [r3, #20]
 8003096:	4b04      	ldr	r3, [pc, #16]	; (80030a8 <gpio_clk_en+0x80>)
 8003098:	2180      	movs	r1, #128	; 0x80
 800309a:	03c9      	lsls	r1, r1, #15
 800309c:	430a      	orrs	r2, r1
 800309e:	615a      	str	r2, [r3, #20]
}
 80030a0:	46c0      	nop			; (mov r8, r8)
 80030a2:	46bd      	mov	sp, r7
 80030a4:	b002      	add	sp, #8
 80030a6:	bd80      	pop	{r7, pc}
 80030a8:	40021000 	.word	0x40021000
 80030ac:	48000400 	.word	0x48000400
 80030b0:	48000800 	.word	0x48000800
 80030b4:	48000c00 	.word	0x48000c00

080030b8 <gpio_config>:
/**********************************************************************************/

/********************GPIO Configuration Functions**********************************/
void gpio_config(GPIO_TypeDef *port, uint32_t pinNumber, uint32_t pinMode,
		uint32_t pinSpeed, uint32_t pinPUPD, uint32_t PHPL_OD) {
 80030b8:	b580      	push	{r7, lr}
 80030ba:	b084      	sub	sp, #16
 80030bc:	af00      	add	r7, sp, #0
 80030be:	60f8      	str	r0, [r7, #12]
 80030c0:	60b9      	str	r1, [r7, #8]
 80030c2:	607a      	str	r2, [r7, #4]
 80030c4:	603b      	str	r3, [r7, #0]

	if (pinMode == OUTPUT_MODE) {
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	2b01      	cmp	r3, #1
 80030ca:	d11c      	bne.n	8003106 <gpio_config+0x4e>
		gpio_clk_en(port);
 80030cc:	68fb      	ldr	r3, [r7, #12]
 80030ce:	0018      	movs	r0, r3
 80030d0:	f7ff ffaa 	bl	8003028 <gpio_clk_en>
		gpio_moder(port, pinNumber, pinMode);
 80030d4:	687a      	ldr	r2, [r7, #4]
 80030d6:	68b9      	ldr	r1, [r7, #8]
 80030d8:	68fb      	ldr	r3, [r7, #12]
 80030da:	0018      	movs	r0, r3
 80030dc:	f000 f858 	bl	8003190 <gpio_moder>
		gpio_speed(port, pinNumber, pinSpeed);
 80030e0:	683a      	ldr	r2, [r7, #0]
 80030e2:	68b9      	ldr	r1, [r7, #8]
 80030e4:	68fb      	ldr	r3, [r7, #12]
 80030e6:	0018      	movs	r0, r3
 80030e8:	f000 f86a 	bl	80031c0 <gpio_speed>
		gpio_PUPD(port, pinNumber, pinPUPD);
 80030ec:	69ba      	ldr	r2, [r7, #24]
 80030ee:	68b9      	ldr	r1, [r7, #8]
 80030f0:	68fb      	ldr	r3, [r7, #12]
 80030f2:	0018      	movs	r0, r3
 80030f4:	f000 f87c 	bl	80031f0 <gpio_PUPD>
		gpio_PHPL_OD(port, pinNumber, PHPL_OD);
 80030f8:	69fa      	ldr	r2, [r7, #28]
 80030fa:	68b9      	ldr	r1, [r7, #8]
 80030fc:	68fb      	ldr	r3, [r7, #12]
 80030fe:	0018      	movs	r0, r3
 8003100:	f000 f88e 	bl	8003220 <gpio_PHPL_OD>
	} else if (pinMode == ANALOG_MODE) {
		gpio_clk_en(port);
		gpio_moder(port, pinNumber, pinMode);
		adc_chsel(port, pinNumber);
	}
}
 8003104:	e040      	b.n	8003188 <gpio_config+0xd0>
	} else if (pinMode == INPUT_MODE) {
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	2b00      	cmp	r3, #0
 800310a:	d110      	bne.n	800312e <gpio_config+0x76>
		gpio_clk_en(port);
 800310c:	68fb      	ldr	r3, [r7, #12]
 800310e:	0018      	movs	r0, r3
 8003110:	f7ff ff8a 	bl	8003028 <gpio_clk_en>
		gpio_moder(port, pinNumber, pinMode);
 8003114:	687a      	ldr	r2, [r7, #4]
 8003116:	68b9      	ldr	r1, [r7, #8]
 8003118:	68fb      	ldr	r3, [r7, #12]
 800311a:	0018      	movs	r0, r3
 800311c:	f000 f838 	bl	8003190 <gpio_moder>
		gpio_PUPD(port, pinNumber, pinPUPD);
 8003120:	69ba      	ldr	r2, [r7, #24]
 8003122:	68b9      	ldr	r1, [r7, #8]
 8003124:	68fb      	ldr	r3, [r7, #12]
 8003126:	0018      	movs	r0, r3
 8003128:	f000 f862 	bl	80031f0 <gpio_PUPD>
}
 800312c:	e02c      	b.n	8003188 <gpio_config+0xd0>
	} else if (pinMode == ALT_MODE) {
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	2b02      	cmp	r3, #2
 8003132:	d116      	bne.n	8003162 <gpio_config+0xaa>
		gpio_clk_en(port);
 8003134:	68fb      	ldr	r3, [r7, #12]
 8003136:	0018      	movs	r0, r3
 8003138:	f7ff ff76 	bl	8003028 <gpio_clk_en>
		gpio_moder(port, pinNumber, pinMode);
 800313c:	687a      	ldr	r2, [r7, #4]
 800313e:	68b9      	ldr	r1, [r7, #8]
 8003140:	68fb      	ldr	r3, [r7, #12]
 8003142:	0018      	movs	r0, r3
 8003144:	f000 f824 	bl	8003190 <gpio_moder>
		gpio_PUPD(port, pinNumber, pinPUPD);
 8003148:	69ba      	ldr	r2, [r7, #24]
 800314a:	68b9      	ldr	r1, [r7, #8]
 800314c:	68fb      	ldr	r3, [r7, #12]
 800314e:	0018      	movs	r0, r3
 8003150:	f000 f84e 	bl	80031f0 <gpio_PUPD>
		gpio_PHPL_OD(port, pinNumber, PHPL_OD);
 8003154:	69fa      	ldr	r2, [r7, #28]
 8003156:	68b9      	ldr	r1, [r7, #8]
 8003158:	68fb      	ldr	r3, [r7, #12]
 800315a:	0018      	movs	r0, r3
 800315c:	f000 f860 	bl	8003220 <gpio_PHPL_OD>
}
 8003160:	e012      	b.n	8003188 <gpio_config+0xd0>
	} else if (pinMode == ANALOG_MODE) {
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	2b03      	cmp	r3, #3
 8003166:	d10f      	bne.n	8003188 <gpio_config+0xd0>
		gpio_clk_en(port);
 8003168:	68fb      	ldr	r3, [r7, #12]
 800316a:	0018      	movs	r0, r3
 800316c:	f7ff ff5c 	bl	8003028 <gpio_clk_en>
		gpio_moder(port, pinNumber, pinMode);
 8003170:	687a      	ldr	r2, [r7, #4]
 8003172:	68b9      	ldr	r1, [r7, #8]
 8003174:	68fb      	ldr	r3, [r7, #12]
 8003176:	0018      	movs	r0, r3
 8003178:	f000 f80a 	bl	8003190 <gpio_moder>
		adc_chsel(port, pinNumber);
 800317c:	68ba      	ldr	r2, [r7, #8]
 800317e:	68fb      	ldr	r3, [r7, #12]
 8003180:	0011      	movs	r1, r2
 8003182:	0018      	movs	r0, r3
 8003184:	f7ff fe96 	bl	8002eb4 <adc_chsel>
}
 8003188:	46c0      	nop			; (mov r8, r8)
 800318a:	46bd      	mov	sp, r7
 800318c:	b004      	add	sp, #16
 800318e:	bd80      	pop	{r7, pc}

08003190 <gpio_moder>:

void gpio_moder(GPIO_TypeDef *port, uint32_t pinNumber, uint32_t pinMode) {	// Config the mode
 8003190:	b580      	push	{r7, lr}
 8003192:	b084      	sub	sp, #16
 8003194:	af00      	add	r7, sp, #0
 8003196:	60f8      	str	r0, [r7, #12]
 8003198:	60b9      	str	r1, [r7, #8]
 800319a:	607a      	str	r2, [r7, #4]
	port->MODER |= (pinMode << (PINPOS_2B[pinNumber]));	// IN/OP/Alternate/ANALOG
 800319c:	68fb      	ldr	r3, [r7, #12]
 800319e:	681a      	ldr	r2, [r3, #0]
 80031a0:	4b06      	ldr	r3, [pc, #24]	; (80031bc <gpio_moder+0x2c>)
 80031a2:	68b9      	ldr	r1, [r7, #8]
 80031a4:	0089      	lsls	r1, r1, #2
 80031a6:	58cb      	ldr	r3, [r1, r3]
 80031a8:	6879      	ldr	r1, [r7, #4]
 80031aa:	4099      	lsls	r1, r3
 80031ac:	000b      	movs	r3, r1
 80031ae:	431a      	orrs	r2, r3
 80031b0:	68fb      	ldr	r3, [r7, #12]
 80031b2:	601a      	str	r2, [r3, #0]
}
 80031b4:	46c0      	nop			; (mov r8, r8)
 80031b6:	46bd      	mov	sp, r7
 80031b8:	b004      	add	sp, #16
 80031ba:	bd80      	pop	{r7, pc}
 80031bc:	2000000c 	.word	0x2000000c

080031c0 <gpio_speed>:

void gpio_speed(GPIO_TypeDef *port, uint32_t pinNumber, uint32_t pinSpeed) {// Config the speed
 80031c0:	b580      	push	{r7, lr}
 80031c2:	b084      	sub	sp, #16
 80031c4:	af00      	add	r7, sp, #0
 80031c6:	60f8      	str	r0, [r7, #12]
 80031c8:	60b9      	str	r1, [r7, #8]
 80031ca:	607a      	str	r2, [r7, #4]
	port->OSPEEDR |= (pinSpeed << PINPOS_2B[pinNumber]);		// LOW/MED/HIGH
 80031cc:	68fb      	ldr	r3, [r7, #12]
 80031ce:	689a      	ldr	r2, [r3, #8]
 80031d0:	4b06      	ldr	r3, [pc, #24]	; (80031ec <gpio_speed+0x2c>)
 80031d2:	68b9      	ldr	r1, [r7, #8]
 80031d4:	0089      	lsls	r1, r1, #2
 80031d6:	58cb      	ldr	r3, [r1, r3]
 80031d8:	6879      	ldr	r1, [r7, #4]
 80031da:	4099      	lsls	r1, r3
 80031dc:	000b      	movs	r3, r1
 80031de:	431a      	orrs	r2, r3
 80031e0:	68fb      	ldr	r3, [r7, #12]
 80031e2:	609a      	str	r2, [r3, #8]
}
 80031e4:	46c0      	nop			; (mov r8, r8)
 80031e6:	46bd      	mov	sp, r7
 80031e8:	b004      	add	sp, #16
 80031ea:	bd80      	pop	{r7, pc}
 80031ec:	2000000c 	.word	0x2000000c

080031f0 <gpio_PUPD>:

void gpio_PUPD(GPIO_TypeDef *port, uint32_t pinNumber, uint32_t pinPUPD) {// ENABLE/DISABLE
 80031f0:	b580      	push	{r7, lr}
 80031f2:	b084      	sub	sp, #16
 80031f4:	af00      	add	r7, sp, #0
 80031f6:	60f8      	str	r0, [r7, #12]
 80031f8:	60b9      	str	r1, [r7, #8]
 80031fa:	607a      	str	r2, [r7, #4]
	port->PUPDR |= (pinPUPD << PINPOS_2B[pinNumber]);		// PULL-UP/PULL-DOWN
 80031fc:	68fb      	ldr	r3, [r7, #12]
 80031fe:	68da      	ldr	r2, [r3, #12]
 8003200:	4b06      	ldr	r3, [pc, #24]	; (800321c <gpio_PUPD+0x2c>)
 8003202:	68b9      	ldr	r1, [r7, #8]
 8003204:	0089      	lsls	r1, r1, #2
 8003206:	58cb      	ldr	r3, [r1, r3]
 8003208:	6879      	ldr	r1, [r7, #4]
 800320a:	4099      	lsls	r1, r3
 800320c:	000b      	movs	r3, r1
 800320e:	431a      	orrs	r2, r3
 8003210:	68fb      	ldr	r3, [r7, #12]
 8003212:	60da      	str	r2, [r3, #12]
}
 8003214:	46c0      	nop			; (mov r8, r8)
 8003216:	46bd      	mov	sp, r7
 8003218:	b004      	add	sp, #16
 800321a:	bd80      	pop	{r7, pc}
 800321c:	2000000c 	.word	0x2000000c

08003220 <gpio_PHPL_OD>:
void gpio_PHPL_OD(GPIO_TypeDef *port, uint32_t pinNumber, uint32_t PHPL_OD) {// ENABLE/DISABLE
 8003220:	b580      	push	{r7, lr}
 8003222:	b084      	sub	sp, #16
 8003224:	af00      	add	r7, sp, #0
 8003226:	60f8      	str	r0, [r7, #12]
 8003228:	60b9      	str	r1, [r7, #8]
 800322a:	607a      	str	r2, [r7, #4]
	port->OTYPER |= (PHPL_OD << pinNumber);	// PUSH-PULL/OPEN DRAIN
 800322c:	68fb      	ldr	r3, [r7, #12]
 800322e:	685a      	ldr	r2, [r3, #4]
 8003230:	6879      	ldr	r1, [r7, #4]
 8003232:	68bb      	ldr	r3, [r7, #8]
 8003234:	4099      	lsls	r1, r3
 8003236:	000b      	movs	r3, r1
 8003238:	431a      	orrs	r2, r3
 800323a:	68fb      	ldr	r3, [r7, #12]
 800323c:	605a      	str	r2, [r3, #4]
}
 800323e:	46c0      	nop			; (mov r8, r8)
 8003240:	46bd      	mov	sp, r7
 8003242:	b004      	add	sp, #16
 8003244:	bd80      	pop	{r7, pc}

08003246 <gpio_altfn>:

void gpio_altfn(GPIO_TypeDef *port, uint32_t pinNumber,
		uint32_t alternate_function) {
 8003246:	b580      	push	{r7, lr}
 8003248:	b084      	sub	sp, #16
 800324a:	af00      	add	r7, sp, #0
 800324c:	60f8      	str	r0, [r7, #12]
 800324e:	60b9      	str	r1, [r7, #8]
 8003250:	607a      	str	r2, [r7, #4]
	if (pinNumber < 8) {
 8003252:	68bb      	ldr	r3, [r7, #8]
 8003254:	2b07      	cmp	r3, #7
 8003256:	d80a      	bhi.n	800326e <gpio_altfn+0x28>
		port->AFR[0] |= (alternate_function << (4 * pinNumber));
 8003258:	68fb      	ldr	r3, [r7, #12]
 800325a:	6a1a      	ldr	r2, [r3, #32]
 800325c:	68bb      	ldr	r3, [r7, #8]
 800325e:	009b      	lsls	r3, r3, #2
 8003260:	6879      	ldr	r1, [r7, #4]
 8003262:	4099      	lsls	r1, r3
 8003264:	000b      	movs	r3, r1
 8003266:	431a      	orrs	r2, r3
 8003268:	68fb      	ldr	r3, [r7, #12]
 800326a:	621a      	str	r2, [r3, #32]
	} else {
		port->AFR[1] |= (alternate_function << (4 * (pinNumber - 8)));
	}
}
 800326c:	e00a      	b.n	8003284 <gpio_altfn+0x3e>
		port->AFR[1] |= (alternate_function << (4 * (pinNumber - 8)));
 800326e:	68fb      	ldr	r3, [r7, #12]
 8003270:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003272:	68bb      	ldr	r3, [r7, #8]
 8003274:	3b08      	subs	r3, #8
 8003276:	009b      	lsls	r3, r3, #2
 8003278:	6879      	ldr	r1, [r7, #4]
 800327a:	4099      	lsls	r1, r3
 800327c:	000b      	movs	r3, r1
 800327e:	431a      	orrs	r2, r3
 8003280:	68fb      	ldr	r3, [r7, #12]
 8003282:	625a      	str	r2, [r3, #36]	; 0x24
}
 8003284:	46c0      	nop			; (mov r8, r8)
 8003286:	46bd      	mov	sp, r7
 8003288:	b004      	add	sp, #16
 800328a:	bd80      	pop	{r7, pc}

0800328c <I2C_EN>:
 *  Created on: Oct 23, 2022
 *      Author: hp
 */
#include "i2c.h"

void I2C_EN(I2C_TypeDef *i2c) {
 800328c:	b580      	push	{r7, lr}
 800328e:	b082      	sub	sp, #8
 8003290:	af00      	add	r7, sp, #0
 8003292:	6078      	str	r0, [r7, #4]
	i2c->CR1 |= I2C_CR1_PE;
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	2201      	movs	r2, #1
 800329a:	431a      	orrs	r2, r3
 800329c:	687b      	ldr	r3, [r7, #4]
 800329e:	601a      	str	r2, [r3, #0]
}
 80032a0:	46c0      	nop			; (mov r8, r8)
 80032a2:	46bd      	mov	sp, r7
 80032a4:	b002      	add	sp, #8
 80032a6:	bd80      	pop	{r7, pc}

080032a8 <I2C_DI>:

void I2C_DI(I2C_TypeDef *i2c) {
 80032a8:	b580      	push	{r7, lr}
 80032aa:	b082      	sub	sp, #8
 80032ac:	af00      	add	r7, sp, #0
 80032ae:	6078      	str	r0, [r7, #4]
	i2c->CR1 &= ~I2C_CR1_PE;
 80032b0:	687b      	ldr	r3, [r7, #4]
 80032b2:	681b      	ldr	r3, [r3, #0]
 80032b4:	2201      	movs	r2, #1
 80032b6:	4393      	bics	r3, r2
 80032b8:	001a      	movs	r2, r3
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	601a      	str	r2, [r3, #0]
}
 80032be:	46c0      	nop			; (mov r8, r8)
 80032c0:	46bd      	mov	sp, r7
 80032c2:	b002      	add	sp, #8
 80032c4:	bd80      	pop	{r7, pc}
	...

080032c8 <I2C_INIT>:

void I2C_INIT(I2C_TypeDef *i2c, uint32_t timing) {
 80032c8:	b580      	push	{r7, lr}
 80032ca:	b082      	sub	sp, #8
 80032cc:	af00      	add	r7, sp, #0
 80032ce:	6078      	str	r0, [r7, #4]
 80032d0:	6039      	str	r1, [r7, #0]
	if (i2c == I2C1) {
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	4a11      	ldr	r2, [pc, #68]	; (800331c <I2C_INIT+0x54>)
 80032d6:	4293      	cmp	r3, r2
 80032d8:	d107      	bne.n	80032ea <I2C_INIT+0x22>
		RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 80032da:	4b11      	ldr	r3, [pc, #68]	; (8003320 <I2C_INIT+0x58>)
 80032dc:	69da      	ldr	r2, [r3, #28]
 80032de:	4b10      	ldr	r3, [pc, #64]	; (8003320 <I2C_INIT+0x58>)
 80032e0:	2180      	movs	r1, #128	; 0x80
 80032e2:	0389      	lsls	r1, r1, #14
 80032e4:	430a      	orrs	r2, r1
 80032e6:	61da      	str	r2, [r3, #28]
 80032e8:	e00a      	b.n	8003300 <I2C_INIT+0x38>
	} else if (i2c == I2C2) {
 80032ea:	687b      	ldr	r3, [r7, #4]
 80032ec:	4a0d      	ldr	r2, [pc, #52]	; (8003324 <I2C_INIT+0x5c>)
 80032ee:	4293      	cmp	r3, r2
 80032f0:	d106      	bne.n	8003300 <I2C_INIT+0x38>
		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 80032f2:	4b0b      	ldr	r3, [pc, #44]	; (8003320 <I2C_INIT+0x58>)
 80032f4:	69da      	ldr	r2, [r3, #28]
 80032f6:	4b0a      	ldr	r3, [pc, #40]	; (8003320 <I2C_INIT+0x58>)
 80032f8:	2180      	movs	r1, #128	; 0x80
 80032fa:	03c9      	lsls	r1, r1, #15
 80032fc:	430a      	orrs	r2, r1
 80032fe:	61da      	str	r2, [r3, #28]
	}
	i2c->CR1 = 0; /* software reset I2C1 */
 8003300:	687b      	ldr	r3, [r7, #4]
 8003302:	2200      	movs	r2, #0
 8003304:	601a      	str	r2, [r3, #0]
	i2c->TIMINGR = timing; /* 100 KHz, peripheral clock is 8/48 MHz */
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	683a      	ldr	r2, [r7, #0]
 800330a:	611a      	str	r2, [r3, #16]
	I2C_EN(i2c);
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	0018      	movs	r0, r3
 8003310:	f7ff ffbc 	bl	800328c <I2C_EN>
}
 8003314:	46c0      	nop			; (mov r8, r8)
 8003316:	46bd      	mov	sp, r7
 8003318:	b002      	add	sp, #8
 800331a:	bd80      	pop	{r7, pc}
 800331c:	40005400 	.word	0x40005400
 8003320:	40021000 	.word	0x40021000
 8003324:	40005800 	.word	0x40005800

08003328 <I2C_CR2>:
	} else if (i2c == I2C2) {
		RCC->APB1ENR &= ~RCC_APB1ENR_I2C2EN;
	}
}

void I2C_CR2(I2C_TypeDef *i2c, uint32_t val) {
 8003328:	b580      	push	{r7, lr}
 800332a:	b082      	sub	sp, #8
 800332c:	af00      	add	r7, sp, #0
 800332e:	6078      	str	r0, [r7, #4]
 8003330:	6039      	str	r1, [r7, #0]
	i2c->CR2 = val;
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	683a      	ldr	r2, [r7, #0]
 8003336:	605a      	str	r2, [r3, #4]
}
 8003338:	46c0      	nop			; (mov r8, r8)
 800333a:	46bd      	mov	sp, r7
 800333c:	b002      	add	sp, #8
 800333e:	bd80      	pop	{r7, pc}

08003340 <I2C_DeviceReady>:

BML_StatusTypeDef I2C_DeviceReady(I2C_TypeDef *i2c, uint8_t saddr,
		uint16_t timeout) {
 8003340:	b580      	push	{r7, lr}
 8003342:	b084      	sub	sp, #16
 8003344:	af00      	add	r7, sp, #0
 8003346:	6078      	str	r0, [r7, #4]
 8003348:	0008      	movs	r0, r1
 800334a:	0011      	movs	r1, r2
 800334c:	1cfb      	adds	r3, r7, #3
 800334e:	1c02      	adds	r2, r0, #0
 8003350:	701a      	strb	r2, [r3, #0]
 8003352:	003b      	movs	r3, r7
 8003354:	1c0a      	adds	r2, r1, #0
 8003356:	801a      	strh	r2, [r3, #0]
	uint16_t i = timeout;
 8003358:	230e      	movs	r3, #14
 800335a:	18fb      	adds	r3, r7, r3
 800335c:	003a      	movs	r2, r7
 800335e:	8812      	ldrh	r2, [r2, #0]
 8003360:	801a      	strh	r2, [r3, #0]
	uint8_t flag = 0;
 8003362:	230d      	movs	r3, #13
 8003364:	18fb      	adds	r3, r7, r3
 8003366:	2200      	movs	r2, #0
 8003368:	701a      	strb	r2, [r3, #0]
	while (i2c->ISR & I2C_ISR_BUSY) {/* wait until bus not busy */
 800336a:	e00e      	b.n	800338a <I2C_DeviceReady+0x4a>
		I2C_Delay(1);
 800336c:	2001      	movs	r0, #1
 800336e:	f7ff f877 	bl	8002460 <HAL_Delay>
		i--;
 8003372:	210e      	movs	r1, #14
 8003374:	187b      	adds	r3, r7, r1
 8003376:	881a      	ldrh	r2, [r3, #0]
 8003378:	187b      	adds	r3, r7, r1
 800337a:	3a01      	subs	r2, #1
 800337c:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 800337e:	187b      	adds	r3, r7, r1
 8003380:	881b      	ldrh	r3, [r3, #0]
 8003382:	2b00      	cmp	r3, #0
 8003384:	d101      	bne.n	800338a <I2C_DeviceReady+0x4a>
			return BML_BUSY;
 8003386:	2302      	movs	r3, #2
 8003388:	e035      	b.n	80033f6 <I2C_DeviceReady+0xb6>
	while (i2c->ISR & I2C_ISR_BUSY) {/* wait until bus not busy */
 800338a:	687b      	ldr	r3, [r7, #4]
 800338c:	699a      	ldr	r2, [r3, #24]
 800338e:	2380      	movs	r3, #128	; 0x80
 8003390:	021b      	lsls	r3, r3, #8
 8003392:	4013      	ands	r3, r2
 8003394:	d1ea      	bne.n	800336c <I2C_DeviceReady+0x2c>
		}
	}
	I2C_CR2(i2c, I2C_CR2_START | (saddr << 1));
 8003396:	1cfb      	adds	r3, r7, #3
 8003398:	781b      	ldrb	r3, [r3, #0]
 800339a:	005b      	lsls	r3, r3, #1
 800339c:	001a      	movs	r2, r3
 800339e:	2380      	movs	r3, #128	; 0x80
 80033a0:	019b      	lsls	r3, r3, #6
 80033a2:	431a      	orrs	r2, r3
 80033a4:	687b      	ldr	r3, [r7, #4]
 80033a6:	0011      	movs	r1, r2
 80033a8:	0018      	movs	r0, r3
 80033aa:	f7ff ffbd 	bl	8003328 <I2C_CR2>

	I2C_Delay(1);
 80033ae:	2001      	movs	r0, #1
 80033b0:	f7ff f856 	bl	8002460 <HAL_Delay>

	if (!(i2c->ISR & I2C_ISR_NACKF)) {
 80033b4:	687b      	ldr	r3, [r7, #4]
 80033b6:	699b      	ldr	r3, [r3, #24]
 80033b8:	2210      	movs	r2, #16
 80033ba:	4013      	ands	r3, r2
 80033bc:	d104      	bne.n	80033c8 <I2C_DeviceReady+0x88>
		flag = 1;
 80033be:	230d      	movs	r3, #13
 80033c0:	18fb      	adds	r3, r7, r3
 80033c2:	2201      	movs	r2, #1
 80033c4:	701a      	strb	r2, [r3, #0]
 80033c6:	e003      	b.n	80033d0 <I2C_DeviceReady+0x90>
	} else {
		flag = 0;
 80033c8:	230d      	movs	r3, #13
 80033ca:	18fb      	adds	r3, r7, r3
 80033cc:	2200      	movs	r2, #0
 80033ce:	701a      	strb	r2, [r3, #0]
	}

	i2c->CR2 = 0;
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	2200      	movs	r2, #0
 80033d4:	605a      	str	r2, [r3, #4]
	I2C_DI(i2c);
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	0018      	movs	r0, r3
 80033da:	f7ff ff65 	bl	80032a8 <I2C_DI>
	I2C_EN(i2c);
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	0018      	movs	r0, r3
 80033e2:	f7ff ff53 	bl	800328c <I2C_EN>
	if (flag == LOW) {
 80033e6:	230d      	movs	r3, #13
 80033e8:	18fb      	adds	r3, r7, r3
 80033ea:	781b      	ldrb	r3, [r3, #0]
 80033ec:	2b00      	cmp	r3, #0
 80033ee:	d101      	bne.n	80033f4 <I2C_DeviceReady+0xb4>
		return BML_ERROR;
 80033f0:	2301      	movs	r3, #1
 80033f2:	e000      	b.n	80033f6 <I2C_DeviceReady+0xb6>
	}
	return BML_OK;
 80033f4:	2300      	movs	r3, #0
}
 80033f6:	0018      	movs	r0, r3
 80033f8:	46bd      	mov	sp, r7
 80033fa:	b004      	add	sp, #16
 80033fc:	bd80      	pop	{r7, pc}
	...

08003400 <I2C_MasterByteWrite>:

BML_StatusTypeDef I2C_MasterByteWrite(I2C_TypeDef *i2c, uint8_t saddr,
		uint8_t maddr, uint8_t data, uint16_t timeout) {
 8003400:	b590      	push	{r4, r7, lr}
 8003402:	b085      	sub	sp, #20
 8003404:	af00      	add	r7, sp, #0
 8003406:	6078      	str	r0, [r7, #4]
 8003408:	000c      	movs	r4, r1
 800340a:	0010      	movs	r0, r2
 800340c:	0019      	movs	r1, r3
 800340e:	1cfb      	adds	r3, r7, #3
 8003410:	1c22      	adds	r2, r4, #0
 8003412:	701a      	strb	r2, [r3, #0]
 8003414:	1cbb      	adds	r3, r7, #2
 8003416:	1c02      	adds	r2, r0, #0
 8003418:	701a      	strb	r2, [r3, #0]
 800341a:	1c7b      	adds	r3, r7, #1
 800341c:	1c0a      	adds	r2, r1, #0
 800341e:	701a      	strb	r2, [r3, #0]
	uint16_t i = timeout;
 8003420:	230e      	movs	r3, #14
 8003422:	18fa      	adds	r2, r7, r3
 8003424:	2320      	movs	r3, #32
 8003426:	18fb      	adds	r3, r7, r3
 8003428:	881b      	ldrh	r3, [r3, #0]
 800342a:	8013      	strh	r3, [r2, #0]
	while (i2c->ISR & I2C_ISR_BUSY) {
 800342c:	e00e      	b.n	800344c <I2C_MasterByteWrite+0x4c>
		I2C_Delay(1);
 800342e:	2001      	movs	r0, #1
 8003430:	f7ff f816 	bl	8002460 <HAL_Delay>
		i--;
 8003434:	210e      	movs	r1, #14
 8003436:	187b      	adds	r3, r7, r1
 8003438:	881a      	ldrh	r2, [r3, #0]
 800343a:	187b      	adds	r3, r7, r1
 800343c:	3a01      	subs	r2, #1
 800343e:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 8003440:	187b      	adds	r3, r7, r1
 8003442:	881b      	ldrh	r3, [r3, #0]
 8003444:	2b00      	cmp	r3, #0
 8003446:	d101      	bne.n	800344c <I2C_MasterByteWrite+0x4c>
			return BML_BUSY;
 8003448:	2302      	movs	r3, #2
 800344a:	e074      	b.n	8003536 <I2C_MasterByteWrite+0x136>
	while (i2c->ISR & I2C_ISR_BUSY) {
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	699a      	ldr	r2, [r3, #24]
 8003450:	2380      	movs	r3, #128	; 0x80
 8003452:	021b      	lsls	r3, r3, #8
 8003454:	4013      	ands	r3, r2
 8003456:	d1ea      	bne.n	800342e <I2C_MasterByteWrite+0x2e>
		}
	} /* wait until bus not busy */

	i = timeout;
 8003458:	230e      	movs	r3, #14
 800345a:	18fa      	adds	r2, r7, r3
 800345c:	2320      	movs	r3, #32
 800345e:	18fb      	adds	r3, r7, r3
 8003460:	881b      	ldrh	r3, [r3, #0]
 8003462:	8013      	strh	r3, [r2, #0]

	I2C_CR2(i2c, I2C_CR2_START | I2C_CR2_AUTOEND | (2 << 16) | (saddr << 1));
 8003464:	1cfb      	adds	r3, r7, #3
 8003466:	781b      	ldrb	r3, [r3, #0]
 8003468:	005b      	lsls	r3, r3, #1
 800346a:	001a      	movs	r2, r3
 800346c:	4b34      	ldr	r3, [pc, #208]	; (8003540 <I2C_MasterByteWrite+0x140>)
 800346e:	431a      	orrs	r2, r3
 8003470:	687b      	ldr	r3, [r7, #4]
 8003472:	0011      	movs	r1, r2
 8003474:	0018      	movs	r0, r3
 8003476:	f7ff ff57 	bl	8003328 <I2C_CR2>
	/* generate start, autoend, byte count 2 and send slave address */

	while (!(i2c->ISR & I2C_ISR_TXIS)) {
 800347a:	e00e      	b.n	800349a <I2C_MasterByteWrite+0x9a>
		I2C_Delay(1);
 800347c:	2001      	movs	r0, #1
 800347e:	f7fe ffef 	bl	8002460 <HAL_Delay>
		i--;
 8003482:	210e      	movs	r1, #14
 8003484:	187b      	adds	r3, r7, r1
 8003486:	881a      	ldrh	r2, [r3, #0]
 8003488:	187b      	adds	r3, r7, r1
 800348a:	3a01      	subs	r2, #1
 800348c:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 800348e:	187b      	adds	r3, r7, r1
 8003490:	881b      	ldrh	r3, [r3, #0]
 8003492:	2b00      	cmp	r3, #0
 8003494:	d101      	bne.n	800349a <I2C_MasterByteWrite+0x9a>
			return BML_TIMEOUT;
 8003496:	2303      	movs	r3, #3
 8003498:	e04d      	b.n	8003536 <I2C_MasterByteWrite+0x136>
	while (!(i2c->ISR & I2C_ISR_TXIS)) {
 800349a:	687b      	ldr	r3, [r7, #4]
 800349c:	699b      	ldr	r3, [r3, #24]
 800349e:	2202      	movs	r2, #2
 80034a0:	4013      	ands	r3, r2
 80034a2:	d0eb      	beq.n	800347c <I2C_MasterByteWrite+0x7c>
		}
	} /* wait until TXIS is set */
	i2c->TXDR = maddr; /* send register address */
 80034a4:	1cbb      	adds	r3, r7, #2
 80034a6:	781a      	ldrb	r2, [r3, #0]
 80034a8:	687b      	ldr	r3, [r7, #4]
 80034aa:	629a      	str	r2, [r3, #40]	; 0x28

	i = timeout;
 80034ac:	230e      	movs	r3, #14
 80034ae:	18fa      	adds	r2, r7, r3
 80034b0:	2320      	movs	r3, #32
 80034b2:	18fb      	adds	r3, r7, r3
 80034b4:	881b      	ldrh	r3, [r3, #0]
 80034b6:	8013      	strh	r3, [r2, #0]

	while (!(i2c->ISR & I2C_ISR_TXIS)) {
 80034b8:	e00e      	b.n	80034d8 <I2C_MasterByteWrite+0xd8>
		I2C_Delay(1);
 80034ba:	2001      	movs	r0, #1
 80034bc:	f7fe ffd0 	bl	8002460 <HAL_Delay>
		i--;
 80034c0:	210e      	movs	r1, #14
 80034c2:	187b      	adds	r3, r7, r1
 80034c4:	881a      	ldrh	r2, [r3, #0]
 80034c6:	187b      	adds	r3, r7, r1
 80034c8:	3a01      	subs	r2, #1
 80034ca:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 80034cc:	187b      	adds	r3, r7, r1
 80034ce:	881b      	ldrh	r3, [r3, #0]
 80034d0:	2b00      	cmp	r3, #0
 80034d2:	d101      	bne.n	80034d8 <I2C_MasterByteWrite+0xd8>
			return BML_TIMEOUT;
 80034d4:	2303      	movs	r3, #3
 80034d6:	e02e      	b.n	8003536 <I2C_MasterByteWrite+0x136>
	while (!(i2c->ISR & I2C_ISR_TXIS)) {
 80034d8:	687b      	ldr	r3, [r7, #4]
 80034da:	699b      	ldr	r3, [r3, #24]
 80034dc:	2202      	movs	r2, #2
 80034de:	4013      	ands	r3, r2
 80034e0:	d0eb      	beq.n	80034ba <I2C_MasterByteWrite+0xba>
		}
	} /* wait until TXIS is set */
	i2c->TXDR = data; /* send data */
 80034e2:	1c7b      	adds	r3, r7, #1
 80034e4:	781a      	ldrb	r2, [r3, #0]
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	629a      	str	r2, [r3, #40]	; 0x28

	i = timeout;
 80034ea:	230e      	movs	r3, #14
 80034ec:	18fa      	adds	r2, r7, r3
 80034ee:	2320      	movs	r3, #32
 80034f0:	18fb      	adds	r3, r7, r3
 80034f2:	881b      	ldrh	r3, [r3, #0]
 80034f4:	8013      	strh	r3, [r2, #0]

	while (!(i2c->ISR & I2C_ISR_STOPF)) {
 80034f6:	e00e      	b.n	8003516 <I2C_MasterByteWrite+0x116>
		I2C_Delay(1);
 80034f8:	2001      	movs	r0, #1
 80034fa:	f7fe ffb1 	bl	8002460 <HAL_Delay>
		i--;
 80034fe:	210e      	movs	r1, #14
 8003500:	187b      	adds	r3, r7, r1
 8003502:	881a      	ldrh	r2, [r3, #0]
 8003504:	187b      	adds	r3, r7, r1
 8003506:	3a01      	subs	r2, #1
 8003508:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 800350a:	187b      	adds	r3, r7, r1
 800350c:	881b      	ldrh	r3, [r3, #0]
 800350e:	2b00      	cmp	r3, #0
 8003510:	d101      	bne.n	8003516 <I2C_MasterByteWrite+0x116>
			return BML_TIMEOUT;
 8003512:	2303      	movs	r3, #3
 8003514:	e00f      	b.n	8003536 <I2C_MasterByteWrite+0x136>
	while (!(i2c->ISR & I2C_ISR_STOPF)) {
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	699b      	ldr	r3, [r3, #24]
 800351a:	2220      	movs	r2, #32
 800351c:	4013      	ands	r3, r2
 800351e:	d0eb      	beq.n	80034f8 <I2C_MasterByteWrite+0xf8>
		}
	}/* wait until stop flag is set */

	i2c->ICR = I2C_ICR_STOPCF; /* clear stop flag */
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	2220      	movs	r2, #32
 8003524:	61da      	str	r2, [r3, #28]
	I2C_CR2(i2c, I2C_CR2_AUTOEND);
 8003526:	2380      	movs	r3, #128	; 0x80
 8003528:	049a      	lsls	r2, r3, #18
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	0011      	movs	r1, r2
 800352e:	0018      	movs	r0, r3
 8003530:	f7ff fefa 	bl	8003328 <I2C_CR2>

	return BML_OK;
 8003534:	2300      	movs	r3, #0
}
 8003536:	0018      	movs	r0, r3
 8003538:	46bd      	mov	sp, r7
 800353a:	b005      	add	sp, #20
 800353c:	bd90      	pop	{r4, r7, pc}
 800353e:	46c0      	nop			; (mov r8, r8)
 8003540:	02022000 	.word	0x02022000

08003544 <I2C_MasterByteRead>:

BML_StatusTypeDef I2C_MasterByteRead(I2C_TypeDef *i2c, uint8_t saddr,
		uint8_t maddr, uint8_t *data, uint16_t timeout) {
 8003544:	b580      	push	{r7, lr}
 8003546:	b086      	sub	sp, #24
 8003548:	af00      	add	r7, sp, #0
 800354a:	60f8      	str	r0, [r7, #12]
 800354c:	0008      	movs	r0, r1
 800354e:	0011      	movs	r1, r2
 8003550:	607b      	str	r3, [r7, #4]
 8003552:	230b      	movs	r3, #11
 8003554:	18fb      	adds	r3, r7, r3
 8003556:	1c02      	adds	r2, r0, #0
 8003558:	701a      	strb	r2, [r3, #0]
 800355a:	230a      	movs	r3, #10
 800355c:	18fb      	adds	r3, r7, r3
 800355e:	1c0a      	adds	r2, r1, #0
 8003560:	701a      	strb	r2, [r3, #0]
	uint16_t i = timeout;
 8003562:	2316      	movs	r3, #22
 8003564:	18fa      	adds	r2, r7, r3
 8003566:	2320      	movs	r3, #32
 8003568:	18fb      	adds	r3, r7, r3
 800356a:	881b      	ldrh	r3, [r3, #0]
 800356c:	8013      	strh	r3, [r2, #0]
	while (i2c->ISR & I2C_ISR_BUSY) {
 800356e:	e00e      	b.n	800358e <I2C_MasterByteRead+0x4a>
		I2C_Delay(1);
 8003570:	2001      	movs	r0, #1
 8003572:	f7fe ff75 	bl	8002460 <HAL_Delay>
		i--;
 8003576:	2116      	movs	r1, #22
 8003578:	187b      	adds	r3, r7, r1
 800357a:	881a      	ldrh	r2, [r3, #0]
 800357c:	187b      	adds	r3, r7, r1
 800357e:	3a01      	subs	r2, #1
 8003580:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 8003582:	187b      	adds	r3, r7, r1
 8003584:	881b      	ldrh	r3, [r3, #0]
 8003586:	2b00      	cmp	r3, #0
 8003588:	d101      	bne.n	800358e <I2C_MasterByteRead+0x4a>
			return BML_BUSY;
 800358a:	2302      	movs	r3, #2
 800358c:	e09f      	b.n	80036ce <I2C_MasterByteRead+0x18a>
	while (i2c->ISR & I2C_ISR_BUSY) {
 800358e:	68fb      	ldr	r3, [r7, #12]
 8003590:	699a      	ldr	r2, [r3, #24]
 8003592:	2380      	movs	r3, #128	; 0x80
 8003594:	021b      	lsls	r3, r3, #8
 8003596:	4013      	ands	r3, r2
 8003598:	d1ea      	bne.n	8003570 <I2C_MasterByteRead+0x2c>
		}
	} /* wait until bus not busy */

	i = timeout;
 800359a:	2316      	movs	r3, #22
 800359c:	18fa      	adds	r2, r7, r3
 800359e:	2320      	movs	r3, #32
 80035a0:	18fb      	adds	r3, r7, r3
 80035a2:	881b      	ldrh	r3, [r3, #0]
 80035a4:	8013      	strh	r3, [r2, #0]

	I2C_CR2(i2c, I2C_CR2_START | (1 << 16) | (saddr << 1));
 80035a6:	230b      	movs	r3, #11
 80035a8:	18fb      	adds	r3, r7, r3
 80035aa:	781b      	ldrb	r3, [r3, #0]
 80035ac:	005b      	lsls	r3, r3, #1
 80035ae:	001a      	movs	r2, r3
 80035b0:	2390      	movs	r3, #144	; 0x90
 80035b2:	025b      	lsls	r3, r3, #9
 80035b4:	431a      	orrs	r2, r3
 80035b6:	68fb      	ldr	r3, [r7, #12]
 80035b8:	0011      	movs	r1, r2
 80035ba:	0018      	movs	r0, r3
 80035bc:	f7ff feb4 	bl	8003328 <I2C_CR2>
	/* generate start and send slave address */
	while (!(i2c->ISR & I2C_ISR_TXIS)) {
 80035c0:	e00e      	b.n	80035e0 <I2C_MasterByteRead+0x9c>
		I2C_Delay(1);
 80035c2:	2001      	movs	r0, #1
 80035c4:	f7fe ff4c 	bl	8002460 <HAL_Delay>
		i--;
 80035c8:	2116      	movs	r1, #22
 80035ca:	187b      	adds	r3, r7, r1
 80035cc:	881a      	ldrh	r2, [r3, #0]
 80035ce:	187b      	adds	r3, r7, r1
 80035d0:	3a01      	subs	r2, #1
 80035d2:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 80035d4:	187b      	adds	r3, r7, r1
 80035d6:	881b      	ldrh	r3, [r3, #0]
 80035d8:	2b00      	cmp	r3, #0
 80035da:	d101      	bne.n	80035e0 <I2C_MasterByteRead+0x9c>
			return BML_TIMEOUT;
 80035dc:	2303      	movs	r3, #3
 80035de:	e076      	b.n	80036ce <I2C_MasterByteRead+0x18a>
	while (!(i2c->ISR & I2C_ISR_TXIS)) {
 80035e0:	68fb      	ldr	r3, [r7, #12]
 80035e2:	699b      	ldr	r3, [r3, #24]
 80035e4:	2202      	movs	r2, #2
 80035e6:	4013      	ands	r3, r2
 80035e8:	d0eb      	beq.n	80035c2 <I2C_MasterByteRead+0x7e>
		}
	} /* wait until start flag is set */
	i = timeout;
 80035ea:	2316      	movs	r3, #22
 80035ec:	18fa      	adds	r2, r7, r3
 80035ee:	2320      	movs	r3, #32
 80035f0:	18fb      	adds	r3, r7, r3
 80035f2:	881b      	ldrh	r3, [r3, #0]
 80035f4:	8013      	strh	r3, [r2, #0]

	i2c->TXDR = maddr; /* send memory address */
 80035f6:	230a      	movs	r3, #10
 80035f8:	18fb      	adds	r3, r7, r3
 80035fa:	781a      	ldrb	r2, [r3, #0]
 80035fc:	68fb      	ldr	r3, [r7, #12]
 80035fe:	629a      	str	r2, [r3, #40]	; 0x28

	while (!(i2c->ISR & I2C_ISR_TC)) {
 8003600:	e00e      	b.n	8003620 <I2C_MasterByteRead+0xdc>
		I2C_Delay(1);
 8003602:	2001      	movs	r0, #1
 8003604:	f7fe ff2c 	bl	8002460 <HAL_Delay>
		i--;
 8003608:	2116      	movs	r1, #22
 800360a:	187b      	adds	r3, r7, r1
 800360c:	881a      	ldrh	r2, [r3, #0]
 800360e:	187b      	adds	r3, r7, r1
 8003610:	3a01      	subs	r2, #1
 8003612:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 8003614:	187b      	adds	r3, r7, r1
 8003616:	881b      	ldrh	r3, [r3, #0]
 8003618:	2b00      	cmp	r3, #0
 800361a:	d101      	bne.n	8003620 <I2C_MasterByteRead+0xdc>
			return BML_TIMEOUT;
 800361c:	2303      	movs	r3, #3
 800361e:	e056      	b.n	80036ce <I2C_MasterByteRead+0x18a>
	while (!(i2c->ISR & I2C_ISR_TC)) {
 8003620:	68fb      	ldr	r3, [r7, #12]
 8003622:	699b      	ldr	r3, [r3, #24]
 8003624:	2240      	movs	r2, #64	; 0x40
 8003626:	4013      	ands	r3, r2
 8003628:	d0eb      	beq.n	8003602 <I2C_MasterByteRead+0xbe>
		}
	} /* wait until transfer complete */

	i = timeout;
 800362a:	2316      	movs	r3, #22
 800362c:	18fa      	adds	r2, r7, r3
 800362e:	2320      	movs	r3, #32
 8003630:	18fb      	adds	r3, r7, r3
 8003632:	881b      	ldrh	r3, [r3, #0]
 8003634:	8013      	strh	r3, [r2, #0]

	/* generate restart, send slave address, read 1 byte, set for auto end */
	I2C_CR2(i2c,
			I2C_CR2_START | I2C_CR2_RD_WRN | I2C_CR2_AUTOEND | (1 << 16)
					| (saddr << 1));
 8003636:	230b      	movs	r3, #11
 8003638:	18fb      	adds	r3, r7, r3
 800363a:	781b      	ldrb	r3, [r3, #0]
 800363c:	005b      	lsls	r3, r3, #1
 800363e:	001a      	movs	r2, r3
	I2C_CR2(i2c,
 8003640:	4b25      	ldr	r3, [pc, #148]	; (80036d8 <I2C_MasterByteRead+0x194>)
 8003642:	431a      	orrs	r2, r3
 8003644:	68fb      	ldr	r3, [r7, #12]
 8003646:	0011      	movs	r1, r2
 8003648:	0018      	movs	r0, r3
 800364a:	f7ff fe6d 	bl	8003328 <I2C_CR2>

	while (!(i2c->ISR & I2C_ISR_RXNE)) {
 800364e:	e00e      	b.n	800366e <I2C_MasterByteRead+0x12a>
		I2C_Delay(1);
 8003650:	2001      	movs	r0, #1
 8003652:	f7fe ff05 	bl	8002460 <HAL_Delay>
		i--;
 8003656:	2116      	movs	r1, #22
 8003658:	187b      	adds	r3, r7, r1
 800365a:	881a      	ldrh	r2, [r3, #0]
 800365c:	187b      	adds	r3, r7, r1
 800365e:	3a01      	subs	r2, #1
 8003660:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 8003662:	187b      	adds	r3, r7, r1
 8003664:	881b      	ldrh	r3, [r3, #0]
 8003666:	2b00      	cmp	r3, #0
 8003668:	d101      	bne.n	800366e <I2C_MasterByteRead+0x12a>
			return BML_TIMEOUT;
 800366a:	2303      	movs	r3, #3
 800366c:	e02f      	b.n	80036ce <I2C_MasterByteRead+0x18a>
	while (!(i2c->ISR & I2C_ISR_RXNE)) {
 800366e:	68fb      	ldr	r3, [r7, #12]
 8003670:	699b      	ldr	r3, [r3, #24]
 8003672:	2204      	movs	r2, #4
 8003674:	4013      	ands	r3, r2
 8003676:	d0eb      	beq.n	8003650 <I2C_MasterByteRead+0x10c>
		}
	} /* Wait until RXNE flag is set */
	*data = i2c->RXDR; /* Read data from DR */
 8003678:	68fb      	ldr	r3, [r7, #12]
 800367a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800367c:	b2da      	uxtb	r2, r3
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	701a      	strb	r2, [r3, #0]

	i = timeout;
 8003682:	2316      	movs	r3, #22
 8003684:	18fa      	adds	r2, r7, r3
 8003686:	2320      	movs	r3, #32
 8003688:	18fb      	adds	r3, r7, r3
 800368a:	881b      	ldrh	r3, [r3, #0]
 800368c:	8013      	strh	r3, [r2, #0]

	while (!(i2c->ISR & I2C_ISR_STOPF)) {
 800368e:	e00e      	b.n	80036ae <I2C_MasterByteRead+0x16a>
		I2C_Delay(1);
 8003690:	2001      	movs	r0, #1
 8003692:	f7fe fee5 	bl	8002460 <HAL_Delay>
		i--;
 8003696:	2116      	movs	r1, #22
 8003698:	187b      	adds	r3, r7, r1
 800369a:	881a      	ldrh	r2, [r3, #0]
 800369c:	187b      	adds	r3, r7, r1
 800369e:	3a01      	subs	r2, #1
 80036a0:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 80036a2:	187b      	adds	r3, r7, r1
 80036a4:	881b      	ldrh	r3, [r3, #0]
 80036a6:	2b00      	cmp	r3, #0
 80036a8:	d101      	bne.n	80036ae <I2C_MasterByteRead+0x16a>
			return BML_TIMEOUT;
 80036aa:	2303      	movs	r3, #3
 80036ac:	e00f      	b.n	80036ce <I2C_MasterByteRead+0x18a>
	while (!(i2c->ISR & I2C_ISR_STOPF)) {
 80036ae:	68fb      	ldr	r3, [r7, #12]
 80036b0:	699b      	ldr	r3, [r3, #24]
 80036b2:	2220      	movs	r2, #32
 80036b4:	4013      	ands	r3, r2
 80036b6:	d0eb      	beq.n	8003690 <I2C_MasterByteRead+0x14c>
		}
	} /* wait until stop flag is set */

	i2c->ICR = I2C_ISR_STOPF; /* clear stop flag */
 80036b8:	68fb      	ldr	r3, [r7, #12]
 80036ba:	2220      	movs	r2, #32
 80036bc:	61da      	str	r2, [r3, #28]
	I2C_CR2(i2c, I2C_CR2_AUTOEND);
 80036be:	2380      	movs	r3, #128	; 0x80
 80036c0:	049a      	lsls	r2, r3, #18
 80036c2:	68fb      	ldr	r3, [r7, #12]
 80036c4:	0011      	movs	r1, r2
 80036c6:	0018      	movs	r0, r3
 80036c8:	f7ff fe2e 	bl	8003328 <I2C_CR2>

	return BML_OK;
 80036cc:	2300      	movs	r3, #0
}
 80036ce:	0018      	movs	r0, r3
 80036d0:	46bd      	mov	sp, r7
 80036d2:	b006      	add	sp, #24
 80036d4:	bd80      	pop	{r7, pc}
 80036d6:	46c0      	nop			; (mov r8, r8)
 80036d8:	02012400 	.word	0x02012400

080036dc <I2C_MasterMultiRead>:

	return BML_OK;
}

BML_StatusTypeDef I2C_MasterMultiRead(I2C_TypeDef *i2c, uint8_t saddr,
		uint8_t maddr, uint32_t n, uint8_t *data, uint16_t timeout) {
 80036dc:	b580      	push	{r7, lr}
 80036de:	b086      	sub	sp, #24
 80036e0:	af00      	add	r7, sp, #0
 80036e2:	60f8      	str	r0, [r7, #12]
 80036e4:	0008      	movs	r0, r1
 80036e6:	0011      	movs	r1, r2
 80036e8:	607b      	str	r3, [r7, #4]
 80036ea:	230b      	movs	r3, #11
 80036ec:	18fb      	adds	r3, r7, r3
 80036ee:	1c02      	adds	r2, r0, #0
 80036f0:	701a      	strb	r2, [r3, #0]
 80036f2:	230a      	movs	r3, #10
 80036f4:	18fb      	adds	r3, r7, r3
 80036f6:	1c0a      	adds	r2, r1, #0
 80036f8:	701a      	strb	r2, [r3, #0]
	uint16_t i = timeout;
 80036fa:	2316      	movs	r3, #22
 80036fc:	18fb      	adds	r3, r7, r3
 80036fe:	2224      	movs	r2, #36	; 0x24
 8003700:	18ba      	adds	r2, r7, r2
 8003702:	8812      	ldrh	r2, [r2, #0]
 8003704:	801a      	strh	r2, [r3, #0]
	while (i2c->ISR & I2C_ISR_BUSY) {
 8003706:	e00e      	b.n	8003726 <I2C_MasterMultiRead+0x4a>
		I2C_Delay(1);
 8003708:	2001      	movs	r0, #1
 800370a:	f7fe fea9 	bl	8002460 <HAL_Delay>
		i--;
 800370e:	2116      	movs	r1, #22
 8003710:	187b      	adds	r3, r7, r1
 8003712:	881a      	ldrh	r2, [r3, #0]
 8003714:	187b      	adds	r3, r7, r1
 8003716:	3a01      	subs	r2, #1
 8003718:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 800371a:	187b      	adds	r3, r7, r1
 800371c:	881b      	ldrh	r3, [r3, #0]
 800371e:	2b00      	cmp	r3, #0
 8003720:	d101      	bne.n	8003726 <I2C_MasterMultiRead+0x4a>
			return BML_BUSY;
 8003722:	2302      	movs	r3, #2
 8003724:	e0ac      	b.n	8003880 <I2C_MasterMultiRead+0x1a4>
	while (i2c->ISR & I2C_ISR_BUSY) {
 8003726:	68fb      	ldr	r3, [r7, #12]
 8003728:	699a      	ldr	r2, [r3, #24]
 800372a:	2380      	movs	r3, #128	; 0x80
 800372c:	021b      	lsls	r3, r3, #8
 800372e:	4013      	ands	r3, r2
 8003730:	d1ea      	bne.n	8003708 <I2C_MasterMultiRead+0x2c>
		}
	} /* wait until bus not busy */
	i = timeout;
 8003732:	2316      	movs	r3, #22
 8003734:	18fb      	adds	r3, r7, r3
 8003736:	2224      	movs	r2, #36	; 0x24
 8003738:	18ba      	adds	r2, r7, r2
 800373a:	8812      	ldrh	r2, [r2, #0]
 800373c:	801a      	strh	r2, [r3, #0]

	I2C_CR2(i2c, I2C_CR2_START | (1 << 16) | (saddr << 1));/* generate start and send slave address */
 800373e:	230b      	movs	r3, #11
 8003740:	18fb      	adds	r3, r7, r3
 8003742:	781b      	ldrb	r3, [r3, #0]
 8003744:	005b      	lsls	r3, r3, #1
 8003746:	001a      	movs	r2, r3
 8003748:	2390      	movs	r3, #144	; 0x90
 800374a:	025b      	lsls	r3, r3, #9
 800374c:	431a      	orrs	r2, r3
 800374e:	68fb      	ldr	r3, [r7, #12]
 8003750:	0011      	movs	r1, r2
 8003752:	0018      	movs	r0, r3
 8003754:	f7ff fde8 	bl	8003328 <I2C_CR2>

	while (!(i2c->ISR & I2C_ISR_TXIS)) {
 8003758:	e00e      	b.n	8003778 <I2C_MasterMultiRead+0x9c>
		I2C_Delay(1);
 800375a:	2001      	movs	r0, #1
 800375c:	f7fe fe80 	bl	8002460 <HAL_Delay>
		i--;
 8003760:	2116      	movs	r1, #22
 8003762:	187b      	adds	r3, r7, r1
 8003764:	881a      	ldrh	r2, [r3, #0]
 8003766:	187b      	adds	r3, r7, r1
 8003768:	3a01      	subs	r2, #1
 800376a:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 800376c:	187b      	adds	r3, r7, r1
 800376e:	881b      	ldrh	r3, [r3, #0]
 8003770:	2b00      	cmp	r3, #0
 8003772:	d101      	bne.n	8003778 <I2C_MasterMultiRead+0x9c>
			return BML_TIMEOUT;
 8003774:	2303      	movs	r3, #3
 8003776:	e083      	b.n	8003880 <I2C_MasterMultiRead+0x1a4>
	while (!(i2c->ISR & I2C_ISR_TXIS)) {
 8003778:	68fb      	ldr	r3, [r7, #12]
 800377a:	699b      	ldr	r3, [r3, #24]
 800377c:	2202      	movs	r2, #2
 800377e:	4013      	ands	r3, r2
 8003780:	d0eb      	beq.n	800375a <I2C_MasterMultiRead+0x7e>
		}
	}/* wait until transmitter is ready */

	i = timeout;
 8003782:	2316      	movs	r3, #22
 8003784:	18fb      	adds	r3, r7, r3
 8003786:	2224      	movs	r2, #36	; 0x24
 8003788:	18ba      	adds	r2, r7, r2
 800378a:	8812      	ldrh	r2, [r2, #0]
 800378c:	801a      	strh	r2, [r3, #0]

	i2c->TXDR = maddr; /* send memory address */
 800378e:	230a      	movs	r3, #10
 8003790:	18fb      	adds	r3, r7, r3
 8003792:	781a      	ldrb	r2, [r3, #0]
 8003794:	68fb      	ldr	r3, [r7, #12]
 8003796:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(i2c->ISR & I2C_ISR_TC)) {
 8003798:	e00e      	b.n	80037b8 <I2C_MasterMultiRead+0xdc>
		I2C_Delay(1);
 800379a:	2001      	movs	r0, #1
 800379c:	f7fe fe60 	bl	8002460 <HAL_Delay>
		i--;
 80037a0:	2116      	movs	r1, #22
 80037a2:	187b      	adds	r3, r7, r1
 80037a4:	881a      	ldrh	r2, [r3, #0]
 80037a6:	187b      	adds	r3, r7, r1
 80037a8:	3a01      	subs	r2, #1
 80037aa:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 80037ac:	187b      	adds	r3, r7, r1
 80037ae:	881b      	ldrh	r3, [r3, #0]
 80037b0:	2b00      	cmp	r3, #0
 80037b2:	d101      	bne.n	80037b8 <I2C_MasterMultiRead+0xdc>
			return BML_TIMEOUT;
 80037b4:	2303      	movs	r3, #3
 80037b6:	e063      	b.n	8003880 <I2C_MasterMultiRead+0x1a4>
	while (!(i2c->ISR & I2C_ISR_TC)) {
 80037b8:	68fb      	ldr	r3, [r7, #12]
 80037ba:	699b      	ldr	r3, [r3, #24]
 80037bc:	2240      	movs	r2, #64	; 0x40
 80037be:	4013      	ands	r3, r2
 80037c0:	d0eb      	beq.n	800379a <I2C_MasterMultiRead+0xbe>

	/* generate restart, send slave address, repeat read n bytes, set for auto end */

	I2C_CR2(i2c,
			I2C_CR2_START | I2C_CR2_RD_WRN | I2C_CR2_AUTOEND
					| ((n & 0xFF) << 16) | (saddr << 1));
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	041a      	lsls	r2, r3, #16
 80037c6:	23ff      	movs	r3, #255	; 0xff
 80037c8:	041b      	lsls	r3, r3, #16
 80037ca:	4013      	ands	r3, r2
 80037cc:	220b      	movs	r2, #11
 80037ce:	18ba      	adds	r2, r7, r2
 80037d0:	7812      	ldrb	r2, [r2, #0]
 80037d2:	0052      	lsls	r2, r2, #1
 80037d4:	4313      	orrs	r3, r2
	I2C_CR2(i2c,
 80037d6:	4a2c      	ldr	r2, [pc, #176]	; (8003888 <I2C_MasterMultiRead+0x1ac>)
 80037d8:	431a      	orrs	r2, r3
 80037da:	68fb      	ldr	r3, [r7, #12]
 80037dc:	0011      	movs	r1, r2
 80037de:	0018      	movs	r0, r3
 80037e0:	f7ff fda2 	bl	8003328 <I2C_CR2>

	for (; n > 0; n--) {
 80037e4:	e023      	b.n	800382e <I2C_MasterMultiRead+0x152>
		while (!(i2c->ISR & I2C_ISR_RXNE)) {
			I2C_Delay(1);
 80037e6:	2001      	movs	r0, #1
 80037e8:	f7fe fe3a 	bl	8002460 <HAL_Delay>
			i--;
 80037ec:	2116      	movs	r1, #22
 80037ee:	187b      	adds	r3, r7, r1
 80037f0:	881a      	ldrh	r2, [r3, #0]
 80037f2:	187b      	adds	r3, r7, r1
 80037f4:	3a01      	subs	r2, #1
 80037f6:	801a      	strh	r2, [r3, #0]
			if (i <= 0) {
 80037f8:	187b      	adds	r3, r7, r1
 80037fa:	881b      	ldrh	r3, [r3, #0]
 80037fc:	2b00      	cmp	r3, #0
 80037fe:	d101      	bne.n	8003804 <I2C_MasterMultiRead+0x128>
				return BML_TIMEOUT;
 8003800:	2303      	movs	r3, #3
 8003802:	e03d      	b.n	8003880 <I2C_MasterMultiRead+0x1a4>
		while (!(i2c->ISR & I2C_ISR_RXNE)) {
 8003804:	68fb      	ldr	r3, [r7, #12]
 8003806:	699b      	ldr	r3, [r3, #24]
 8003808:	2204      	movs	r2, #4
 800380a:	4013      	ands	r3, r2
 800380c:	d0eb      	beq.n	80037e6 <I2C_MasterMultiRead+0x10a>
			}
		} /* Wait until RXNE flag is set */
		i = timeout;
 800380e:	2316      	movs	r3, #22
 8003810:	18fb      	adds	r3, r7, r3
 8003812:	2224      	movs	r2, #36	; 0x24
 8003814:	18ba      	adds	r2, r7, r2
 8003816:	8812      	ldrh	r2, [r2, #0]
 8003818:	801a      	strh	r2, [r3, #0]
		*data++ = i2c->RXDR; /* Read data from DR */
 800381a:	68fb      	ldr	r3, [r7, #12]
 800381c:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800381e:	6a3b      	ldr	r3, [r7, #32]
 8003820:	1c5a      	adds	r2, r3, #1
 8003822:	623a      	str	r2, [r7, #32]
 8003824:	b2ca      	uxtb	r2, r1
 8003826:	701a      	strb	r2, [r3, #0]
	for (; n > 0; n--) {
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	3b01      	subs	r3, #1
 800382c:	607b      	str	r3, [r7, #4]
 800382e:	687b      	ldr	r3, [r7, #4]
 8003830:	2b00      	cmp	r3, #0
 8003832:	d1e7      	bne.n	8003804 <I2C_MasterMultiRead+0x128>
	}

	while (!(i2c->ISR & I2C_ISR_STOPF)) {
 8003834:	e00e      	b.n	8003854 <I2C_MasterMultiRead+0x178>
		I2C_Delay(1);
 8003836:	2001      	movs	r0, #1
 8003838:	f7fe fe12 	bl	8002460 <HAL_Delay>
		i--;
 800383c:	2116      	movs	r1, #22
 800383e:	187b      	adds	r3, r7, r1
 8003840:	881a      	ldrh	r2, [r3, #0]
 8003842:	187b      	adds	r3, r7, r1
 8003844:	3a01      	subs	r2, #1
 8003846:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 8003848:	187b      	adds	r3, r7, r1
 800384a:	881b      	ldrh	r3, [r3, #0]
 800384c:	2b00      	cmp	r3, #0
 800384e:	d101      	bne.n	8003854 <I2C_MasterMultiRead+0x178>
			return BML_TIMEOUT;
 8003850:	2303      	movs	r3, #3
 8003852:	e015      	b.n	8003880 <I2C_MasterMultiRead+0x1a4>
	while (!(i2c->ISR & I2C_ISR_STOPF)) {
 8003854:	68fb      	ldr	r3, [r7, #12]
 8003856:	699b      	ldr	r3, [r3, #24]
 8003858:	2220      	movs	r2, #32
 800385a:	4013      	ands	r3, r2
 800385c:	d0eb      	beq.n	8003836 <I2C_MasterMultiRead+0x15a>
		}
	} /* wait until stop flag is set */
	i = timeout;
 800385e:	2316      	movs	r3, #22
 8003860:	18fb      	adds	r3, r7, r3
 8003862:	2224      	movs	r2, #36	; 0x24
 8003864:	18ba      	adds	r2, r7, r2
 8003866:	8812      	ldrh	r2, [r2, #0]
 8003868:	801a      	strh	r2, [r3, #0]
	i2c->ICR = I2C_ISR_STOPF; /* clear stop flag */
 800386a:	68fb      	ldr	r3, [r7, #12]
 800386c:	2220      	movs	r2, #32
 800386e:	61da      	str	r2, [r3, #28]
	I2C_CR2(i2c, I2C_CR2_AUTOEND);
 8003870:	2380      	movs	r3, #128	; 0x80
 8003872:	049a      	lsls	r2, r3, #18
 8003874:	68fb      	ldr	r3, [r7, #12]
 8003876:	0011      	movs	r1, r2
 8003878:	0018      	movs	r0, r3
 800387a:	f7ff fd55 	bl	8003328 <I2C_CR2>

	return BML_OK;
 800387e:	2300      	movs	r3, #0
}
 8003880:	0018      	movs	r0, r3
 8003882:	46bd      	mov	sp, r7
 8003884:	b006      	add	sp, #24
 8003886:	bd80      	pop	{r7, pc}
 8003888:	02002400 	.word	0x02002400

0800388c <RCC_CONFIG_48MHZ>:
 *      Author: hp
 */
#include "rcc.h"

//*****************************| RCC CLOCK FUNCTION |****************************//
BML_StatusTypeDef RCC_CONFIG_48MHZ() {
 800388c:	b590      	push	{r4, r7, lr}
 800388e:	b091      	sub	sp, #68	; 0x44
 8003890:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 8003892:	2410      	movs	r4, #16
 8003894:	193b      	adds	r3, r7, r4
 8003896:	0018      	movs	r0, r3
 8003898:	2330      	movs	r3, #48	; 0x30
 800389a:	001a      	movs	r2, r3
 800389c:	2100      	movs	r1, #0
 800389e:	f000 fd3f 	bl	8004320 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 80038a2:	003b      	movs	r3, r7
 80038a4:	0018      	movs	r0, r3
 80038a6:	2310      	movs	r3, #16
 80038a8:	001a      	movs	r2, r3
 80038aa:	2100      	movs	r1, #0
 80038ac:	f000 fd38 	bl	8004320 <memset>

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80038b0:	0021      	movs	r1, r4
 80038b2:	187b      	adds	r3, r7, r1
 80038b4:	2202      	movs	r2, #2
 80038b6:	601a      	str	r2, [r3, #0]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80038b8:	187b      	adds	r3, r7, r1
 80038ba:	2201      	movs	r2, #1
 80038bc:	60da      	str	r2, [r3, #12]
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80038be:	187b      	adds	r3, r7, r1
 80038c0:	2210      	movs	r2, #16
 80038c2:	611a      	str	r2, [r3, #16]
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80038c4:	187b      	adds	r3, r7, r1
 80038c6:	2202      	movs	r2, #2
 80038c8:	621a      	str	r2, [r3, #32]
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80038ca:	187b      	adds	r3, r7, r1
 80038cc:	2280      	movs	r2, #128	; 0x80
 80038ce:	0212      	lsls	r2, r2, #8
 80038d0:	625a      	str	r2, [r3, #36]	; 0x24
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 80038d2:	187b      	adds	r3, r7, r1
 80038d4:	2280      	movs	r2, #128	; 0x80
 80038d6:	0352      	lsls	r2, r2, #13
 80038d8:	629a      	str	r2, [r3, #40]	; 0x28
	RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 80038da:	187b      	adds	r3, r7, r1
 80038dc:	2200      	movs	r2, #0
 80038de:	62da      	str	r2, [r3, #44]	; 0x2c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != BML_OK) {
 80038e0:	187b      	adds	r3, r7, r1
 80038e2:	0018      	movs	r0, r3
 80038e4:	f7fe fe94 	bl	8002610 <HAL_RCC_OscConfig>
 80038e8:	1e03      	subs	r3, r0, #0
 80038ea:	d001      	beq.n	80038f0 <RCC_CONFIG_48MHZ+0x64>
		return BML_ERROR;
 80038ec:	2301      	movs	r3, #1
 80038ee:	e014      	b.n	800391a <RCC_CONFIG_48MHZ+0x8e>
	}
	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 80038f0:	003b      	movs	r3, r7
 80038f2:	2207      	movs	r2, #7
 80038f4:	601a      	str	r2, [r3, #0]
			| RCC_CLOCKTYPE_PCLK1;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80038f6:	003b      	movs	r3, r7
 80038f8:	2202      	movs	r2, #2
 80038fa:	605a      	str	r2, [r3, #4]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80038fc:	003b      	movs	r3, r7
 80038fe:	2200      	movs	r2, #0
 8003900:	609a      	str	r2, [r3, #8]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8003902:	003b      	movs	r3, r7
 8003904:	2200      	movs	r2, #0
 8003906:	60da      	str	r2, [r3, #12]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK) {
 8003908:	003b      	movs	r3, r7
 800390a:	2101      	movs	r1, #1
 800390c:	0018      	movs	r0, r3
 800390e:	f7ff f99d 	bl	8002c4c <HAL_RCC_ClockConfig>
 8003912:	1e03      	subs	r3, r0, #0
 8003914:	d001      	beq.n	800391a <RCC_CONFIG_48MHZ+0x8e>
		return BML_ERROR;
 8003916:	2301      	movs	r3, #1
 8003918:	e7ff      	b.n	800391a <RCC_CONFIG_48MHZ+0x8e>
	}
}
 800391a:	0018      	movs	r0, r3
 800391c:	46bd      	mov	sp, r7
 800391e:	b011      	add	sp, #68	; 0x44
 8003920:	bd90      	pop	{r4, r7, pc}
	...

08003924 <TIM6_IRQHandler>:
	return ticks;
}
void ticks_reset() {
	ticks = 0;
}
void TIM6_IRQHandler(void) {		// Timer Interrupt helping in delay
 8003924:	b580      	push	{r7, lr}
 8003926:	af00      	add	r7, sp, #0
	ticks++;
 8003928:	4b07      	ldr	r3, [pc, #28]	; (8003948 <TIM6_IRQHandler+0x24>)
 800392a:	881b      	ldrh	r3, [r3, #0]
 800392c:	3301      	adds	r3, #1
 800392e:	b29a      	uxth	r2, r3
 8003930:	4b05      	ldr	r3, [pc, #20]	; (8003948 <TIM6_IRQHandler+0x24>)
 8003932:	801a      	strh	r2, [r3, #0]
	TIM6->SR &= ~TIM_SR_UIF;
 8003934:	4b05      	ldr	r3, [pc, #20]	; (800394c <TIM6_IRQHandler+0x28>)
 8003936:	691a      	ldr	r2, [r3, #16]
 8003938:	4b04      	ldr	r3, [pc, #16]	; (800394c <TIM6_IRQHandler+0x28>)
 800393a:	2101      	movs	r1, #1
 800393c:	438a      	bics	r2, r1
 800393e:	611a      	str	r2, [r3, #16]
}
 8003940:	46c0      	nop			; (mov r8, r8)
 8003942:	46bd      	mov	sp, r7
 8003944:	bd80      	pop	{r7, pc}
 8003946:	46c0      	nop			; (mov r8, r8)
 8003948:	20000248 	.word	0x20000248
 800394c:	40001000 	.word	0x40001000

08003950 <USART_INIT>:
 */
#include "uart.h"

void USART_INIT(USART_TypeDef *usart, GPIO_TypeDef *tx_port,
		GPIO_TypeDef *rx_port, uint32_t tx_pinNumber, uint32_t rx_pinNumber,
		uint32_t bd_rate) {
 8003950:	b590      	push	{r4, r7, lr}
 8003952:	b087      	sub	sp, #28
 8003954:	af02      	add	r7, sp, #8
 8003956:	60f8      	str	r0, [r7, #12]
 8003958:	60b9      	str	r1, [r7, #8]
 800395a:	607a      	str	r2, [r7, #4]
 800395c:	603b      	str	r3, [r7, #0]

	USART_CLK_EN(usart);
 800395e:	68fb      	ldr	r3, [r7, #12]
 8003960:	0018      	movs	r0, r3
 8003962:	f000 f819 	bl	8003998 <USART_CLK_EN>

	USART_PIN_CONFIG(usart, tx_port, rx_port, tx_pinNumber, rx_pinNumber);
 8003966:	683c      	ldr	r4, [r7, #0]
 8003968:	687a      	ldr	r2, [r7, #4]
 800396a:	68b9      	ldr	r1, [r7, #8]
 800396c:	68f8      	ldr	r0, [r7, #12]
 800396e:	6a3b      	ldr	r3, [r7, #32]
 8003970:	9300      	str	r3, [sp, #0]
 8003972:	0023      	movs	r3, r4
 8003974:	f000 f852 	bl	8003a1c <USART_PIN_CONFIG>

	USART_BDR_SEL(usart, bd_rate);
 8003978:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800397a:	68fb      	ldr	r3, [r7, #12]
 800397c:	0011      	movs	r1, r2
 800397e:	0018      	movs	r0, r3
 8003980:	f000 f960 	bl	8003c44 <USART_BDR_SEL>

	usart->CR1 |= USART_CR1_RE | USART_CR1_TE | USART_CR1_UE;
 8003984:	68fb      	ldr	r3, [r7, #12]
 8003986:	681b      	ldr	r3, [r3, #0]
 8003988:	220d      	movs	r2, #13
 800398a:	431a      	orrs	r2, r3
 800398c:	68fb      	ldr	r3, [r7, #12]
 800398e:	601a      	str	r2, [r3, #0]

}
 8003990:	46c0      	nop			; (mov r8, r8)
 8003992:	46bd      	mov	sp, r7
 8003994:	b005      	add	sp, #20
 8003996:	bd90      	pop	{r4, r7, pc}

08003998 <USART_CLK_EN>:
	if (IDLE_IT) {
		usart->CR1 |= USART_CR1_IDLEIE;
	}
}
// Initialize UART pins, Baudrate
void USART_CLK_EN(USART_TypeDef *usart) {
 8003998:	b580      	push	{r7, lr}
 800399a:	b082      	sub	sp, #8
 800399c:	af00      	add	r7, sp, #0
 800399e:	6078      	str	r0, [r7, #4]
	if (usart == USART1) {
 80039a0:	687b      	ldr	r3, [r7, #4]
 80039a2:	4a19      	ldr	r2, [pc, #100]	; (8003a08 <USART_CLK_EN+0x70>)
 80039a4:	4293      	cmp	r3, r2
 80039a6:	d107      	bne.n	80039b8 <USART_CLK_EN+0x20>
		USART1_CLK_EN;
 80039a8:	4b18      	ldr	r3, [pc, #96]	; (8003a0c <USART_CLK_EN+0x74>)
 80039aa:	69da      	ldr	r2, [r3, #28]
 80039ac:	4b17      	ldr	r3, [pc, #92]	; (8003a0c <USART_CLK_EN+0x74>)
 80039ae:	2180      	movs	r1, #128	; 0x80
 80039b0:	01c9      	lsls	r1, r1, #7
 80039b2:	430a      	orrs	r2, r1
 80039b4:	61da      	str	r2, [r3, #28]
	} else if (usart == USART3) {
		USART3_CLK_EN;
	} else if (usart == USART4) {
		USART4_CLK_EN;
	}
}
 80039b6:	e022      	b.n	80039fe <USART_CLK_EN+0x66>
	} else if (usart == USART2) {
 80039b8:	687b      	ldr	r3, [r7, #4]
 80039ba:	4a15      	ldr	r2, [pc, #84]	; (8003a10 <USART_CLK_EN+0x78>)
 80039bc:	4293      	cmp	r3, r2
 80039be:	d107      	bne.n	80039d0 <USART_CLK_EN+0x38>
		USART2_CLK_EN;
 80039c0:	4b12      	ldr	r3, [pc, #72]	; (8003a0c <USART_CLK_EN+0x74>)
 80039c2:	69da      	ldr	r2, [r3, #28]
 80039c4:	4b11      	ldr	r3, [pc, #68]	; (8003a0c <USART_CLK_EN+0x74>)
 80039c6:	2180      	movs	r1, #128	; 0x80
 80039c8:	0289      	lsls	r1, r1, #10
 80039ca:	430a      	orrs	r2, r1
 80039cc:	61da      	str	r2, [r3, #28]
}
 80039ce:	e016      	b.n	80039fe <USART_CLK_EN+0x66>
	} else if (usart == USART3) {
 80039d0:	687b      	ldr	r3, [r7, #4]
 80039d2:	4a10      	ldr	r2, [pc, #64]	; (8003a14 <USART_CLK_EN+0x7c>)
 80039d4:	4293      	cmp	r3, r2
 80039d6:	d107      	bne.n	80039e8 <USART_CLK_EN+0x50>
		USART3_CLK_EN;
 80039d8:	4b0c      	ldr	r3, [pc, #48]	; (8003a0c <USART_CLK_EN+0x74>)
 80039da:	69da      	ldr	r2, [r3, #28]
 80039dc:	4b0b      	ldr	r3, [pc, #44]	; (8003a0c <USART_CLK_EN+0x74>)
 80039de:	2180      	movs	r1, #128	; 0x80
 80039e0:	02c9      	lsls	r1, r1, #11
 80039e2:	430a      	orrs	r2, r1
 80039e4:	61da      	str	r2, [r3, #28]
}
 80039e6:	e00a      	b.n	80039fe <USART_CLK_EN+0x66>
	} else if (usart == USART4) {
 80039e8:	687b      	ldr	r3, [r7, #4]
 80039ea:	4a0b      	ldr	r2, [pc, #44]	; (8003a18 <USART_CLK_EN+0x80>)
 80039ec:	4293      	cmp	r3, r2
 80039ee:	d106      	bne.n	80039fe <USART_CLK_EN+0x66>
		USART4_CLK_EN;
 80039f0:	4b06      	ldr	r3, [pc, #24]	; (8003a0c <USART_CLK_EN+0x74>)
 80039f2:	69da      	ldr	r2, [r3, #28]
 80039f4:	4b05      	ldr	r3, [pc, #20]	; (8003a0c <USART_CLK_EN+0x74>)
 80039f6:	2180      	movs	r1, #128	; 0x80
 80039f8:	0309      	lsls	r1, r1, #12
 80039fa:	430a      	orrs	r2, r1
 80039fc:	61da      	str	r2, [r3, #28]
}
 80039fe:	46c0      	nop			; (mov r8, r8)
 8003a00:	46bd      	mov	sp, r7
 8003a02:	b002      	add	sp, #8
 8003a04:	bd80      	pop	{r7, pc}
 8003a06:	46c0      	nop			; (mov r8, r8)
 8003a08:	40013800 	.word	0x40013800
 8003a0c:	40021000 	.word	0x40021000
 8003a10:	40004400 	.word	0x40004400
 8003a14:	40004800 	.word	0x40004800
 8003a18:	40004c00 	.word	0x40004c00

08003a1c <USART_PIN_CONFIG>:

void USART_PIN_CONFIG(USART_TypeDef *usart, GPIO_TypeDef *tx_port,
		GPIO_TypeDef *rx_port, uint32_t tx_pinNumber, uint32_t rx_pinNumber) {
 8003a1c:	b580      	push	{r7, lr}
 8003a1e:	b086      	sub	sp, #24
 8003a20:	af02      	add	r7, sp, #8
 8003a22:	60f8      	str	r0, [r7, #12]
 8003a24:	60b9      	str	r1, [r7, #8]
 8003a26:	607a      	str	r2, [r7, #4]
 8003a28:	603b      	str	r3, [r7, #0]

	gpio_config(tx_port, tx_pinNumber, ALT_MODE, HIGH_SPEED, DI_PUPD, PHPL);
 8003a2a:	6839      	ldr	r1, [r7, #0]
 8003a2c:	68b8      	ldr	r0, [r7, #8]
 8003a2e:	2300      	movs	r3, #0
 8003a30:	9301      	str	r3, [sp, #4]
 8003a32:	2300      	movs	r3, #0
 8003a34:	9300      	str	r3, [sp, #0]
 8003a36:	2302      	movs	r3, #2
 8003a38:	2202      	movs	r2, #2
 8003a3a:	f7ff fb3d 	bl	80030b8 <gpio_config>
	gpio_config(rx_port, rx_pinNumber, ALT_MODE, HIGH_SPEED, DI_PUPD, PHPL);
 8003a3e:	69b9      	ldr	r1, [r7, #24]
 8003a40:	6878      	ldr	r0, [r7, #4]
 8003a42:	2300      	movs	r3, #0
 8003a44:	9301      	str	r3, [sp, #4]
 8003a46:	2300      	movs	r3, #0
 8003a48:	9300      	str	r3, [sp, #0]
 8003a4a:	2302      	movs	r3, #2
 8003a4c:	2202      	movs	r2, #2
 8003a4e:	f7ff fb33 	bl	80030b8 <gpio_config>

	if (usart == USART1) {
 8003a52:	68fb      	ldr	r3, [r7, #12]
 8003a54:	4a75      	ldr	r2, [pc, #468]	; (8003c2c <USART_PIN_CONFIG+0x210>)
 8003a56:	4293      	cmp	r3, r2
 8003a58:	d13a      	bne.n	8003ad0 <USART_PIN_CONFIG+0xb4>
		// TX
		if (tx_port == PORTA && tx_pinNumber == 9) {
 8003a5a:	68ba      	ldr	r2, [r7, #8]
 8003a5c:	2390      	movs	r3, #144	; 0x90
 8003a5e:	05db      	lsls	r3, r3, #23
 8003a60:	429a      	cmp	r2, r3
 8003a62:	d109      	bne.n	8003a78 <USART_PIN_CONFIG+0x5c>
 8003a64:	683b      	ldr	r3, [r7, #0]
 8003a66:	2b09      	cmp	r3, #9
 8003a68:	d106      	bne.n	8003a78 <USART_PIN_CONFIG+0x5c>
			gpio_altfn(tx_port, tx_pinNumber, USART1_TX_PA9);
 8003a6a:	6839      	ldr	r1, [r7, #0]
 8003a6c:	68bb      	ldr	r3, [r7, #8]
 8003a6e:	2201      	movs	r2, #1
 8003a70:	0018      	movs	r0, r3
 8003a72:	f7ff fbe8 	bl	8003246 <gpio_altfn>
 8003a76:	e00c      	b.n	8003a92 <USART_PIN_CONFIG+0x76>
		} else if (tx_port == PORTB && tx_pinNumber == 6) {
 8003a78:	68bb      	ldr	r3, [r7, #8]
 8003a7a:	4a6d      	ldr	r2, [pc, #436]	; (8003c30 <USART_PIN_CONFIG+0x214>)
 8003a7c:	4293      	cmp	r3, r2
 8003a7e:	d108      	bne.n	8003a92 <USART_PIN_CONFIG+0x76>
 8003a80:	683b      	ldr	r3, [r7, #0]
 8003a82:	2b06      	cmp	r3, #6
 8003a84:	d105      	bne.n	8003a92 <USART_PIN_CONFIG+0x76>
			gpio_altfn(tx_port, tx_pinNumber, USART1_TX_PB6);
 8003a86:	6839      	ldr	r1, [r7, #0]
 8003a88:	68bb      	ldr	r3, [r7, #8]
 8003a8a:	2200      	movs	r2, #0
 8003a8c:	0018      	movs	r0, r3
 8003a8e:	f7ff fbda 	bl	8003246 <gpio_altfn>
		}

		// RX
		if (rx_port == PORTA && rx_pinNumber == 10) {
 8003a92:	687a      	ldr	r2, [r7, #4]
 8003a94:	2390      	movs	r3, #144	; 0x90
 8003a96:	05db      	lsls	r3, r3, #23
 8003a98:	429a      	cmp	r2, r3
 8003a9a:	d109      	bne.n	8003ab0 <USART_PIN_CONFIG+0x94>
 8003a9c:	69bb      	ldr	r3, [r7, #24]
 8003a9e:	2b0a      	cmp	r3, #10
 8003aa0:	d106      	bne.n	8003ab0 <USART_PIN_CONFIG+0x94>
			gpio_altfn(rx_port, rx_pinNumber, USART1_RX_PA10);
 8003aa2:	69b9      	ldr	r1, [r7, #24]
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	2201      	movs	r2, #1
 8003aa8:	0018      	movs	r0, r3
 8003aaa:	f7ff fbcc 	bl	8003246 <gpio_altfn>
 8003aae:	e0b8      	b.n	8003c22 <USART_PIN_CONFIG+0x206>
		} else if (rx_port == PORTB && rx_pinNumber == 7) {
 8003ab0:	687b      	ldr	r3, [r7, #4]
 8003ab2:	4a5f      	ldr	r2, [pc, #380]	; (8003c30 <USART_PIN_CONFIG+0x214>)
 8003ab4:	4293      	cmp	r3, r2
 8003ab6:	d000      	beq.n	8003aba <USART_PIN_CONFIG+0x9e>
 8003ab8:	e0b3      	b.n	8003c22 <USART_PIN_CONFIG+0x206>
 8003aba:	69bb      	ldr	r3, [r7, #24]
 8003abc:	2b07      	cmp	r3, #7
 8003abe:	d000      	beq.n	8003ac2 <USART_PIN_CONFIG+0xa6>
 8003ac0:	e0af      	b.n	8003c22 <USART_PIN_CONFIG+0x206>
			gpio_altfn(rx_port, rx_pinNumber, USART1_RX_PB7);
 8003ac2:	69b9      	ldr	r1, [r7, #24]
 8003ac4:	687b      	ldr	r3, [r7, #4]
 8003ac6:	2200      	movs	r2, #0
 8003ac8:	0018      	movs	r0, r3
 8003aca:	f7ff fbbc 	bl	8003246 <gpio_altfn>
		}
	} else if (usart == USART4) {
		gpio_altfn(tx_port, tx_pinNumber, USART4_TX_PA0);
		gpio_altfn(rx_port, rx_pinNumber, USART4_RX_PA1);
	}
}
 8003ace:	e0a8      	b.n	8003c22 <USART_PIN_CONFIG+0x206>
	} else if (usart == USART2) {
 8003ad0:	68fb      	ldr	r3, [r7, #12]
 8003ad2:	4a58      	ldr	r2, [pc, #352]	; (8003c34 <USART_PIN_CONFIG+0x218>)
 8003ad4:	4293      	cmp	r3, r2
 8003ad6:	d13c      	bne.n	8003b52 <USART_PIN_CONFIG+0x136>
		if (tx_port == PORTA && tx_pinNumber == 2) {
 8003ad8:	68ba      	ldr	r2, [r7, #8]
 8003ada:	2390      	movs	r3, #144	; 0x90
 8003adc:	05db      	lsls	r3, r3, #23
 8003ade:	429a      	cmp	r2, r3
 8003ae0:	d109      	bne.n	8003af6 <USART_PIN_CONFIG+0xda>
 8003ae2:	683b      	ldr	r3, [r7, #0]
 8003ae4:	2b02      	cmp	r3, #2
 8003ae6:	d106      	bne.n	8003af6 <USART_PIN_CONFIG+0xda>
			gpio_altfn(tx_port, tx_pinNumber, USART2_TX_PA2);
 8003ae8:	6839      	ldr	r1, [r7, #0]
 8003aea:	68bb      	ldr	r3, [r7, #8]
 8003aec:	2201      	movs	r2, #1
 8003aee:	0018      	movs	r0, r3
 8003af0:	f7ff fba9 	bl	8003246 <gpio_altfn>
 8003af4:	e00d      	b.n	8003b12 <USART_PIN_CONFIG+0xf6>
		} else if (tx_port == PORTA && tx_pinNumber == 14) {
 8003af6:	68ba      	ldr	r2, [r7, #8]
 8003af8:	2390      	movs	r3, #144	; 0x90
 8003afa:	05db      	lsls	r3, r3, #23
 8003afc:	429a      	cmp	r2, r3
 8003afe:	d108      	bne.n	8003b12 <USART_PIN_CONFIG+0xf6>
 8003b00:	683b      	ldr	r3, [r7, #0]
 8003b02:	2b0e      	cmp	r3, #14
 8003b04:	d105      	bne.n	8003b12 <USART_PIN_CONFIG+0xf6>
			gpio_altfn(tx_port, tx_pinNumber, USART2_TX_PA14);
 8003b06:	6839      	ldr	r1, [r7, #0]
 8003b08:	68bb      	ldr	r3, [r7, #8]
 8003b0a:	2201      	movs	r2, #1
 8003b0c:	0018      	movs	r0, r3
 8003b0e:	f7ff fb9a 	bl	8003246 <gpio_altfn>
		if (rx_port == PORTA && rx_pinNumber == 3) {
 8003b12:	687a      	ldr	r2, [r7, #4]
 8003b14:	2390      	movs	r3, #144	; 0x90
 8003b16:	05db      	lsls	r3, r3, #23
 8003b18:	429a      	cmp	r2, r3
 8003b1a:	d109      	bne.n	8003b30 <USART_PIN_CONFIG+0x114>
 8003b1c:	69bb      	ldr	r3, [r7, #24]
 8003b1e:	2b03      	cmp	r3, #3
 8003b20:	d106      	bne.n	8003b30 <USART_PIN_CONFIG+0x114>
			gpio_altfn(rx_port, rx_pinNumber, USART2_RX_PA3);
 8003b22:	69b9      	ldr	r1, [r7, #24]
 8003b24:	687b      	ldr	r3, [r7, #4]
 8003b26:	2201      	movs	r2, #1
 8003b28:	0018      	movs	r0, r3
 8003b2a:	f7ff fb8c 	bl	8003246 <gpio_altfn>
 8003b2e:	e078      	b.n	8003c22 <USART_PIN_CONFIG+0x206>
		} else if (rx_port == PORTA && rx_pinNumber == 15) {
 8003b30:	687a      	ldr	r2, [r7, #4]
 8003b32:	2390      	movs	r3, #144	; 0x90
 8003b34:	05db      	lsls	r3, r3, #23
 8003b36:	429a      	cmp	r2, r3
 8003b38:	d000      	beq.n	8003b3c <USART_PIN_CONFIG+0x120>
 8003b3a:	e072      	b.n	8003c22 <USART_PIN_CONFIG+0x206>
 8003b3c:	69bb      	ldr	r3, [r7, #24]
 8003b3e:	2b0f      	cmp	r3, #15
 8003b40:	d000      	beq.n	8003b44 <USART_PIN_CONFIG+0x128>
 8003b42:	e06e      	b.n	8003c22 <USART_PIN_CONFIG+0x206>
			gpio_altfn(rx_port, rx_pinNumber, USART2_RX_PA15);
 8003b44:	69b9      	ldr	r1, [r7, #24]
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	2201      	movs	r2, #1
 8003b4a:	0018      	movs	r0, r3
 8003b4c:	f7ff fb7b 	bl	8003246 <gpio_altfn>
}
 8003b50:	e067      	b.n	8003c22 <USART_PIN_CONFIG+0x206>
	} else if (usart == USART3) {
 8003b52:	68fb      	ldr	r3, [r7, #12]
 8003b54:	4a38      	ldr	r2, [pc, #224]	; (8003c38 <USART_PIN_CONFIG+0x21c>)
 8003b56:	4293      	cmp	r3, r2
 8003b58:	d152      	bne.n	8003c00 <USART_PIN_CONFIG+0x1e4>
		if (tx_port == PORTC && tx_pinNumber == 4) {
 8003b5a:	68bb      	ldr	r3, [r7, #8]
 8003b5c:	4a37      	ldr	r2, [pc, #220]	; (8003c3c <USART_PIN_CONFIG+0x220>)
 8003b5e:	4293      	cmp	r3, r2
 8003b60:	d109      	bne.n	8003b76 <USART_PIN_CONFIG+0x15a>
 8003b62:	683b      	ldr	r3, [r7, #0]
 8003b64:	2b04      	cmp	r3, #4
 8003b66:	d106      	bne.n	8003b76 <USART_PIN_CONFIG+0x15a>
			gpio_altfn(tx_port, tx_pinNumber, USART3_TX_PC4);
 8003b68:	6839      	ldr	r1, [r7, #0]
 8003b6a:	68bb      	ldr	r3, [r7, #8]
 8003b6c:	2201      	movs	r2, #1
 8003b6e:	0018      	movs	r0, r3
 8003b70:	f7ff fb69 	bl	8003246 <gpio_altfn>
 8003b74:	e01a      	b.n	8003bac <USART_PIN_CONFIG+0x190>
		} else if (tx_port == PORTB && tx_pinNumber == 10) {
 8003b76:	68bb      	ldr	r3, [r7, #8]
 8003b78:	4a2d      	ldr	r2, [pc, #180]	; (8003c30 <USART_PIN_CONFIG+0x214>)
 8003b7a:	4293      	cmp	r3, r2
 8003b7c:	d109      	bne.n	8003b92 <USART_PIN_CONFIG+0x176>
 8003b7e:	683b      	ldr	r3, [r7, #0]
 8003b80:	2b0a      	cmp	r3, #10
 8003b82:	d106      	bne.n	8003b92 <USART_PIN_CONFIG+0x176>
			gpio_altfn(tx_port, tx_pinNumber, USART3_TX_PB10);
 8003b84:	6839      	ldr	r1, [r7, #0]
 8003b86:	68bb      	ldr	r3, [r7, #8]
 8003b88:	2204      	movs	r2, #4
 8003b8a:	0018      	movs	r0, r3
 8003b8c:	f7ff fb5b 	bl	8003246 <gpio_altfn>
 8003b90:	e00c      	b.n	8003bac <USART_PIN_CONFIG+0x190>
		} else if (tx_port == PORTC && tx_pinNumber == 10) {
 8003b92:	68bb      	ldr	r3, [r7, #8]
 8003b94:	4a29      	ldr	r2, [pc, #164]	; (8003c3c <USART_PIN_CONFIG+0x220>)
 8003b96:	4293      	cmp	r3, r2
 8003b98:	d108      	bne.n	8003bac <USART_PIN_CONFIG+0x190>
 8003b9a:	683b      	ldr	r3, [r7, #0]
 8003b9c:	2b0a      	cmp	r3, #10
 8003b9e:	d105      	bne.n	8003bac <USART_PIN_CONFIG+0x190>
			gpio_altfn(tx_port, tx_pinNumber, USART3_TX_PC10);
 8003ba0:	6839      	ldr	r1, [r7, #0]
 8003ba2:	68bb      	ldr	r3, [r7, #8]
 8003ba4:	2201      	movs	r2, #1
 8003ba6:	0018      	movs	r0, r3
 8003ba8:	f7ff fb4d 	bl	8003246 <gpio_altfn>
		if (rx_port == PORTC && rx_pinNumber == 5) {
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	4a23      	ldr	r2, [pc, #140]	; (8003c3c <USART_PIN_CONFIG+0x220>)
 8003bb0:	4293      	cmp	r3, r2
 8003bb2:	d109      	bne.n	8003bc8 <USART_PIN_CONFIG+0x1ac>
 8003bb4:	69bb      	ldr	r3, [r7, #24]
 8003bb6:	2b05      	cmp	r3, #5
 8003bb8:	d106      	bne.n	8003bc8 <USART_PIN_CONFIG+0x1ac>
			gpio_altfn(rx_port, rx_pinNumber, USART3_RX_PC5);
 8003bba:	69b9      	ldr	r1, [r7, #24]
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	2201      	movs	r2, #1
 8003bc0:	0018      	movs	r0, r3
 8003bc2:	f7ff fb40 	bl	8003246 <gpio_altfn>
 8003bc6:	e02c      	b.n	8003c22 <USART_PIN_CONFIG+0x206>
		} else if (rx_port == PORTC && rx_pinNumber == 11) {
 8003bc8:	687b      	ldr	r3, [r7, #4]
 8003bca:	4a1c      	ldr	r2, [pc, #112]	; (8003c3c <USART_PIN_CONFIG+0x220>)
 8003bcc:	4293      	cmp	r3, r2
 8003bce:	d109      	bne.n	8003be4 <USART_PIN_CONFIG+0x1c8>
 8003bd0:	69bb      	ldr	r3, [r7, #24]
 8003bd2:	2b0b      	cmp	r3, #11
 8003bd4:	d106      	bne.n	8003be4 <USART_PIN_CONFIG+0x1c8>
			gpio_altfn(rx_port, rx_pinNumber, USART3_RX_PC11);
 8003bd6:	69b9      	ldr	r1, [r7, #24]
 8003bd8:	687b      	ldr	r3, [r7, #4]
 8003bda:	2201      	movs	r2, #1
 8003bdc:	0018      	movs	r0, r3
 8003bde:	f7ff fb32 	bl	8003246 <gpio_altfn>
 8003be2:	e01e      	b.n	8003c22 <USART_PIN_CONFIG+0x206>
		} else if (rx_port == PORTB && rx_pinNumber == 11) {
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	4a12      	ldr	r2, [pc, #72]	; (8003c30 <USART_PIN_CONFIG+0x214>)
 8003be8:	4293      	cmp	r3, r2
 8003bea:	d11a      	bne.n	8003c22 <USART_PIN_CONFIG+0x206>
 8003bec:	69bb      	ldr	r3, [r7, #24]
 8003bee:	2b0b      	cmp	r3, #11
 8003bf0:	d117      	bne.n	8003c22 <USART_PIN_CONFIG+0x206>
			gpio_altfn(rx_port, rx_pinNumber, USART3_RX_PB11);
 8003bf2:	69b9      	ldr	r1, [r7, #24]
 8003bf4:	687b      	ldr	r3, [r7, #4]
 8003bf6:	2204      	movs	r2, #4
 8003bf8:	0018      	movs	r0, r3
 8003bfa:	f7ff fb24 	bl	8003246 <gpio_altfn>
}
 8003bfe:	e010      	b.n	8003c22 <USART_PIN_CONFIG+0x206>
	} else if (usart == USART4) {
 8003c00:	68fb      	ldr	r3, [r7, #12]
 8003c02:	4a0f      	ldr	r2, [pc, #60]	; (8003c40 <USART_PIN_CONFIG+0x224>)
 8003c04:	4293      	cmp	r3, r2
 8003c06:	d10c      	bne.n	8003c22 <USART_PIN_CONFIG+0x206>
		gpio_altfn(tx_port, tx_pinNumber, USART4_TX_PA0);
 8003c08:	6839      	ldr	r1, [r7, #0]
 8003c0a:	68bb      	ldr	r3, [r7, #8]
 8003c0c:	2204      	movs	r2, #4
 8003c0e:	0018      	movs	r0, r3
 8003c10:	f7ff fb19 	bl	8003246 <gpio_altfn>
		gpio_altfn(rx_port, rx_pinNumber, USART4_RX_PA1);
 8003c14:	69b9      	ldr	r1, [r7, #24]
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	2204      	movs	r2, #4
 8003c1a:	0018      	movs	r0, r3
 8003c1c:	f7ff fb13 	bl	8003246 <gpio_altfn>
}
 8003c20:	e7ff      	b.n	8003c22 <USART_PIN_CONFIG+0x206>
 8003c22:	46c0      	nop			; (mov r8, r8)
 8003c24:	46bd      	mov	sp, r7
 8003c26:	b004      	add	sp, #16
 8003c28:	bd80      	pop	{r7, pc}
 8003c2a:	46c0      	nop			; (mov r8, r8)
 8003c2c:	40013800 	.word	0x40013800
 8003c30:	48000400 	.word	0x48000400
 8003c34:	40004400 	.word	0x40004400
 8003c38:	40004800 	.word	0x40004800
 8003c3c:	48000800 	.word	0x48000800
 8003c40:	40004c00 	.word	0x40004c00

08003c44 <USART_BDR_SEL>:

void USART_BDR_SEL(USART_TypeDef *usart, uint32_t bd_rate) {
 8003c44:	b580      	push	{r7, lr}
 8003c46:	b084      	sub	sp, #16
 8003c48:	af00      	add	r7, sp, #0
 8003c4a:	6078      	str	r0, [r7, #4]
 8003c4c:	6039      	str	r1, [r7, #0]

//==============================================================//
// clkPer / (baudR x 16) = 48MHz / (9600 x 16) = 312.5 = 1388   //
//==============================================================//
	uint32_t baud = (uint32_t) (SystemCoreClock / bd_rate);
 8003c4e:	4b09      	ldr	r3, [pc, #36]	; (8003c74 <USART_BDR_SEL+0x30>)
 8003c50:	681b      	ldr	r3, [r3, #0]
 8003c52:	6839      	ldr	r1, [r7, #0]
 8003c54:	0018      	movs	r0, r3
 8003c56:	f7fc fa73 	bl	8000140 <__udivsi3>
 8003c5a:	0003      	movs	r3, r0
 8003c5c:	60fb      	str	r3, [r7, #12]
	usart->BRR |= baud;
 8003c5e:	687b      	ldr	r3, [r7, #4]
 8003c60:	68da      	ldr	r2, [r3, #12]
 8003c62:	68fb      	ldr	r3, [r7, #12]
 8003c64:	431a      	orrs	r2, r3
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	60da      	str	r2, [r3, #12]
}
 8003c6a:	46c0      	nop			; (mov r8, r8)
 8003c6c:	46bd      	mov	sp, r7
 8003c6e:	b004      	add	sp, #16
 8003c70:	bd80      	pop	{r7, pc}
 8003c72:	46c0      	nop			; (mov r8, r8)
 8003c74:	20000000 	.word	0x20000000

08003c78 <USART_WRITE>:

/* Write a character to USART1 */
BML_StatusTypeDef USART_WRITE(USART_TypeDef *usart, uint8_t *ch, uint32_t len, uint16_t timeout) {
 8003c78:	b580      	push	{r7, lr}
 8003c7a:	b086      	sub	sp, #24
 8003c7c:	af00      	add	r7, sp, #0
 8003c7e:	60f8      	str	r0, [r7, #12]
 8003c80:	60b9      	str	r1, [r7, #8]
 8003c82:	607a      	str	r2, [r7, #4]
 8003c84:	001a      	movs	r2, r3
 8003c86:	1cbb      	adds	r3, r7, #2
 8003c88:	801a      	strh	r2, [r3, #0]
	uint16_t i = timeout;
 8003c8a:	2314      	movs	r3, #20
 8003c8c:	18fb      	adds	r3, r7, r3
 8003c8e:	1cba      	adds	r2, r7, #2
 8003c90:	8812      	ldrh	r2, [r2, #0]
 8003c92:	801a      	strh	r2, [r3, #0]
	for (uint8_t i = 0; i < len; i++) {
 8003c94:	2317      	movs	r3, #23
 8003c96:	18fb      	adds	r3, r7, r3
 8003c98:	2200      	movs	r2, #0
 8003c9a:	701a      	strb	r2, [r3, #0]
 8003c9c:	e01c      	b.n	8003cd8 <USART_WRITE+0x60>
		if (len == 1) {
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	2b01      	cmp	r3, #1
 8003ca2:	d104      	bne.n	8003cae <USART_WRITE+0x36>
			usart->TDR = ch;
 8003ca4:	68bb      	ldr	r3, [r7, #8]
 8003ca6:	b29a      	uxth	r2, r3
 8003ca8:	68fb      	ldr	r3, [r7, #12]
 8003caa:	851a      	strh	r2, [r3, #40]	; 0x28
 8003cac:	e008      	b.n	8003cc0 <USART_WRITE+0x48>
		} else {
			usart->TDR = ch[i];
 8003cae:	2317      	movs	r3, #23
 8003cb0:	18fb      	adds	r3, r7, r3
 8003cb2:	781b      	ldrb	r3, [r3, #0]
 8003cb4:	68ba      	ldr	r2, [r7, #8]
 8003cb6:	18d3      	adds	r3, r2, r3
 8003cb8:	781b      	ldrb	r3, [r3, #0]
 8003cba:	b29a      	uxth	r2, r3
 8003cbc:	68fb      	ldr	r3, [r7, #12]
 8003cbe:	851a      	strh	r2, [r3, #40]	; 0x28
		}
		while (!(usart->ISR & USART_ISR_TXE)){
 8003cc0:	46c0      	nop			; (mov r8, r8)
 8003cc2:	68fb      	ldr	r3, [r7, #12]
 8003cc4:	69db      	ldr	r3, [r3, #28]
 8003cc6:	2280      	movs	r2, #128	; 0x80
 8003cc8:	4013      	ands	r3, r2
 8003cca:	d0fa      	beq.n	8003cc2 <USART_WRITE+0x4a>
	for (uint8_t i = 0; i < len; i++) {
 8003ccc:	2117      	movs	r1, #23
 8003cce:	187b      	adds	r3, r7, r1
 8003cd0:	781a      	ldrb	r2, [r3, #0]
 8003cd2:	187b      	adds	r3, r7, r1
 8003cd4:	3201      	adds	r2, #1
 8003cd6:	701a      	strb	r2, [r3, #0]
 8003cd8:	2317      	movs	r3, #23
 8003cda:	18fb      	adds	r3, r7, r3
 8003cdc:	781b      	ldrb	r3, [r3, #0]
 8003cde:	687a      	ldr	r2, [r7, #4]
 8003ce0:	429a      	cmp	r2, r3
 8003ce2:	d8dc      	bhi.n	8003c9e <USART_WRITE+0x26>
//			if(i <= 0){
//				return BML_TIMEOUT;
//			}
		}
	}
	return BML_OK;
 8003ce4:	2300      	movs	r3, #0
}
 8003ce6:	0018      	movs	r0, r3
 8003ce8:	46bd      	mov	sp, r7
 8003cea:	b006      	add	sp, #24
 8003cec:	bd80      	pop	{r7, pc}
	...

08003cf0 <print>:
	return chr;
}

//******************************* UART SERIAL PRINTING ***************************************//

void print(const char *fmt, ...) {
 8003cf0:	b40f      	push	{r0, r1, r2, r3}
 8003cf2:	b580      	push	{r7, lr}
 8003cf4:	b082      	sub	sp, #8
 8003cf6:	af00      	add	r7, sp, #0
	static char buffer[256];
	va_list args;
	va_start(args, fmt);
 8003cf8:	2314      	movs	r3, #20
 8003cfa:	18fb      	adds	r3, r7, r3
 8003cfc:	603b      	str	r3, [r7, #0]
	vsnprintf(buffer, sizeof(buffer), fmt, args);
 8003cfe:	683b      	ldr	r3, [r7, #0]
 8003d00:	693a      	ldr	r2, [r7, #16]
 8003d02:	2180      	movs	r1, #128	; 0x80
 8003d04:	0049      	lsls	r1, r1, #1
 8003d06:	480c      	ldr	r0, [pc, #48]	; (8003d38 <print+0x48>)
 8003d08:	f000 ffac 	bl	8004c64 <vsniprintf>
	va_end(args);

	uint16_t len = strlen(buffer);
 8003d0c:	4b0a      	ldr	r3, [pc, #40]	; (8003d38 <print+0x48>)
 8003d0e:	0018      	movs	r0, r3
 8003d10:	f7fc f9fa 	bl	8000108 <strlen>
 8003d14:	0002      	movs	r2, r0
 8003d16:	1dbb      	adds	r3, r7, #6
 8003d18:	801a      	strh	r2, [r3, #0]
	USART_WRITE(UART_TYPE, buffer, len, 1000);
 8003d1a:	1dbb      	adds	r3, r7, #6
 8003d1c:	881a      	ldrh	r2, [r3, #0]
 8003d1e:	23fa      	movs	r3, #250	; 0xfa
 8003d20:	009b      	lsls	r3, r3, #2
 8003d22:	4905      	ldr	r1, [pc, #20]	; (8003d38 <print+0x48>)
 8003d24:	4805      	ldr	r0, [pc, #20]	; (8003d3c <print+0x4c>)
 8003d26:	f7ff ffa7 	bl	8003c78 <USART_WRITE>

}
 8003d2a:	46c0      	nop			; (mov r8, r8)
 8003d2c:	46bd      	mov	sp, r7
 8003d2e:	b002      	add	sp, #8
 8003d30:	bc80      	pop	{r7}
 8003d32:	bc08      	pop	{r3}
 8003d34:	b004      	add	sp, #16
 8003d36:	4718      	bx	r3
 8003d38:	2000024c 	.word	0x2000024c
 8003d3c:	40004400 	.word	0x40004400

08003d40 <uart_print_config>:
	USART_WRITE(UART_TYPE, buffer, len, 100);
	USART_WRITE(UART_TYPE, '\n', 1, 100);

}

void uart_print_config(uint32_t baudRate) {
 8003d40:	b580      	push	{r7, lr}
 8003d42:	b084      	sub	sp, #16
 8003d44:	af02      	add	r7, sp, #8
 8003d46:	6078      	str	r0, [r7, #4]
	USART_INIT(UART_TYPE, UART_TX_PORT, UART_RX_PORT, UART_TX_PIN, UART_RX_PIN, baudRate);
 8003d48:	2390      	movs	r3, #144	; 0x90
 8003d4a:	05da      	lsls	r2, r3, #23
 8003d4c:	2390      	movs	r3, #144	; 0x90
 8003d4e:	05d9      	lsls	r1, r3, #23
 8003d50:	4805      	ldr	r0, [pc, #20]	; (8003d68 <uart_print_config+0x28>)
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	9301      	str	r3, [sp, #4]
 8003d56:	2303      	movs	r3, #3
 8003d58:	9300      	str	r3, [sp, #0]
 8003d5a:	2302      	movs	r3, #2
 8003d5c:	f7ff fdf8 	bl	8003950 <USART_INIT>
}
 8003d60:	46c0      	nop			; (mov r8, r8)
 8003d62:	46bd      	mov	sp, r7
 8003d64:	b002      	add	sp, #8
 8003d66:	bd80      	pop	{r7, pc}
 8003d68:	40004400 	.word	0x40004400

08003d6c <rb_size>:
rb_data_type        rb_data_at(uint16_t index) ;

/**
 * Returns how many elements are actually stored in the buffer.
 */
static uint16_t     inline rb_size(void) { return( buf_count ) ; }
 8003d6c:	b580      	push	{r7, lr}
 8003d6e:	af00      	add	r7, sp, #0
 8003d70:	4b02      	ldr	r3, [pc, #8]	; (8003d7c <rb_size+0x10>)
 8003d72:	881b      	ldrh	r3, [r3, #0]
 8003d74:	0018      	movs	r0, r3
 8003d76:	46bd      	mov	sp, r7
 8003d78:	bd80      	pop	{r7, pc}
 8003d7a:	46c0      	nop			; (mov r8, r8)
 8003d7c:	2000038c 	.word	0x2000038c

08003d80 <user_i2cConfig>:
 *      Author: hp
 */

#include "MAX30100.h"

BML_StatusTypeDef user_i2cConfig(void) {
 8003d80:	b580      	push	{r7, lr}
 8003d82:	b082      	sub	sp, #8
 8003d84:	af02      	add	r7, sp, #8
	gpio_config(SCL_PORT, SCL_PIN, ALT_MODE, HIGH_SPEED, EN_PU, OD);
 8003d86:	4818      	ldr	r0, [pc, #96]	; (8003de8 <user_i2cConfig+0x68>)
 8003d88:	2301      	movs	r3, #1
 8003d8a:	9301      	str	r3, [sp, #4]
 8003d8c:	2301      	movs	r3, #1
 8003d8e:	9300      	str	r3, [sp, #0]
 8003d90:	2302      	movs	r3, #2
 8003d92:	2202      	movs	r2, #2
 8003d94:	2108      	movs	r1, #8
 8003d96:	f7ff f98f 	bl	80030b8 <gpio_config>
	gpio_config(SDA_PORT, SDA_PIN, ALT_MODE, HIGH_SPEED, EN_PU, OD);
 8003d9a:	4813      	ldr	r0, [pc, #76]	; (8003de8 <user_i2cConfig+0x68>)
 8003d9c:	2301      	movs	r3, #1
 8003d9e:	9301      	str	r3, [sp, #4]
 8003da0:	2301      	movs	r3, #1
 8003da2:	9300      	str	r3, [sp, #0]
 8003da4:	2302      	movs	r3, #2
 8003da6:	2202      	movs	r2, #2
 8003da8:	2109      	movs	r1, #9
 8003daa:	f7ff f985 	bl	80030b8 <gpio_config>

	gpio_altfn(SCL_PORT, SCL_PIN, I2C1_SCL_PB8);
 8003dae:	4b0e      	ldr	r3, [pc, #56]	; (8003de8 <user_i2cConfig+0x68>)
 8003db0:	2201      	movs	r2, #1
 8003db2:	2108      	movs	r1, #8
 8003db4:	0018      	movs	r0, r3
 8003db6:	f7ff fa46 	bl	8003246 <gpio_altfn>
	gpio_altfn(SDA_PORT, SDA_PIN, I2C1_SDA_PB9);
 8003dba:	4b0b      	ldr	r3, [pc, #44]	; (8003de8 <user_i2cConfig+0x68>)
 8003dbc:	2201      	movs	r2, #1
 8003dbe:	2109      	movs	r1, #9
 8003dc0:	0018      	movs	r0, r3
 8003dc2:	f7ff fa40 	bl	8003246 <gpio_altfn>

	I2C_INIT(_MAX30100_I2C, _MAX30100_I2C_SPEED);
 8003dc6:	4a09      	ldr	r2, [pc, #36]	; (8003dec <user_i2cConfig+0x6c>)
 8003dc8:	4b09      	ldr	r3, [pc, #36]	; (8003df0 <user_i2cConfig+0x70>)
 8003dca:	0011      	movs	r1, r2
 8003dcc:	0018      	movs	r0, r3
 8003dce:	f7ff fa7b 	bl	80032c8 <I2C_INIT>

	return I2C_DeviceReady(I2C1, _MAX30100_I2C_ADDRESS, 1000);
 8003dd2:	23fa      	movs	r3, #250	; 0xfa
 8003dd4:	009b      	lsls	r3, r3, #2
 8003dd6:	4806      	ldr	r0, [pc, #24]	; (8003df0 <user_i2cConfig+0x70>)
 8003dd8:	001a      	movs	r2, r3
 8003dda:	2157      	movs	r1, #87	; 0x57
 8003ddc:	f7ff fab0 	bl	8003340 <I2C_DeviceReady>
 8003de0:	0003      	movs	r3, r0
}
 8003de2:	0018      	movs	r0, r3
 8003de4:	46bd      	mov	sp, r7
 8003de6:	bd80      	pop	{r7, pc}
 8003de8:	48000400 	.word	0x48000400
 8003dec:	2000090e 	.word	0x2000090e
 8003df0:	40005400 	.word	0x40005400

08003df4 <MAX30100_begin>:

BML_StatusTypeDef MAX30100_begin(void) {
 8003df4:	b580      	push	{r7, lr}
 8003df6:	af00      	add	r7, sp, #0
	if (user_i2cConfig() != BML_OK) {
 8003df8:	f7ff ffc2 	bl	8003d80 <user_i2cConfig>
 8003dfc:	1e03      	subs	r3, r0, #0
 8003dfe:	d001      	beq.n	8003e04 <MAX30100_begin+0x10>
		return BML_ERROR;
 8003e00:	2301      	movs	r3, #1
 8003e02:	e02b      	b.n	8003e5c <MAX30100_begin+0x68>
	}

	if (MAX30100_getPartId() != EXPECTED_PART_ID) {
 8003e04:	f000 f88c 	bl	8003f20 <MAX30100_getPartId>
 8003e08:	0003      	movs	r3, r0
 8003e0a:	2b11      	cmp	r3, #17
 8003e0c:	d001      	beq.n	8003e12 <MAX30100_begin+0x1e>
		return BML_ERROR;
 8003e0e:	2301      	movs	r3, #1
 8003e10:	e024      	b.n	8003e5c <MAX30100_begin+0x68>
	}

	if (MAX30100_setMode(DEFAULT_MODE) != BML_OK) {
 8003e12:	2002      	movs	r0, #2
 8003e14:	f000 f88d 	bl	8003f32 <MAX30100_setMode>
 8003e18:	1e03      	subs	r3, r0, #0
 8003e1a:	d001      	beq.n	8003e20 <MAX30100_begin+0x2c>
		return BML_ERROR;
 8003e1c:	2301      	movs	r3, #1
 8003e1e:	e01d      	b.n	8003e5c <MAX30100_begin+0x68>
	}
	if (MAX30100_setLedsPulseWidth(DEFAULT_PULSE_WIDTH) != BML_OK) {
 8003e20:	2003      	movs	r0, #3
 8003e22:	f000 f897 	bl	8003f54 <MAX30100_setLedsPulseWidth>
 8003e26:	1e03      	subs	r3, r0, #0
 8003e28:	d001      	beq.n	8003e2e <MAX30100_begin+0x3a>
		return BML_ERROR;
 8003e2a:	2301      	movs	r3, #1
 8003e2c:	e016      	b.n	8003e5c <MAX30100_begin+0x68>
	}
	if (MAX30100_setSamplingRate(DEFAULT_SAMPLING_RATE) != BML_OK) {
 8003e2e:	2001      	movs	r0, #1
 8003e30:	f000 f8b2 	bl	8003f98 <MAX30100_setSamplingRate>
 8003e34:	1e03      	subs	r3, r0, #0
 8003e36:	d001      	beq.n	8003e3c <MAX30100_begin+0x48>
		return BML_ERROR;
 8003e38:	2301      	movs	r3, #1
 8003e3a:	e00f      	b.n	8003e5c <MAX30100_begin+0x68>
	}
	if (MAX30100_setLedsCurrent(DEFAULT_IR_LED_CURRENT, DEFAULT_RED_LED_CURRENT)
 8003e3c:	210f      	movs	r1, #15
 8003e3e:	200f      	movs	r0, #15
 8003e40:	f000 f8cd 	bl	8003fde <MAX30100_setLedsCurrent>
 8003e44:	1e03      	subs	r3, r0, #0
 8003e46:	d001      	beq.n	8003e4c <MAX30100_begin+0x58>
			!= BML_OK) {
		return BML_ERROR;
 8003e48:	2301      	movs	r3, #1
 8003e4a:	e007      	b.n	8003e5c <MAX30100_begin+0x68>
	}
	if (MAX30100_setHighresModeEnabled(true) != BML_OK) {
 8003e4c:	2001      	movs	r0, #1
 8003e4e:	f000 f8e2 	bl	8004016 <MAX30100_setHighresModeEnabled>
 8003e52:	1e03      	subs	r3, r0, #0
 8003e54:	d001      	beq.n	8003e5a <MAX30100_begin+0x66>
		return BML_ERROR;
 8003e56:	2301      	movs	r3, #1
 8003e58:	e000      	b.n	8003e5c <MAX30100_begin+0x68>
	}
	return BML_OK;
 8003e5a:	2300      	movs	r3, #0
}
 8003e5c:	0018      	movs	r0, r3
 8003e5e:	46bd      	mov	sp, r7
 8003e60:	bd80      	pop	{r7, pc}
	...

08003e64 <MAX30100_readRegister>:

uint8_t MAX30100_readRegister(uint8_t address) {
 8003e64:	b580      	push	{r7, lr}
 8003e66:	b086      	sub	sp, #24
 8003e68:	af02      	add	r7, sp, #8
 8003e6a:	0002      	movs	r2, r0
 8003e6c:	1dfb      	adds	r3, r7, #7
 8003e6e:	701a      	strb	r2, [r3, #0]
	uint8_t rdata = 0;
 8003e70:	210f      	movs	r1, #15
 8003e72:	187b      	adds	r3, r7, r1
 8003e74:	2200      	movs	r2, #0
 8003e76:	701a      	strb	r2, [r3, #0]
	if (I2C_MasterByteRead(_MAX30100_I2C, _MAX30100_I2C_ADDRESS, address,
 8003e78:	1879      	adds	r1, r7, r1
 8003e7a:	1dfb      	adds	r3, r7, #7
 8003e7c:	781a      	ldrb	r2, [r3, #0]
 8003e7e:	4809      	ldr	r0, [pc, #36]	; (8003ea4 <MAX30100_readRegister+0x40>)
 8003e80:	2364      	movs	r3, #100	; 0x64
 8003e82:	9300      	str	r3, [sp, #0]
 8003e84:	000b      	movs	r3, r1
 8003e86:	2157      	movs	r1, #87	; 0x57
 8003e88:	f7ff fb5c 	bl	8003544 <I2C_MasterByteRead>
 8003e8c:	1e03      	subs	r3, r0, #0
 8003e8e:	d001      	beq.n	8003e94 <MAX30100_readRegister+0x30>
			&rdata, 100) != BML_OK) {
		return 255;
 8003e90:	23ff      	movs	r3, #255	; 0xff
 8003e92:	e002      	b.n	8003e9a <MAX30100_readRegister+0x36>
	}
	return rdata;
 8003e94:	230f      	movs	r3, #15
 8003e96:	18fb      	adds	r3, r7, r3
 8003e98:	781b      	ldrb	r3, [r3, #0]
}
 8003e9a:	0018      	movs	r0, r3
 8003e9c:	46bd      	mov	sp, r7
 8003e9e:	b004      	add	sp, #16
 8003ea0:	bd80      	pop	{r7, pc}
 8003ea2:	46c0      	nop			; (mov r8, r8)
 8003ea4:	40005400 	.word	0x40005400

08003ea8 <MAX30100_writeRegister>:

BML_StatusTypeDef MAX30100_writeRegister(uint8_t address, uint8_t data) {
 8003ea8:	b580      	push	{r7, lr}
 8003eaa:	b084      	sub	sp, #16
 8003eac:	af02      	add	r7, sp, #8
 8003eae:	0002      	movs	r2, r0
 8003eb0:	1dfb      	adds	r3, r7, #7
 8003eb2:	701a      	strb	r2, [r3, #0]
 8003eb4:	1dbb      	adds	r3, r7, #6
 8003eb6:	1c0a      	adds	r2, r1, #0
 8003eb8:	701a      	strb	r2, [r3, #0]
	return I2C_MasterByteWrite(_MAX30100_I2C, _MAX30100_I2C_ADDRESS, address,
 8003eba:	1dbb      	adds	r3, r7, #6
 8003ebc:	7819      	ldrb	r1, [r3, #0]
 8003ebe:	1dfb      	adds	r3, r7, #7
 8003ec0:	781a      	ldrb	r2, [r3, #0]
 8003ec2:	4806      	ldr	r0, [pc, #24]	; (8003edc <MAX30100_writeRegister+0x34>)
 8003ec4:	2364      	movs	r3, #100	; 0x64
 8003ec6:	9300      	str	r3, [sp, #0]
 8003ec8:	000b      	movs	r3, r1
 8003eca:	2157      	movs	r1, #87	; 0x57
 8003ecc:	f7ff fa98 	bl	8003400 <I2C_MasterByteWrite>
 8003ed0:	0003      	movs	r3, r0
			data, 100);
}
 8003ed2:	0018      	movs	r0, r3
 8003ed4:	46bd      	mov	sp, r7
 8003ed6:	b002      	add	sp, #8
 8003ed8:	bd80      	pop	{r7, pc}
 8003eda:	46c0      	nop			; (mov r8, r8)
 8003edc:	40005400 	.word	0x40005400

08003ee0 <MAX30100_burstRead>:

BML_StatusTypeDef MAX30100_burstRead(uint8_t baseAddress, uint8_t *buffer,
		uint8_t length) {
 8003ee0:	b580      	push	{r7, lr}
 8003ee2:	b084      	sub	sp, #16
 8003ee4:	af02      	add	r7, sp, #8
 8003ee6:	6039      	str	r1, [r7, #0]
 8003ee8:	0011      	movs	r1, r2
 8003eea:	1dfb      	adds	r3, r7, #7
 8003eec:	1c02      	adds	r2, r0, #0
 8003eee:	701a      	strb	r2, [r3, #0]
 8003ef0:	1dbb      	adds	r3, r7, #6
 8003ef2:	1c0a      	adds	r2, r1, #0
 8003ef4:	701a      	strb	r2, [r3, #0]
	return I2C_MasterMultiRead(_MAX30100_I2C, _MAX30100_I2C_ADDRESS,
 8003ef6:	1dbb      	adds	r3, r7, #6
 8003ef8:	7819      	ldrb	r1, [r3, #0]
 8003efa:	1dfb      	adds	r3, r7, #7
 8003efc:	781a      	ldrb	r2, [r3, #0]
 8003efe:	4807      	ldr	r0, [pc, #28]	; (8003f1c <MAX30100_burstRead+0x3c>)
 8003f00:	2364      	movs	r3, #100	; 0x64
 8003f02:	9301      	str	r3, [sp, #4]
 8003f04:	683b      	ldr	r3, [r7, #0]
 8003f06:	9300      	str	r3, [sp, #0]
 8003f08:	000b      	movs	r3, r1
 8003f0a:	2157      	movs	r1, #87	; 0x57
 8003f0c:	f7ff fbe6 	bl	80036dc <I2C_MasterMultiRead>
 8003f10:	0003      	movs	r3, r0
			baseAddress, length, buffer, 100);
}
 8003f12:	0018      	movs	r0, r3
 8003f14:	46bd      	mov	sp, r7
 8003f16:	b002      	add	sp, #8
 8003f18:	bd80      	pop	{r7, pc}
 8003f1a:	46c0      	nop			; (mov r8, r8)
 8003f1c:	40005400 	.word	0x40005400

08003f20 <MAX30100_getPartId>:

uint8_t MAX30100_getPartId() {
 8003f20:	b580      	push	{r7, lr}
 8003f22:	af00      	add	r7, sp, #0
	return MAX30100_readRegister(0xff);
 8003f24:	20ff      	movs	r0, #255	; 0xff
 8003f26:	f7ff ff9d 	bl	8003e64 <MAX30100_readRegister>
 8003f2a:	0003      	movs	r3, r0
}
 8003f2c:	0018      	movs	r0, r3
 8003f2e:	46bd      	mov	sp, r7
 8003f30:	bd80      	pop	{r7, pc}

08003f32 <MAX30100_setMode>:

BML_StatusTypeDef MAX30100_setMode(Mode mode) {
 8003f32:	b580      	push	{r7, lr}
 8003f34:	b082      	sub	sp, #8
 8003f36:	af00      	add	r7, sp, #0
 8003f38:	0002      	movs	r2, r0
 8003f3a:	1dfb      	adds	r3, r7, #7
 8003f3c:	701a      	strb	r2, [r3, #0]
	return MAX30100_writeRegister(MAX30100_REG_MODE_CONFIGURATION, mode);
 8003f3e:	1dfb      	adds	r3, r7, #7
 8003f40:	781b      	ldrb	r3, [r3, #0]
 8003f42:	0019      	movs	r1, r3
 8003f44:	2006      	movs	r0, #6
 8003f46:	f7ff ffaf 	bl	8003ea8 <MAX30100_writeRegister>
 8003f4a:	0003      	movs	r3, r0
}
 8003f4c:	0018      	movs	r0, r3
 8003f4e:	46bd      	mov	sp, r7
 8003f50:	b002      	add	sp, #8
 8003f52:	bd80      	pop	{r7, pc}

08003f54 <MAX30100_setLedsPulseWidth>:

BML_StatusTypeDef MAX30100_setLedsPulseWidth(LEDPulseWidth ledPulseWidth) {
 8003f54:	b5b0      	push	{r4, r5, r7, lr}
 8003f56:	b084      	sub	sp, #16
 8003f58:	af00      	add	r7, sp, #0
 8003f5a:	0002      	movs	r2, r0
 8003f5c:	1dfb      	adds	r3, r7, #7
 8003f5e:	701a      	strb	r2, [r3, #0]
	uint8_t previous = MAX30100_readRegister(MAX30100_REG_SPO2_CONFIGURATION);
 8003f60:	250f      	movs	r5, #15
 8003f62:	197c      	adds	r4, r7, r5
 8003f64:	2007      	movs	r0, #7
 8003f66:	f7ff ff7d 	bl	8003e64 <MAX30100_readRegister>
 8003f6a:	0003      	movs	r3, r0
 8003f6c:	7023      	strb	r3, [r4, #0]
	return MAX30100_writeRegister(MAX30100_REG_SPO2_CONFIGURATION,
			(previous & 0xfc) | ledPulseWidth);
 8003f6e:	197b      	adds	r3, r7, r5
 8003f70:	781b      	ldrb	r3, [r3, #0]
 8003f72:	b25b      	sxtb	r3, r3
 8003f74:	2203      	movs	r2, #3
 8003f76:	4393      	bics	r3, r2
 8003f78:	b25a      	sxtb	r2, r3
 8003f7a:	1dfb      	adds	r3, r7, #7
 8003f7c:	781b      	ldrb	r3, [r3, #0]
 8003f7e:	b25b      	sxtb	r3, r3
 8003f80:	4313      	orrs	r3, r2
 8003f82:	b25b      	sxtb	r3, r3
	return MAX30100_writeRegister(MAX30100_REG_SPO2_CONFIGURATION,
 8003f84:	b2db      	uxtb	r3, r3
 8003f86:	0019      	movs	r1, r3
 8003f88:	2007      	movs	r0, #7
 8003f8a:	f7ff ff8d 	bl	8003ea8 <MAX30100_writeRegister>
 8003f8e:	0003      	movs	r3, r0
}
 8003f90:	0018      	movs	r0, r3
 8003f92:	46bd      	mov	sp, r7
 8003f94:	b004      	add	sp, #16
 8003f96:	bdb0      	pop	{r4, r5, r7, pc}

08003f98 <MAX30100_setSamplingRate>:

BML_StatusTypeDef MAX30100_setSamplingRate(SamplingRate samplingRate) {
 8003f98:	b5b0      	push	{r4, r5, r7, lr}
 8003f9a:	b084      	sub	sp, #16
 8003f9c:	af00      	add	r7, sp, #0
 8003f9e:	0002      	movs	r2, r0
 8003fa0:	1dfb      	adds	r3, r7, #7
 8003fa2:	701a      	strb	r2, [r3, #0]
	uint8_t previous = MAX30100_readRegister(MAX30100_REG_SPO2_CONFIGURATION);
 8003fa4:	250f      	movs	r5, #15
 8003fa6:	197c      	adds	r4, r7, r5
 8003fa8:	2007      	movs	r0, #7
 8003faa:	f7ff ff5b 	bl	8003e64 <MAX30100_readRegister>
 8003fae:	0003      	movs	r3, r0
 8003fb0:	7023      	strb	r3, [r4, #0]
	return MAX30100_writeRegister(MAX30100_REG_SPO2_CONFIGURATION,
			(previous & 0xe3) | (samplingRate << 2));
 8003fb2:	197b      	adds	r3, r7, r5
 8003fb4:	781b      	ldrb	r3, [r3, #0]
 8003fb6:	b25b      	sxtb	r3, r3
 8003fb8:	221c      	movs	r2, #28
 8003fba:	4393      	bics	r3, r2
 8003fbc:	b25a      	sxtb	r2, r3
 8003fbe:	1dfb      	adds	r3, r7, #7
 8003fc0:	781b      	ldrb	r3, [r3, #0]
 8003fc2:	009b      	lsls	r3, r3, #2
 8003fc4:	b25b      	sxtb	r3, r3
 8003fc6:	4313      	orrs	r3, r2
 8003fc8:	b25b      	sxtb	r3, r3
	return MAX30100_writeRegister(MAX30100_REG_SPO2_CONFIGURATION,
 8003fca:	b2db      	uxtb	r3, r3
 8003fcc:	0019      	movs	r1, r3
 8003fce:	2007      	movs	r0, #7
 8003fd0:	f7ff ff6a 	bl	8003ea8 <MAX30100_writeRegister>
 8003fd4:	0003      	movs	r3, r0
}
 8003fd6:	0018      	movs	r0, r3
 8003fd8:	46bd      	mov	sp, r7
 8003fda:	b004      	add	sp, #16
 8003fdc:	bdb0      	pop	{r4, r5, r7, pc}

08003fde <MAX30100_setLedsCurrent>:

BML_StatusTypeDef MAX30100_setLedsCurrent(LEDCurrent irLedCurrent,
		LEDCurrent redLedCurrent) {
 8003fde:	b580      	push	{r7, lr}
 8003fe0:	b082      	sub	sp, #8
 8003fe2:	af00      	add	r7, sp, #0
 8003fe4:	0002      	movs	r2, r0
 8003fe6:	1dfb      	adds	r3, r7, #7
 8003fe8:	701a      	strb	r2, [r3, #0]
 8003fea:	1dbb      	adds	r3, r7, #6
 8003fec:	1c0a      	adds	r2, r1, #0
 8003fee:	701a      	strb	r2, [r3, #0]
	return MAX30100_writeRegister(MAX30100_REG_LED_CONFIGURATION,
			redLedCurrent << 4 | irLedCurrent);
 8003ff0:	1dbb      	adds	r3, r7, #6
 8003ff2:	781b      	ldrb	r3, [r3, #0]
 8003ff4:	011b      	lsls	r3, r3, #4
 8003ff6:	b25a      	sxtb	r2, r3
 8003ff8:	1dfb      	adds	r3, r7, #7
 8003ffa:	781b      	ldrb	r3, [r3, #0]
 8003ffc:	b25b      	sxtb	r3, r3
 8003ffe:	4313      	orrs	r3, r2
 8004000:	b25b      	sxtb	r3, r3
	return MAX30100_writeRegister(MAX30100_REG_LED_CONFIGURATION,
 8004002:	b2db      	uxtb	r3, r3
 8004004:	0019      	movs	r1, r3
 8004006:	2009      	movs	r0, #9
 8004008:	f7ff ff4e 	bl	8003ea8 <MAX30100_writeRegister>
 800400c:	0003      	movs	r3, r0
}
 800400e:	0018      	movs	r0, r3
 8004010:	46bd      	mov	sp, r7
 8004012:	b002      	add	sp, #8
 8004014:	bd80      	pop	{r7, pc}

08004016 <MAX30100_setHighresModeEnabled>:

BML_StatusTypeDef MAX30100_setHighresModeEnabled(bool enabled) {
 8004016:	b5b0      	push	{r4, r5, r7, lr}
 8004018:	b084      	sub	sp, #16
 800401a:	af00      	add	r7, sp, #0
 800401c:	0002      	movs	r2, r0
 800401e:	1dfb      	adds	r3, r7, #7
 8004020:	701a      	strb	r2, [r3, #0]
	uint8_t previous = MAX30100_readRegister(MAX30100_REG_SPO2_CONFIGURATION);
 8004022:	250f      	movs	r5, #15
 8004024:	197c      	adds	r4, r7, r5
 8004026:	2007      	movs	r0, #7
 8004028:	f7ff ff1c 	bl	8003e64 <MAX30100_readRegister>
 800402c:	0003      	movs	r3, r0
 800402e:	7023      	strb	r3, [r4, #0]
	if (enabled) {
 8004030:	1dfb      	adds	r3, r7, #7
 8004032:	781b      	ldrb	r3, [r3, #0]
 8004034:	2b00      	cmp	r3, #0
 8004036:	d00a      	beq.n	800404e <MAX30100_setHighresModeEnabled+0x38>
		return MAX30100_writeRegister(MAX30100_REG_SPO2_CONFIGURATION,
 8004038:	197b      	adds	r3, r7, r5
 800403a:	781b      	ldrb	r3, [r3, #0]
 800403c:	2240      	movs	r2, #64	; 0x40
 800403e:	4313      	orrs	r3, r2
 8004040:	b2db      	uxtb	r3, r3
 8004042:	0019      	movs	r1, r3
 8004044:	2007      	movs	r0, #7
 8004046:	f7ff ff2f 	bl	8003ea8 <MAX30100_writeRegister>
 800404a:	0003      	movs	r3, r0
 800404c:	e00a      	b.n	8004064 <MAX30100_setHighresModeEnabled+0x4e>
				previous | MAX30100_SPC_SPO2_HI_RES_EN);
	} else {
		return MAX30100_writeRegister(MAX30100_REG_SPO2_CONFIGURATION,
 800404e:	230f      	movs	r3, #15
 8004050:	18fb      	adds	r3, r7, r3
 8004052:	781b      	ldrb	r3, [r3, #0]
 8004054:	2240      	movs	r2, #64	; 0x40
 8004056:	4393      	bics	r3, r2
 8004058:	b2db      	uxtb	r3, r3
 800405a:	0019      	movs	r1, r3
 800405c:	2007      	movs	r0, #7
 800405e:	f7ff ff23 	bl	8003ea8 <MAX30100_writeRegister>
 8004062:	0003      	movs	r3, r0
				previous & ~MAX30100_SPC_SPO2_HI_RES_EN);
	}
}
 8004064:	0018      	movs	r0, r3
 8004066:	46bd      	mov	sp, r7
 8004068:	b004      	add	sp, #16
 800406a:	bdb0      	pop	{r4, r5, r7, pc}

0800406c <MAX30100_update>:

BML_StatusTypeDef MAX30100_update() {
 800406c:	b580      	push	{r7, lr}
 800406e:	af00      	add	r7, sp, #0
	return MAX30100_readFifoData();
 8004070:	f000 f848 	bl	8004104 <MAX30100_readFifoData>
 8004074:	0003      	movs	r3, r0
}
 8004076:	0018      	movs	r0, r3
 8004078:	46bd      	mov	sp, r7
 800407a:	bd80      	pop	{r7, pc}

0800407c <MAX30100_getRawValues>:

bool MAX30100_getRawValues(uint16_t *ir, uint16_t *red) {
 800407c:	b590      	push	{r4, r7, lr}
 800407e:	b085      	sub	sp, #20
 8004080:	af00      	add	r7, sp, #0
 8004082:	6078      	str	r0, [r7, #4]
 8004084:	6039      	str	r1, [r7, #0]
	bool result = false;
 8004086:	240f      	movs	r4, #15
 8004088:	193b      	adds	r3, r7, r4
 800408a:	2200      	movs	r2, #0
 800408c:	701a      	strb	r2, [r3, #0]
	rb_data_type data;

	if (rb_size()) {
 800408e:	f7ff fe6d 	bl	8003d6c <rb_size>
 8004092:	1e03      	subs	r3, r0, #0
 8004094:	d011      	beq.n	80040ba <MAX30100_getRawValues+0x3e>
		data = rb_shift();
 8004096:	f000 f8dd 	bl	8004254 <rb_shift>
 800409a:	0003      	movs	r3, r0
 800409c:	001a      	movs	r2, r3
 800409e:	2108      	movs	r1, #8
 80040a0:	187b      	adds	r3, r7, r1
 80040a2:	601a      	str	r2, [r3, #0]
		*ir = data.ir;
 80040a4:	187b      	adds	r3, r7, r1
 80040a6:	881a      	ldrh	r2, [r3, #0]
 80040a8:	687b      	ldr	r3, [r7, #4]
 80040aa:	801a      	strh	r2, [r3, #0]
		*red = data.red;
 80040ac:	187b      	adds	r3, r7, r1
 80040ae:	885a      	ldrh	r2, [r3, #2]
 80040b0:	683b      	ldr	r3, [r7, #0]
 80040b2:	801a      	strh	r2, [r3, #0]
		result = true;
 80040b4:	193b      	adds	r3, r7, r4
 80040b6:	2201      	movs	r2, #1
 80040b8:	701a      	strb	r2, [r3, #0]
	}

	return result;
 80040ba:	230f      	movs	r3, #15
 80040bc:	18fb      	adds	r3, r7, r3
 80040be:	781b      	ldrb	r3, [r3, #0]
}
 80040c0:	0018      	movs	r0, r3
 80040c2:	46bd      	mov	sp, r7
 80040c4:	b005      	add	sp, #20
 80040c6:	bd90      	pop	{r4, r7, pc}

080040c8 <MAX30100_resetFifo>:

BML_StatusTypeDef MAX30100_resetFifo() {
 80040c8:	b580      	push	{r7, lr}
 80040ca:	af00      	add	r7, sp, #0
	if (MAX30100_writeRegister(MAX30100_REG_FIFO_WRITE_POINTER, 0) != BML_OK) {
 80040cc:	2100      	movs	r1, #0
 80040ce:	2002      	movs	r0, #2
 80040d0:	f7ff feea 	bl	8003ea8 <MAX30100_writeRegister>
 80040d4:	1e03      	subs	r3, r0, #0
 80040d6:	d001      	beq.n	80040dc <MAX30100_resetFifo+0x14>
		return BML_ERROR;
 80040d8:	2301      	movs	r3, #1
 80040da:	e010      	b.n	80040fe <MAX30100_resetFifo+0x36>
	}
	if (MAX30100_writeRegister(MAX30100_REG_FIFO_READ_POINTER, 0) != BML_OK) {
 80040dc:	2100      	movs	r1, #0
 80040de:	2004      	movs	r0, #4
 80040e0:	f7ff fee2 	bl	8003ea8 <MAX30100_writeRegister>
 80040e4:	1e03      	subs	r3, r0, #0
 80040e6:	d001      	beq.n	80040ec <MAX30100_resetFifo+0x24>
		return BML_ERROR;
 80040e8:	2301      	movs	r3, #1
 80040ea:	e008      	b.n	80040fe <MAX30100_resetFifo+0x36>
	}
	if (MAX30100_writeRegister(MAX30100_REG_FIFO_OVERFLOW_COUNTER, 0)
 80040ec:	2100      	movs	r1, #0
 80040ee:	2003      	movs	r0, #3
 80040f0:	f7ff feda 	bl	8003ea8 <MAX30100_writeRegister>
 80040f4:	1e03      	subs	r3, r0, #0
 80040f6:	d001      	beq.n	80040fc <MAX30100_resetFifo+0x34>
			!= BML_OK) {
		return BML_ERROR;
 80040f8:	2301      	movs	r3, #1
 80040fa:	e000      	b.n	80040fe <MAX30100_resetFifo+0x36>
	}
	return BML_OK;
 80040fc:	2300      	movs	r3, #0
}
 80040fe:	0018      	movs	r0, r3
 8004100:	46bd      	mov	sp, r7
 8004102:	bd80      	pop	{r7, pc}

08004104 <MAX30100_readFifoData>:

BML_StatusTypeDef MAX30100_readFifoData() {
 8004104:	b590      	push	{r4, r7, lr}
 8004106:	b093      	sub	sp, #76	; 0x4c
 8004108:	af00      	add	r7, sp, #0
	uint8_t buffer[MAX30100_FIFO_DEPTH * 4];
	uint8_t toRead;
	rb_data_type value;

	toRead = (MAX30100_readRegister(MAX30100_REG_FIFO_WRITE_POINTER)
 800410a:	2002      	movs	r0, #2
 800410c:	f7ff feaa 	bl	8003e64 <MAX30100_readRegister>
 8004110:	0003      	movs	r3, r0
 8004112:	001c      	movs	r4, r3
			- MAX30100_readRegister(MAX30100_REG_FIFO_READ_POINTER))
 8004114:	2004      	movs	r0, #4
 8004116:	f7ff fea5 	bl	8003e64 <MAX30100_readRegister>
 800411a:	0003      	movs	r3, r0
			& (MAX30100_FIFO_DEPTH - 1);
 800411c:	1ae3      	subs	r3, r4, r3
 800411e:	b2da      	uxtb	r2, r3
	toRead = (MAX30100_readRegister(MAX30100_REG_FIFO_WRITE_POINTER)
 8004120:	2046      	movs	r0, #70	; 0x46
 8004122:	183b      	adds	r3, r7, r0
 8004124:	210f      	movs	r1, #15
 8004126:	400a      	ands	r2, r1
 8004128:	701a      	strb	r2, [r3, #0]

	if (toRead) {
 800412a:	0002      	movs	r2, r0
 800412c:	18bb      	adds	r3, r7, r2
 800412e:	781b      	ldrb	r3, [r3, #0]
 8004130:	2b00      	cmp	r3, #0
 8004132:	d04c      	beq.n	80041ce <MAX30100_readFifoData+0xca>
		if (MAX30100_burstRead(MAX30100_REG_FIFO_DATA, buffer, 4 * toRead)
 8004134:	18bb      	adds	r3, r7, r2
 8004136:	781b      	ldrb	r3, [r3, #0]
 8004138:	009b      	lsls	r3, r3, #2
 800413a:	b2da      	uxtb	r2, r3
 800413c:	1d3b      	adds	r3, r7, #4
 800413e:	0019      	movs	r1, r3
 8004140:	2005      	movs	r0, #5
 8004142:	f7ff fecd 	bl	8003ee0 <MAX30100_burstRead>
 8004146:	1e03      	subs	r3, r0, #0
 8004148:	d001      	beq.n	800414e <MAX30100_readFifoData+0x4a>
				!= BML_OK) {
			return BML_ERROR;
 800414a:	2301      	movs	r3, #1
 800414c:	e040      	b.n	80041d0 <MAX30100_readFifoData+0xcc>
		}

		for (uint8_t i = 0; i < toRead; ++i) {
 800414e:	2347      	movs	r3, #71	; 0x47
 8004150:	18fb      	adds	r3, r7, r3
 8004152:	2200      	movs	r2, #0
 8004154:	701a      	strb	r2, [r3, #0]
 8004156:	e030      	b.n	80041ba <MAX30100_readFifoData+0xb6>
			// Warning: the values are always left-aligned
			value.ir = (uint16_t) ((buffer[i * 4] << 8) | buffer[i * 4 + 1]);
 8004158:	2447      	movs	r4, #71	; 0x47
 800415a:	193b      	adds	r3, r7, r4
 800415c:	781b      	ldrb	r3, [r3, #0]
 800415e:	009b      	lsls	r3, r3, #2
 8004160:	1d3a      	adds	r2, r7, #4
 8004162:	5cd3      	ldrb	r3, [r2, r3]
 8004164:	021b      	lsls	r3, r3, #8
 8004166:	b21a      	sxth	r2, r3
 8004168:	193b      	adds	r3, r7, r4
 800416a:	781b      	ldrb	r3, [r3, #0]
 800416c:	009b      	lsls	r3, r3, #2
 800416e:	3301      	adds	r3, #1
 8004170:	1d39      	adds	r1, r7, #4
 8004172:	5ccb      	ldrb	r3, [r1, r3]
 8004174:	b21b      	sxth	r3, r3
 8004176:	4313      	orrs	r3, r2
 8004178:	b21b      	sxth	r3, r3
 800417a:	b29a      	uxth	r2, r3
 800417c:	003b      	movs	r3, r7
 800417e:	801a      	strh	r2, [r3, #0]
			value.red =(uint16_t) ((buffer[i * 4 + 2] << 8) | buffer[i * 4 + 3]);
 8004180:	193b      	adds	r3, r7, r4
 8004182:	781b      	ldrb	r3, [r3, #0]
 8004184:	009b      	lsls	r3, r3, #2
 8004186:	3302      	adds	r3, #2
 8004188:	1d3a      	adds	r2, r7, #4
 800418a:	5cd3      	ldrb	r3, [r2, r3]
 800418c:	021b      	lsls	r3, r3, #8
 800418e:	b21a      	sxth	r2, r3
 8004190:	193b      	adds	r3, r7, r4
 8004192:	781b      	ldrb	r3, [r3, #0]
 8004194:	009b      	lsls	r3, r3, #2
 8004196:	3303      	adds	r3, #3
 8004198:	1d39      	adds	r1, r7, #4
 800419a:	5ccb      	ldrb	r3, [r1, r3]
 800419c:	b21b      	sxth	r3, r3
 800419e:	4313      	orrs	r3, r2
 80041a0:	b21b      	sxth	r3, r3
 80041a2:	b29a      	uxth	r2, r3
 80041a4:	003b      	movs	r3, r7
 80041a6:	805a      	strh	r2, [r3, #2]
			rb_push(value);
 80041a8:	003b      	movs	r3, r7
 80041aa:	6818      	ldr	r0, [r3, #0]
 80041ac:	f000 f814 	bl	80041d8 <rb_push>
		for (uint8_t i = 0; i < toRead; ++i) {
 80041b0:	193b      	adds	r3, r7, r4
 80041b2:	193a      	adds	r2, r7, r4
 80041b4:	7812      	ldrb	r2, [r2, #0]
 80041b6:	3201      	adds	r2, #1
 80041b8:	701a      	strb	r2, [r3, #0]
 80041ba:	2347      	movs	r3, #71	; 0x47
 80041bc:	18fa      	adds	r2, r7, r3
 80041be:	2346      	movs	r3, #70	; 0x46
 80041c0:	18fb      	adds	r3, r7, r3
 80041c2:	7812      	ldrb	r2, [r2, #0]
 80041c4:	781b      	ldrb	r3, [r3, #0]
 80041c6:	429a      	cmp	r2, r3
 80041c8:	d3c6      	bcc.n	8004158 <MAX30100_readFifoData+0x54>
		}
		return BML_OK;
 80041ca:	2300      	movs	r3, #0
 80041cc:	e000      	b.n	80041d0 <MAX30100_readFifoData+0xcc>
	}
	return BML_TIMEOUT;
 80041ce:	2303      	movs	r3, #3
}
 80041d0:	0018      	movs	r0, r3
 80041d2:	46bd      	mov	sp, r7
 80041d4:	b013      	add	sp, #76	; 0x4c
 80041d6:	bd90      	pop	{r4, r7, pc}

080041d8 <rb_push>:
/**
 * Add an element to the end of the buffer:
 * @returns: 0 if the addition caused overwriting an existing element.
 */
bool                rb_push(rb_data_type value) 
{
 80041d8:	b590      	push	{r4, r7, lr}
 80041da:	b085      	sub	sp, #20
 80041dc:	af00      	add	r7, sp, #0
 80041de:	1d3b      	adds	r3, r7, #4
 80041e0:	6018      	str	r0, [r3, #0]
    bool result = 1 ;
 80041e2:	240f      	movs	r4, #15
 80041e4:	193b      	adds	r3, r7, r4
 80041e6:	2201      	movs	r2, #1
 80041e8:	701a      	strb	r2, [r3, #0]

    w_index = (w_index + 1) % buf_size ;
 80041ea:	4b15      	ldr	r3, [pc, #84]	; (8004240 <rb_push+0x68>)
 80041ec:	881b      	ldrh	r3, [r3, #0]
 80041ee:	1c5a      	adds	r2, r3, #1
 80041f0:	4b14      	ldr	r3, [pc, #80]	; (8004244 <rb_push+0x6c>)
 80041f2:	881b      	ldrh	r3, [r3, #0]
 80041f4:	0019      	movs	r1, r3
 80041f6:	0010      	movs	r0, r2
 80041f8:	f7fc f912 	bl	8000420 <__aeabi_idivmod>
 80041fc:	000b      	movs	r3, r1
 80041fe:	b29a      	uxth	r2, r3
 8004200:	4b0f      	ldr	r3, [pc, #60]	; (8004240 <rb_push+0x68>)
 8004202:	801a      	strh	r2, [r3, #0]
    if (w_index == r_index) {
 8004204:	4b0e      	ldr	r3, [pc, #56]	; (8004240 <rb_push+0x68>)
 8004206:	881a      	ldrh	r2, [r3, #0]
 8004208:	4b0f      	ldr	r3, [pc, #60]	; (8004248 <rb_push+0x70>)
 800420a:	881b      	ldrh	r3, [r3, #0]
 800420c:	429a      	cmp	r2, r3
 800420e:	d102      	bne.n	8004216 <rb_push+0x3e>
        result = 0 ;
 8004210:	193b      	adds	r3, r7, r4
 8004212:	2200      	movs	r2, #0
 8004214:	701a      	strb	r2, [r3, #0]
    }

    ring_buffer[w_index] = value ;
 8004216:	4b0a      	ldr	r3, [pc, #40]	; (8004240 <rb_push+0x68>)
 8004218:	881b      	ldrh	r3, [r3, #0]
 800421a:	4a0c      	ldr	r2, [pc, #48]	; (800424c <rb_push+0x74>)
 800421c:	0099      	lsls	r1, r3, #2
 800421e:	1d3b      	adds	r3, r7, #4
 8004220:	681b      	ldr	r3, [r3, #0]
 8004222:	508b      	str	r3, [r1, r2]
    buf_count++ ;
 8004224:	4b0a      	ldr	r3, [pc, #40]	; (8004250 <rb_push+0x78>)
 8004226:	881b      	ldrh	r3, [r3, #0]
 8004228:	3301      	adds	r3, #1
 800422a:	b29a      	uxth	r2, r3
 800422c:	4b08      	ldr	r3, [pc, #32]	; (8004250 <rb_push+0x78>)
 800422e:	801a      	strh	r2, [r3, #0]
    
    return( result ) ;
 8004230:	230f      	movs	r3, #15
 8004232:	18fb      	adds	r3, r7, r3
 8004234:	781b      	ldrb	r3, [r3, #0]
}
 8004236:	0018      	movs	r0, r3
 8004238:	46bd      	mov	sp, r7
 800423a:	b005      	add	sp, #20
 800423c:	bd90      	pop	{r4, r7, pc}
 800423e:	46c0      	nop			; (mov r8, r8)
 8004240:	20000390 	.word	0x20000390
 8004244:	2000004c 	.word	0x2000004c
 8004248:	2000038e 	.word	0x2000038e
 800424c:	2000034c 	.word	0x2000034c
 8004250:	2000038c 	.word	0x2000038c

08004254 <rb_shift>:

/**
 * Removes an element from the beginning of the buffer.
*/
rb_data_type        rb_shift(void) 
{
 8004254:	b580      	push	{r7, lr}
 8004256:	b082      	sub	sp, #8
 8004258:	af00      	add	r7, sp, #0
    rb_data_type result ;
    result = ring_buffer[r_index] ;
 800425a:	4b18      	ldr	r3, [pc, #96]	; (80042bc <rb_shift+0x68>)
 800425c:	881b      	ldrh	r3, [r3, #0]
 800425e:	0019      	movs	r1, r3
 8004260:	003b      	movs	r3, r7
 8004262:	4a17      	ldr	r2, [pc, #92]	; (80042c0 <rb_shift+0x6c>)
 8004264:	0089      	lsls	r1, r1, #2
 8004266:	588a      	ldr	r2, [r1, r2]
 8004268:	601a      	str	r2, [r3, #0]
    r_index = (r_index + 1) % buf_size ;
 800426a:	4b14      	ldr	r3, [pc, #80]	; (80042bc <rb_shift+0x68>)
 800426c:	881b      	ldrh	r3, [r3, #0]
 800426e:	1c5a      	adds	r2, r3, #1
 8004270:	4b14      	ldr	r3, [pc, #80]	; (80042c4 <rb_shift+0x70>)
 8004272:	881b      	ldrh	r3, [r3, #0]
 8004274:	0019      	movs	r1, r3
 8004276:	0010      	movs	r0, r2
 8004278:	f7fc f8d2 	bl	8000420 <__aeabi_idivmod>
 800427c:	000b      	movs	r3, r1
 800427e:	b29a      	uxth	r2, r3
 8004280:	4b0e      	ldr	r3, [pc, #56]	; (80042bc <rb_shift+0x68>)
 8004282:	801a      	strh	r2, [r3, #0]
    buf_count-- ;
 8004284:	4b10      	ldr	r3, [pc, #64]	; (80042c8 <rb_shift+0x74>)
 8004286:	881b      	ldrh	r3, [r3, #0]
 8004288:	3b01      	subs	r3, #1
 800428a:	b29a      	uxth	r2, r3
 800428c:	4b0e      	ldr	r3, [pc, #56]	; (80042c8 <rb_shift+0x74>)
 800428e:	801a      	strh	r2, [r3, #0]
    return( result ) ;
 8004290:	1d3b      	adds	r3, r7, #4
 8004292:	003a      	movs	r2, r7
 8004294:	6812      	ldr	r2, [r2, #0]
 8004296:	601a      	str	r2, [r3, #0]
 8004298:	1d3a      	adds	r2, r7, #4
 800429a:	2300      	movs	r3, #0
 800429c:	8811      	ldrh	r1, [r2, #0]
 800429e:	0409      	lsls	r1, r1, #16
 80042a0:	0c09      	lsrs	r1, r1, #16
 80042a2:	0c1b      	lsrs	r3, r3, #16
 80042a4:	041b      	lsls	r3, r3, #16
 80042a6:	430b      	orrs	r3, r1
 80042a8:	8852      	ldrh	r2, [r2, #2]
 80042aa:	0412      	lsls	r2, r2, #16
 80042ac:	041b      	lsls	r3, r3, #16
 80042ae:	0c1b      	lsrs	r3, r3, #16
 80042b0:	4313      	orrs	r3, r2
}
 80042b2:	0018      	movs	r0, r3
 80042b4:	46bd      	mov	sp, r7
 80042b6:	b002      	add	sp, #8
 80042b8:	bd80      	pop	{r7, pc}
 80042ba:	46c0      	nop			; (mov r8, r8)
 80042bc:	2000038e 	.word	0x2000038e
 80042c0:	2000034c 	.word	0x2000034c
 80042c4:	2000004c 	.word	0x2000004c
 80042c8:	2000038c 	.word	0x2000038c

080042cc <__errno>:
 80042cc:	4b01      	ldr	r3, [pc, #4]	; (80042d4 <__errno+0x8>)
 80042ce:	6818      	ldr	r0, [r3, #0]
 80042d0:	4770      	bx	lr
 80042d2:	46c0      	nop			; (mov r8, r8)
 80042d4:	20000050 	.word	0x20000050

080042d8 <__libc_init_array>:
 80042d8:	b570      	push	{r4, r5, r6, lr}
 80042da:	2600      	movs	r6, #0
 80042dc:	4d0c      	ldr	r5, [pc, #48]	; (8004310 <__libc_init_array+0x38>)
 80042de:	4c0d      	ldr	r4, [pc, #52]	; (8004314 <__libc_init_array+0x3c>)
 80042e0:	1b64      	subs	r4, r4, r5
 80042e2:	10a4      	asrs	r4, r4, #2
 80042e4:	42a6      	cmp	r6, r4
 80042e6:	d109      	bne.n	80042fc <__libc_init_array+0x24>
 80042e8:	2600      	movs	r6, #0
 80042ea:	f002 ffd3 	bl	8007294 <_init>
 80042ee:	4d0a      	ldr	r5, [pc, #40]	; (8004318 <__libc_init_array+0x40>)
 80042f0:	4c0a      	ldr	r4, [pc, #40]	; (800431c <__libc_init_array+0x44>)
 80042f2:	1b64      	subs	r4, r4, r5
 80042f4:	10a4      	asrs	r4, r4, #2
 80042f6:	42a6      	cmp	r6, r4
 80042f8:	d105      	bne.n	8004306 <__libc_init_array+0x2e>
 80042fa:	bd70      	pop	{r4, r5, r6, pc}
 80042fc:	00b3      	lsls	r3, r6, #2
 80042fe:	58eb      	ldr	r3, [r5, r3]
 8004300:	4798      	blx	r3
 8004302:	3601      	adds	r6, #1
 8004304:	e7ee      	b.n	80042e4 <__libc_init_array+0xc>
 8004306:	00b3      	lsls	r3, r6, #2
 8004308:	58eb      	ldr	r3, [r5, r3]
 800430a:	4798      	blx	r3
 800430c:	3601      	adds	r6, #1
 800430e:	e7f2      	b.n	80042f6 <__libc_init_array+0x1e>
 8004310:	0800794c 	.word	0x0800794c
 8004314:	0800794c 	.word	0x0800794c
 8004318:	0800794c 	.word	0x0800794c
 800431c:	08007950 	.word	0x08007950

08004320 <memset>:
 8004320:	0003      	movs	r3, r0
 8004322:	1882      	adds	r2, r0, r2
 8004324:	4293      	cmp	r3, r2
 8004326:	d100      	bne.n	800432a <memset+0xa>
 8004328:	4770      	bx	lr
 800432a:	7019      	strb	r1, [r3, #0]
 800432c:	3301      	adds	r3, #1
 800432e:	e7f9      	b.n	8004324 <memset+0x4>

08004330 <__cvt>:
 8004330:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004332:	001e      	movs	r6, r3
 8004334:	2300      	movs	r3, #0
 8004336:	0014      	movs	r4, r2
 8004338:	b08b      	sub	sp, #44	; 0x2c
 800433a:	429e      	cmp	r6, r3
 800433c:	da04      	bge.n	8004348 <__cvt+0x18>
 800433e:	2180      	movs	r1, #128	; 0x80
 8004340:	0609      	lsls	r1, r1, #24
 8004342:	1873      	adds	r3, r6, r1
 8004344:	001e      	movs	r6, r3
 8004346:	232d      	movs	r3, #45	; 0x2d
 8004348:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800434a:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800434c:	7013      	strb	r3, [r2, #0]
 800434e:	2320      	movs	r3, #32
 8004350:	2203      	movs	r2, #3
 8004352:	439f      	bics	r7, r3
 8004354:	2f46      	cmp	r7, #70	; 0x46
 8004356:	d007      	beq.n	8004368 <__cvt+0x38>
 8004358:	003b      	movs	r3, r7
 800435a:	3b45      	subs	r3, #69	; 0x45
 800435c:	4259      	negs	r1, r3
 800435e:	414b      	adcs	r3, r1
 8004360:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004362:	3a01      	subs	r2, #1
 8004364:	18cb      	adds	r3, r1, r3
 8004366:	9310      	str	r3, [sp, #64]	; 0x40
 8004368:	ab09      	add	r3, sp, #36	; 0x24
 800436a:	9304      	str	r3, [sp, #16]
 800436c:	ab08      	add	r3, sp, #32
 800436e:	9303      	str	r3, [sp, #12]
 8004370:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004372:	9200      	str	r2, [sp, #0]
 8004374:	9302      	str	r3, [sp, #8]
 8004376:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004378:	0022      	movs	r2, r4
 800437a:	9301      	str	r3, [sp, #4]
 800437c:	0033      	movs	r3, r6
 800437e:	f000 fd09 	bl	8004d94 <_dtoa_r>
 8004382:	0005      	movs	r5, r0
 8004384:	2f47      	cmp	r7, #71	; 0x47
 8004386:	d102      	bne.n	800438e <__cvt+0x5e>
 8004388:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800438a:	07db      	lsls	r3, r3, #31
 800438c:	d528      	bpl.n	80043e0 <__cvt+0xb0>
 800438e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004390:	18eb      	adds	r3, r5, r3
 8004392:	9307      	str	r3, [sp, #28]
 8004394:	2f46      	cmp	r7, #70	; 0x46
 8004396:	d114      	bne.n	80043c2 <__cvt+0x92>
 8004398:	782b      	ldrb	r3, [r5, #0]
 800439a:	2b30      	cmp	r3, #48	; 0x30
 800439c:	d10c      	bne.n	80043b8 <__cvt+0x88>
 800439e:	2200      	movs	r2, #0
 80043a0:	2300      	movs	r3, #0
 80043a2:	0020      	movs	r0, r4
 80043a4:	0031      	movs	r1, r6
 80043a6:	f7fc f851 	bl	800044c <__aeabi_dcmpeq>
 80043aa:	2800      	cmp	r0, #0
 80043ac:	d104      	bne.n	80043b8 <__cvt+0x88>
 80043ae:	2301      	movs	r3, #1
 80043b0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80043b2:	1a9b      	subs	r3, r3, r2
 80043b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80043b6:	6013      	str	r3, [r2, #0]
 80043b8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80043ba:	9a07      	ldr	r2, [sp, #28]
 80043bc:	681b      	ldr	r3, [r3, #0]
 80043be:	18d3      	adds	r3, r2, r3
 80043c0:	9307      	str	r3, [sp, #28]
 80043c2:	2200      	movs	r2, #0
 80043c4:	2300      	movs	r3, #0
 80043c6:	0020      	movs	r0, r4
 80043c8:	0031      	movs	r1, r6
 80043ca:	f7fc f83f 	bl	800044c <__aeabi_dcmpeq>
 80043ce:	2800      	cmp	r0, #0
 80043d0:	d001      	beq.n	80043d6 <__cvt+0xa6>
 80043d2:	9b07      	ldr	r3, [sp, #28]
 80043d4:	9309      	str	r3, [sp, #36]	; 0x24
 80043d6:	2230      	movs	r2, #48	; 0x30
 80043d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80043da:	9907      	ldr	r1, [sp, #28]
 80043dc:	428b      	cmp	r3, r1
 80043de:	d306      	bcc.n	80043ee <__cvt+0xbe>
 80043e0:	0028      	movs	r0, r5
 80043e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80043e4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80043e6:	1b5b      	subs	r3, r3, r5
 80043e8:	6013      	str	r3, [r2, #0]
 80043ea:	b00b      	add	sp, #44	; 0x2c
 80043ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80043ee:	1c59      	adds	r1, r3, #1
 80043f0:	9109      	str	r1, [sp, #36]	; 0x24
 80043f2:	701a      	strb	r2, [r3, #0]
 80043f4:	e7f0      	b.n	80043d8 <__cvt+0xa8>

080043f6 <__exponent>:
 80043f6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80043f8:	1c83      	adds	r3, r0, #2
 80043fa:	b087      	sub	sp, #28
 80043fc:	9303      	str	r3, [sp, #12]
 80043fe:	0005      	movs	r5, r0
 8004400:	000c      	movs	r4, r1
 8004402:	232b      	movs	r3, #43	; 0x2b
 8004404:	7002      	strb	r2, [r0, #0]
 8004406:	2900      	cmp	r1, #0
 8004408:	da01      	bge.n	800440e <__exponent+0x18>
 800440a:	424c      	negs	r4, r1
 800440c:	3302      	adds	r3, #2
 800440e:	706b      	strb	r3, [r5, #1]
 8004410:	2c09      	cmp	r4, #9
 8004412:	dd31      	ble.n	8004478 <__exponent+0x82>
 8004414:	270a      	movs	r7, #10
 8004416:	ab04      	add	r3, sp, #16
 8004418:	1dde      	adds	r6, r3, #7
 800441a:	0020      	movs	r0, r4
 800441c:	0039      	movs	r1, r7
 800441e:	9601      	str	r6, [sp, #4]
 8004420:	f7fb fffe 	bl	8000420 <__aeabi_idivmod>
 8004424:	3e01      	subs	r6, #1
 8004426:	3130      	adds	r1, #48	; 0x30
 8004428:	0020      	movs	r0, r4
 800442a:	7031      	strb	r1, [r6, #0]
 800442c:	0039      	movs	r1, r7
 800442e:	9402      	str	r4, [sp, #8]
 8004430:	f7fb ff10 	bl	8000254 <__divsi3>
 8004434:	9b02      	ldr	r3, [sp, #8]
 8004436:	0004      	movs	r4, r0
 8004438:	2b63      	cmp	r3, #99	; 0x63
 800443a:	dcee      	bgt.n	800441a <__exponent+0x24>
 800443c:	9b01      	ldr	r3, [sp, #4]
 800443e:	3430      	adds	r4, #48	; 0x30
 8004440:	1e9a      	subs	r2, r3, #2
 8004442:	0013      	movs	r3, r2
 8004444:	9903      	ldr	r1, [sp, #12]
 8004446:	7014      	strb	r4, [r2, #0]
 8004448:	a804      	add	r0, sp, #16
 800444a:	3007      	adds	r0, #7
 800444c:	4298      	cmp	r0, r3
 800444e:	d80e      	bhi.n	800446e <__exponent+0x78>
 8004450:	ab04      	add	r3, sp, #16
 8004452:	3307      	adds	r3, #7
 8004454:	2000      	movs	r0, #0
 8004456:	429a      	cmp	r2, r3
 8004458:	d804      	bhi.n	8004464 <__exponent+0x6e>
 800445a:	ab04      	add	r3, sp, #16
 800445c:	3009      	adds	r0, #9
 800445e:	18c0      	adds	r0, r0, r3
 8004460:	9b01      	ldr	r3, [sp, #4]
 8004462:	1ac0      	subs	r0, r0, r3
 8004464:	9b03      	ldr	r3, [sp, #12]
 8004466:	1818      	adds	r0, r3, r0
 8004468:	1b40      	subs	r0, r0, r5
 800446a:	b007      	add	sp, #28
 800446c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800446e:	7818      	ldrb	r0, [r3, #0]
 8004470:	3301      	adds	r3, #1
 8004472:	7008      	strb	r0, [r1, #0]
 8004474:	3101      	adds	r1, #1
 8004476:	e7e7      	b.n	8004448 <__exponent+0x52>
 8004478:	2330      	movs	r3, #48	; 0x30
 800447a:	18e4      	adds	r4, r4, r3
 800447c:	70ab      	strb	r3, [r5, #2]
 800447e:	1d28      	adds	r0, r5, #4
 8004480:	70ec      	strb	r4, [r5, #3]
 8004482:	e7f1      	b.n	8004468 <__exponent+0x72>

08004484 <_printf_float>:
 8004484:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004486:	b095      	sub	sp, #84	; 0x54
 8004488:	000c      	movs	r4, r1
 800448a:	9209      	str	r2, [sp, #36]	; 0x24
 800448c:	001e      	movs	r6, r3
 800448e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8004490:	0007      	movs	r7, r0
 8004492:	f001 fa99 	bl	80059c8 <_localeconv_r>
 8004496:	6803      	ldr	r3, [r0, #0]
 8004498:	0018      	movs	r0, r3
 800449a:	930c      	str	r3, [sp, #48]	; 0x30
 800449c:	f7fb fe34 	bl	8000108 <strlen>
 80044a0:	2300      	movs	r3, #0
 80044a2:	9312      	str	r3, [sp, #72]	; 0x48
 80044a4:	7e23      	ldrb	r3, [r4, #24]
 80044a6:	2207      	movs	r2, #7
 80044a8:	930a      	str	r3, [sp, #40]	; 0x28
 80044aa:	6823      	ldr	r3, [r4, #0]
 80044ac:	900e      	str	r0, [sp, #56]	; 0x38
 80044ae:	930d      	str	r3, [sp, #52]	; 0x34
 80044b0:	990d      	ldr	r1, [sp, #52]	; 0x34
 80044b2:	682b      	ldr	r3, [r5, #0]
 80044b4:	05c9      	lsls	r1, r1, #23
 80044b6:	d547      	bpl.n	8004548 <_printf_float+0xc4>
 80044b8:	189b      	adds	r3, r3, r2
 80044ba:	4393      	bics	r3, r2
 80044bc:	001a      	movs	r2, r3
 80044be:	3208      	adds	r2, #8
 80044c0:	602a      	str	r2, [r5, #0]
 80044c2:	681a      	ldr	r2, [r3, #0]
 80044c4:	685b      	ldr	r3, [r3, #4]
 80044c6:	64a2      	str	r2, [r4, #72]	; 0x48
 80044c8:	64e3      	str	r3, [r4, #76]	; 0x4c
 80044ca:	2201      	movs	r2, #1
 80044cc:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 80044ce:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80044d0:	930b      	str	r3, [sp, #44]	; 0x2c
 80044d2:	006b      	lsls	r3, r5, #1
 80044d4:	085b      	lsrs	r3, r3, #1
 80044d6:	930f      	str	r3, [sp, #60]	; 0x3c
 80044d8:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80044da:	4ba7      	ldr	r3, [pc, #668]	; (8004778 <_printf_float+0x2f4>)
 80044dc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80044de:	4252      	negs	r2, r2
 80044e0:	f7fd fd1e 	bl	8001f20 <__aeabi_dcmpun>
 80044e4:	2800      	cmp	r0, #0
 80044e6:	d131      	bne.n	800454c <_printf_float+0xc8>
 80044e8:	2201      	movs	r2, #1
 80044ea:	4ba3      	ldr	r3, [pc, #652]	; (8004778 <_printf_float+0x2f4>)
 80044ec:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80044ee:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80044f0:	4252      	negs	r2, r2
 80044f2:	f7fb ffbb 	bl	800046c <__aeabi_dcmple>
 80044f6:	2800      	cmp	r0, #0
 80044f8:	d128      	bne.n	800454c <_printf_float+0xc8>
 80044fa:	2200      	movs	r2, #0
 80044fc:	2300      	movs	r3, #0
 80044fe:	0029      	movs	r1, r5
 8004500:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004502:	f7fb ffa9 	bl	8000458 <__aeabi_dcmplt>
 8004506:	2800      	cmp	r0, #0
 8004508:	d003      	beq.n	8004512 <_printf_float+0x8e>
 800450a:	0023      	movs	r3, r4
 800450c:	222d      	movs	r2, #45	; 0x2d
 800450e:	3343      	adds	r3, #67	; 0x43
 8004510:	701a      	strb	r2, [r3, #0]
 8004512:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004514:	4d99      	ldr	r5, [pc, #612]	; (800477c <_printf_float+0x2f8>)
 8004516:	2b47      	cmp	r3, #71	; 0x47
 8004518:	d900      	bls.n	800451c <_printf_float+0x98>
 800451a:	4d99      	ldr	r5, [pc, #612]	; (8004780 <_printf_float+0x2fc>)
 800451c:	2303      	movs	r3, #3
 800451e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004520:	6123      	str	r3, [r4, #16]
 8004522:	3301      	adds	r3, #1
 8004524:	439a      	bics	r2, r3
 8004526:	2300      	movs	r3, #0
 8004528:	6022      	str	r2, [r4, #0]
 800452a:	930b      	str	r3, [sp, #44]	; 0x2c
 800452c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800452e:	0021      	movs	r1, r4
 8004530:	0038      	movs	r0, r7
 8004532:	9600      	str	r6, [sp, #0]
 8004534:	aa13      	add	r2, sp, #76	; 0x4c
 8004536:	f000 f9e7 	bl	8004908 <_printf_common>
 800453a:	1c43      	adds	r3, r0, #1
 800453c:	d000      	beq.n	8004540 <_printf_float+0xbc>
 800453e:	e0a2      	b.n	8004686 <_printf_float+0x202>
 8004540:	2001      	movs	r0, #1
 8004542:	4240      	negs	r0, r0
 8004544:	b015      	add	sp, #84	; 0x54
 8004546:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004548:	3307      	adds	r3, #7
 800454a:	e7b6      	b.n	80044ba <_printf_float+0x36>
 800454c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800454e:	002b      	movs	r3, r5
 8004550:	0010      	movs	r0, r2
 8004552:	0029      	movs	r1, r5
 8004554:	f7fd fce4 	bl	8001f20 <__aeabi_dcmpun>
 8004558:	2800      	cmp	r0, #0
 800455a:	d00b      	beq.n	8004574 <_printf_float+0xf0>
 800455c:	2d00      	cmp	r5, #0
 800455e:	da03      	bge.n	8004568 <_printf_float+0xe4>
 8004560:	0023      	movs	r3, r4
 8004562:	222d      	movs	r2, #45	; 0x2d
 8004564:	3343      	adds	r3, #67	; 0x43
 8004566:	701a      	strb	r2, [r3, #0]
 8004568:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800456a:	4d86      	ldr	r5, [pc, #536]	; (8004784 <_printf_float+0x300>)
 800456c:	2b47      	cmp	r3, #71	; 0x47
 800456e:	d9d5      	bls.n	800451c <_printf_float+0x98>
 8004570:	4d85      	ldr	r5, [pc, #532]	; (8004788 <_printf_float+0x304>)
 8004572:	e7d3      	b.n	800451c <_printf_float+0x98>
 8004574:	2220      	movs	r2, #32
 8004576:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004578:	6863      	ldr	r3, [r4, #4]
 800457a:	4391      	bics	r1, r2
 800457c:	910f      	str	r1, [sp, #60]	; 0x3c
 800457e:	1c5a      	adds	r2, r3, #1
 8004580:	d149      	bne.n	8004616 <_printf_float+0x192>
 8004582:	3307      	adds	r3, #7
 8004584:	6063      	str	r3, [r4, #4]
 8004586:	2380      	movs	r3, #128	; 0x80
 8004588:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800458a:	00db      	lsls	r3, r3, #3
 800458c:	4313      	orrs	r3, r2
 800458e:	2200      	movs	r2, #0
 8004590:	9206      	str	r2, [sp, #24]
 8004592:	aa12      	add	r2, sp, #72	; 0x48
 8004594:	9205      	str	r2, [sp, #20]
 8004596:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004598:	a908      	add	r1, sp, #32
 800459a:	9204      	str	r2, [sp, #16]
 800459c:	aa11      	add	r2, sp, #68	; 0x44
 800459e:	9203      	str	r2, [sp, #12]
 80045a0:	2223      	movs	r2, #35	; 0x23
 80045a2:	6023      	str	r3, [r4, #0]
 80045a4:	9301      	str	r3, [sp, #4]
 80045a6:	6863      	ldr	r3, [r4, #4]
 80045a8:	1852      	adds	r2, r2, r1
 80045aa:	9202      	str	r2, [sp, #8]
 80045ac:	9300      	str	r3, [sp, #0]
 80045ae:	0038      	movs	r0, r7
 80045b0:	002b      	movs	r3, r5
 80045b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80045b4:	f7ff febc 	bl	8004330 <__cvt>
 80045b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80045ba:	0005      	movs	r5, r0
 80045bc:	9911      	ldr	r1, [sp, #68]	; 0x44
 80045be:	2b47      	cmp	r3, #71	; 0x47
 80045c0:	d108      	bne.n	80045d4 <_printf_float+0x150>
 80045c2:	1ccb      	adds	r3, r1, #3
 80045c4:	db02      	blt.n	80045cc <_printf_float+0x148>
 80045c6:	6863      	ldr	r3, [r4, #4]
 80045c8:	4299      	cmp	r1, r3
 80045ca:	dd48      	ble.n	800465e <_printf_float+0x1da>
 80045cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80045ce:	3b02      	subs	r3, #2
 80045d0:	b2db      	uxtb	r3, r3
 80045d2:	930a      	str	r3, [sp, #40]	; 0x28
 80045d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80045d6:	2b65      	cmp	r3, #101	; 0x65
 80045d8:	d824      	bhi.n	8004624 <_printf_float+0x1a0>
 80045da:	0020      	movs	r0, r4
 80045dc:	001a      	movs	r2, r3
 80045de:	3901      	subs	r1, #1
 80045e0:	3050      	adds	r0, #80	; 0x50
 80045e2:	9111      	str	r1, [sp, #68]	; 0x44
 80045e4:	f7ff ff07 	bl	80043f6 <__exponent>
 80045e8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80045ea:	900b      	str	r0, [sp, #44]	; 0x2c
 80045ec:	1813      	adds	r3, r2, r0
 80045ee:	6123      	str	r3, [r4, #16]
 80045f0:	2a01      	cmp	r2, #1
 80045f2:	dc02      	bgt.n	80045fa <_printf_float+0x176>
 80045f4:	6822      	ldr	r2, [r4, #0]
 80045f6:	07d2      	lsls	r2, r2, #31
 80045f8:	d501      	bpl.n	80045fe <_printf_float+0x17a>
 80045fa:	3301      	adds	r3, #1
 80045fc:	6123      	str	r3, [r4, #16]
 80045fe:	2323      	movs	r3, #35	; 0x23
 8004600:	aa08      	add	r2, sp, #32
 8004602:	189b      	adds	r3, r3, r2
 8004604:	781b      	ldrb	r3, [r3, #0]
 8004606:	2b00      	cmp	r3, #0
 8004608:	d100      	bne.n	800460c <_printf_float+0x188>
 800460a:	e78f      	b.n	800452c <_printf_float+0xa8>
 800460c:	0023      	movs	r3, r4
 800460e:	222d      	movs	r2, #45	; 0x2d
 8004610:	3343      	adds	r3, #67	; 0x43
 8004612:	701a      	strb	r2, [r3, #0]
 8004614:	e78a      	b.n	800452c <_printf_float+0xa8>
 8004616:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004618:	2a47      	cmp	r2, #71	; 0x47
 800461a:	d1b4      	bne.n	8004586 <_printf_float+0x102>
 800461c:	2b00      	cmp	r3, #0
 800461e:	d1b2      	bne.n	8004586 <_printf_float+0x102>
 8004620:	3301      	adds	r3, #1
 8004622:	e7af      	b.n	8004584 <_printf_float+0x100>
 8004624:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004626:	2b66      	cmp	r3, #102	; 0x66
 8004628:	d11b      	bne.n	8004662 <_printf_float+0x1de>
 800462a:	6863      	ldr	r3, [r4, #4]
 800462c:	2900      	cmp	r1, #0
 800462e:	dd0d      	ble.n	800464c <_printf_float+0x1c8>
 8004630:	6121      	str	r1, [r4, #16]
 8004632:	2b00      	cmp	r3, #0
 8004634:	d102      	bne.n	800463c <_printf_float+0x1b8>
 8004636:	6822      	ldr	r2, [r4, #0]
 8004638:	07d2      	lsls	r2, r2, #31
 800463a:	d502      	bpl.n	8004642 <_printf_float+0x1be>
 800463c:	3301      	adds	r3, #1
 800463e:	1859      	adds	r1, r3, r1
 8004640:	6121      	str	r1, [r4, #16]
 8004642:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004644:	65a3      	str	r3, [r4, #88]	; 0x58
 8004646:	2300      	movs	r3, #0
 8004648:	930b      	str	r3, [sp, #44]	; 0x2c
 800464a:	e7d8      	b.n	80045fe <_printf_float+0x17a>
 800464c:	2b00      	cmp	r3, #0
 800464e:	d103      	bne.n	8004658 <_printf_float+0x1d4>
 8004650:	2201      	movs	r2, #1
 8004652:	6821      	ldr	r1, [r4, #0]
 8004654:	4211      	tst	r1, r2
 8004656:	d000      	beq.n	800465a <_printf_float+0x1d6>
 8004658:	1c9a      	adds	r2, r3, #2
 800465a:	6122      	str	r2, [r4, #16]
 800465c:	e7f1      	b.n	8004642 <_printf_float+0x1be>
 800465e:	2367      	movs	r3, #103	; 0x67
 8004660:	930a      	str	r3, [sp, #40]	; 0x28
 8004662:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004664:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004666:	4293      	cmp	r3, r2
 8004668:	db06      	blt.n	8004678 <_printf_float+0x1f4>
 800466a:	6822      	ldr	r2, [r4, #0]
 800466c:	6123      	str	r3, [r4, #16]
 800466e:	07d2      	lsls	r2, r2, #31
 8004670:	d5e7      	bpl.n	8004642 <_printf_float+0x1be>
 8004672:	3301      	adds	r3, #1
 8004674:	6123      	str	r3, [r4, #16]
 8004676:	e7e4      	b.n	8004642 <_printf_float+0x1be>
 8004678:	2101      	movs	r1, #1
 800467a:	2b00      	cmp	r3, #0
 800467c:	dc01      	bgt.n	8004682 <_printf_float+0x1fe>
 800467e:	1849      	adds	r1, r1, r1
 8004680:	1ac9      	subs	r1, r1, r3
 8004682:	1852      	adds	r2, r2, r1
 8004684:	e7e9      	b.n	800465a <_printf_float+0x1d6>
 8004686:	6822      	ldr	r2, [r4, #0]
 8004688:	0553      	lsls	r3, r2, #21
 800468a:	d407      	bmi.n	800469c <_printf_float+0x218>
 800468c:	6923      	ldr	r3, [r4, #16]
 800468e:	002a      	movs	r2, r5
 8004690:	0038      	movs	r0, r7
 8004692:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004694:	47b0      	blx	r6
 8004696:	1c43      	adds	r3, r0, #1
 8004698:	d128      	bne.n	80046ec <_printf_float+0x268>
 800469a:	e751      	b.n	8004540 <_printf_float+0xbc>
 800469c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800469e:	2b65      	cmp	r3, #101	; 0x65
 80046a0:	d800      	bhi.n	80046a4 <_printf_float+0x220>
 80046a2:	e0e1      	b.n	8004868 <_printf_float+0x3e4>
 80046a4:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80046a6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80046a8:	2200      	movs	r2, #0
 80046aa:	2300      	movs	r3, #0
 80046ac:	f7fb fece 	bl	800044c <__aeabi_dcmpeq>
 80046b0:	2800      	cmp	r0, #0
 80046b2:	d031      	beq.n	8004718 <_printf_float+0x294>
 80046b4:	2301      	movs	r3, #1
 80046b6:	0038      	movs	r0, r7
 80046b8:	4a34      	ldr	r2, [pc, #208]	; (800478c <_printf_float+0x308>)
 80046ba:	9909      	ldr	r1, [sp, #36]	; 0x24
 80046bc:	47b0      	blx	r6
 80046be:	1c43      	adds	r3, r0, #1
 80046c0:	d100      	bne.n	80046c4 <_printf_float+0x240>
 80046c2:	e73d      	b.n	8004540 <_printf_float+0xbc>
 80046c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80046c6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80046c8:	4293      	cmp	r3, r2
 80046ca:	db02      	blt.n	80046d2 <_printf_float+0x24e>
 80046cc:	6823      	ldr	r3, [r4, #0]
 80046ce:	07db      	lsls	r3, r3, #31
 80046d0:	d50c      	bpl.n	80046ec <_printf_float+0x268>
 80046d2:	0038      	movs	r0, r7
 80046d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80046d6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80046d8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80046da:	47b0      	blx	r6
 80046dc:	2500      	movs	r5, #0
 80046de:	1c43      	adds	r3, r0, #1
 80046e0:	d100      	bne.n	80046e4 <_printf_float+0x260>
 80046e2:	e72d      	b.n	8004540 <_printf_float+0xbc>
 80046e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80046e6:	3b01      	subs	r3, #1
 80046e8:	42ab      	cmp	r3, r5
 80046ea:	dc0a      	bgt.n	8004702 <_printf_float+0x27e>
 80046ec:	6823      	ldr	r3, [r4, #0]
 80046ee:	079b      	lsls	r3, r3, #30
 80046f0:	d500      	bpl.n	80046f4 <_printf_float+0x270>
 80046f2:	e106      	b.n	8004902 <_printf_float+0x47e>
 80046f4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80046f6:	68e0      	ldr	r0, [r4, #12]
 80046f8:	4298      	cmp	r0, r3
 80046fa:	db00      	blt.n	80046fe <_printf_float+0x27a>
 80046fc:	e722      	b.n	8004544 <_printf_float+0xc0>
 80046fe:	0018      	movs	r0, r3
 8004700:	e720      	b.n	8004544 <_printf_float+0xc0>
 8004702:	0022      	movs	r2, r4
 8004704:	2301      	movs	r3, #1
 8004706:	0038      	movs	r0, r7
 8004708:	9909      	ldr	r1, [sp, #36]	; 0x24
 800470a:	321a      	adds	r2, #26
 800470c:	47b0      	blx	r6
 800470e:	1c43      	adds	r3, r0, #1
 8004710:	d100      	bne.n	8004714 <_printf_float+0x290>
 8004712:	e715      	b.n	8004540 <_printf_float+0xbc>
 8004714:	3501      	adds	r5, #1
 8004716:	e7e5      	b.n	80046e4 <_printf_float+0x260>
 8004718:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800471a:	2b00      	cmp	r3, #0
 800471c:	dc38      	bgt.n	8004790 <_printf_float+0x30c>
 800471e:	2301      	movs	r3, #1
 8004720:	0038      	movs	r0, r7
 8004722:	4a1a      	ldr	r2, [pc, #104]	; (800478c <_printf_float+0x308>)
 8004724:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004726:	47b0      	blx	r6
 8004728:	1c43      	adds	r3, r0, #1
 800472a:	d100      	bne.n	800472e <_printf_float+0x2aa>
 800472c:	e708      	b.n	8004540 <_printf_float+0xbc>
 800472e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004730:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004732:	4313      	orrs	r3, r2
 8004734:	d102      	bne.n	800473c <_printf_float+0x2b8>
 8004736:	6823      	ldr	r3, [r4, #0]
 8004738:	07db      	lsls	r3, r3, #31
 800473a:	d5d7      	bpl.n	80046ec <_printf_float+0x268>
 800473c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800473e:	0038      	movs	r0, r7
 8004740:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004742:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004744:	47b0      	blx	r6
 8004746:	1c43      	adds	r3, r0, #1
 8004748:	d100      	bne.n	800474c <_printf_float+0x2c8>
 800474a:	e6f9      	b.n	8004540 <_printf_float+0xbc>
 800474c:	2300      	movs	r3, #0
 800474e:	930a      	str	r3, [sp, #40]	; 0x28
 8004750:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004752:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004754:	425b      	negs	r3, r3
 8004756:	4293      	cmp	r3, r2
 8004758:	dc01      	bgt.n	800475e <_printf_float+0x2da>
 800475a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800475c:	e797      	b.n	800468e <_printf_float+0x20a>
 800475e:	0022      	movs	r2, r4
 8004760:	2301      	movs	r3, #1
 8004762:	0038      	movs	r0, r7
 8004764:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004766:	321a      	adds	r2, #26
 8004768:	47b0      	blx	r6
 800476a:	1c43      	adds	r3, r0, #1
 800476c:	d100      	bne.n	8004770 <_printf_float+0x2ec>
 800476e:	e6e7      	b.n	8004540 <_printf_float+0xbc>
 8004770:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004772:	3301      	adds	r3, #1
 8004774:	e7eb      	b.n	800474e <_printf_float+0x2ca>
 8004776:	46c0      	nop			; (mov r8, r8)
 8004778:	7fefffff 	.word	0x7fefffff
 800477c:	08007574 	.word	0x08007574
 8004780:	08007578 	.word	0x08007578
 8004784:	0800757c 	.word	0x0800757c
 8004788:	08007580 	.word	0x08007580
 800478c:	08007584 	.word	0x08007584
 8004790:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004792:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8004794:	920a      	str	r2, [sp, #40]	; 0x28
 8004796:	429a      	cmp	r2, r3
 8004798:	dd00      	ble.n	800479c <_printf_float+0x318>
 800479a:	930a      	str	r3, [sp, #40]	; 0x28
 800479c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800479e:	2b00      	cmp	r3, #0
 80047a0:	dc3c      	bgt.n	800481c <_printf_float+0x398>
 80047a2:	2300      	movs	r3, #0
 80047a4:	930d      	str	r3, [sp, #52]	; 0x34
 80047a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80047a8:	43db      	mvns	r3, r3
 80047aa:	17db      	asrs	r3, r3, #31
 80047ac:	930f      	str	r3, [sp, #60]	; 0x3c
 80047ae:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80047b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80047b2:	930b      	str	r3, [sp, #44]	; 0x2c
 80047b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80047b6:	4013      	ands	r3, r2
 80047b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80047ba:	1ad3      	subs	r3, r2, r3
 80047bc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80047be:	4293      	cmp	r3, r2
 80047c0:	dc34      	bgt.n	800482c <_printf_float+0x3a8>
 80047c2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80047c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80047c6:	4293      	cmp	r3, r2
 80047c8:	db3d      	blt.n	8004846 <_printf_float+0x3c2>
 80047ca:	6823      	ldr	r3, [r4, #0]
 80047cc:	07db      	lsls	r3, r3, #31
 80047ce:	d43a      	bmi.n	8004846 <_printf_float+0x3c2>
 80047d0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80047d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80047d4:	9911      	ldr	r1, [sp, #68]	; 0x44
 80047d6:	1ad3      	subs	r3, r2, r3
 80047d8:	1a52      	subs	r2, r2, r1
 80047da:	920a      	str	r2, [sp, #40]	; 0x28
 80047dc:	429a      	cmp	r2, r3
 80047de:	dd00      	ble.n	80047e2 <_printf_float+0x35e>
 80047e0:	930a      	str	r3, [sp, #40]	; 0x28
 80047e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80047e4:	2b00      	cmp	r3, #0
 80047e6:	dc36      	bgt.n	8004856 <_printf_float+0x3d2>
 80047e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80047ea:	2500      	movs	r5, #0
 80047ec:	43db      	mvns	r3, r3
 80047ee:	17db      	asrs	r3, r3, #31
 80047f0:	930b      	str	r3, [sp, #44]	; 0x2c
 80047f2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80047f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80047f6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80047f8:	1a9b      	subs	r3, r3, r2
 80047fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80047fc:	400a      	ands	r2, r1
 80047fe:	1a9b      	subs	r3, r3, r2
 8004800:	42ab      	cmp	r3, r5
 8004802:	dc00      	bgt.n	8004806 <_printf_float+0x382>
 8004804:	e772      	b.n	80046ec <_printf_float+0x268>
 8004806:	0022      	movs	r2, r4
 8004808:	2301      	movs	r3, #1
 800480a:	0038      	movs	r0, r7
 800480c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800480e:	321a      	adds	r2, #26
 8004810:	47b0      	blx	r6
 8004812:	1c43      	adds	r3, r0, #1
 8004814:	d100      	bne.n	8004818 <_printf_float+0x394>
 8004816:	e693      	b.n	8004540 <_printf_float+0xbc>
 8004818:	3501      	adds	r5, #1
 800481a:	e7ea      	b.n	80047f2 <_printf_float+0x36e>
 800481c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800481e:	002a      	movs	r2, r5
 8004820:	0038      	movs	r0, r7
 8004822:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004824:	47b0      	blx	r6
 8004826:	1c43      	adds	r3, r0, #1
 8004828:	d1bb      	bne.n	80047a2 <_printf_float+0x31e>
 800482a:	e689      	b.n	8004540 <_printf_float+0xbc>
 800482c:	0022      	movs	r2, r4
 800482e:	2301      	movs	r3, #1
 8004830:	0038      	movs	r0, r7
 8004832:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004834:	321a      	adds	r2, #26
 8004836:	47b0      	blx	r6
 8004838:	1c43      	adds	r3, r0, #1
 800483a:	d100      	bne.n	800483e <_printf_float+0x3ba>
 800483c:	e680      	b.n	8004540 <_printf_float+0xbc>
 800483e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004840:	3301      	adds	r3, #1
 8004842:	930d      	str	r3, [sp, #52]	; 0x34
 8004844:	e7b3      	b.n	80047ae <_printf_float+0x32a>
 8004846:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004848:	0038      	movs	r0, r7
 800484a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800484c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800484e:	47b0      	blx	r6
 8004850:	1c43      	adds	r3, r0, #1
 8004852:	d1bd      	bne.n	80047d0 <_printf_float+0x34c>
 8004854:	e674      	b.n	8004540 <_printf_float+0xbc>
 8004856:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004858:	0038      	movs	r0, r7
 800485a:	18ea      	adds	r2, r5, r3
 800485c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800485e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004860:	47b0      	blx	r6
 8004862:	1c43      	adds	r3, r0, #1
 8004864:	d1c0      	bne.n	80047e8 <_printf_float+0x364>
 8004866:	e66b      	b.n	8004540 <_printf_float+0xbc>
 8004868:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800486a:	2b01      	cmp	r3, #1
 800486c:	dc02      	bgt.n	8004874 <_printf_float+0x3f0>
 800486e:	2301      	movs	r3, #1
 8004870:	421a      	tst	r2, r3
 8004872:	d034      	beq.n	80048de <_printf_float+0x45a>
 8004874:	2301      	movs	r3, #1
 8004876:	002a      	movs	r2, r5
 8004878:	0038      	movs	r0, r7
 800487a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800487c:	47b0      	blx	r6
 800487e:	1c43      	adds	r3, r0, #1
 8004880:	d100      	bne.n	8004884 <_printf_float+0x400>
 8004882:	e65d      	b.n	8004540 <_printf_float+0xbc>
 8004884:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004886:	0038      	movs	r0, r7
 8004888:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800488a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800488c:	47b0      	blx	r6
 800488e:	1c43      	adds	r3, r0, #1
 8004890:	d100      	bne.n	8004894 <_printf_float+0x410>
 8004892:	e655      	b.n	8004540 <_printf_float+0xbc>
 8004894:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8004896:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8004898:	2200      	movs	r2, #0
 800489a:	2300      	movs	r3, #0
 800489c:	f7fb fdd6 	bl	800044c <__aeabi_dcmpeq>
 80048a0:	2800      	cmp	r0, #0
 80048a2:	d11a      	bne.n	80048da <_printf_float+0x456>
 80048a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80048a6:	1c6a      	adds	r2, r5, #1
 80048a8:	3b01      	subs	r3, #1
 80048aa:	0038      	movs	r0, r7
 80048ac:	9909      	ldr	r1, [sp, #36]	; 0x24
 80048ae:	47b0      	blx	r6
 80048b0:	1c43      	adds	r3, r0, #1
 80048b2:	d10e      	bne.n	80048d2 <_printf_float+0x44e>
 80048b4:	e644      	b.n	8004540 <_printf_float+0xbc>
 80048b6:	0022      	movs	r2, r4
 80048b8:	2301      	movs	r3, #1
 80048ba:	0038      	movs	r0, r7
 80048bc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80048be:	321a      	adds	r2, #26
 80048c0:	47b0      	blx	r6
 80048c2:	1c43      	adds	r3, r0, #1
 80048c4:	d100      	bne.n	80048c8 <_printf_float+0x444>
 80048c6:	e63b      	b.n	8004540 <_printf_float+0xbc>
 80048c8:	3501      	adds	r5, #1
 80048ca:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80048cc:	3b01      	subs	r3, #1
 80048ce:	42ab      	cmp	r3, r5
 80048d0:	dcf1      	bgt.n	80048b6 <_printf_float+0x432>
 80048d2:	0022      	movs	r2, r4
 80048d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80048d6:	3250      	adds	r2, #80	; 0x50
 80048d8:	e6da      	b.n	8004690 <_printf_float+0x20c>
 80048da:	2500      	movs	r5, #0
 80048dc:	e7f5      	b.n	80048ca <_printf_float+0x446>
 80048de:	002a      	movs	r2, r5
 80048e0:	e7e3      	b.n	80048aa <_printf_float+0x426>
 80048e2:	0022      	movs	r2, r4
 80048e4:	2301      	movs	r3, #1
 80048e6:	0038      	movs	r0, r7
 80048e8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80048ea:	3219      	adds	r2, #25
 80048ec:	47b0      	blx	r6
 80048ee:	1c43      	adds	r3, r0, #1
 80048f0:	d100      	bne.n	80048f4 <_printf_float+0x470>
 80048f2:	e625      	b.n	8004540 <_printf_float+0xbc>
 80048f4:	3501      	adds	r5, #1
 80048f6:	68e3      	ldr	r3, [r4, #12]
 80048f8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80048fa:	1a9b      	subs	r3, r3, r2
 80048fc:	42ab      	cmp	r3, r5
 80048fe:	dcf0      	bgt.n	80048e2 <_printf_float+0x45e>
 8004900:	e6f8      	b.n	80046f4 <_printf_float+0x270>
 8004902:	2500      	movs	r5, #0
 8004904:	e7f7      	b.n	80048f6 <_printf_float+0x472>
 8004906:	46c0      	nop			; (mov r8, r8)

08004908 <_printf_common>:
 8004908:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800490a:	0015      	movs	r5, r2
 800490c:	9301      	str	r3, [sp, #4]
 800490e:	688a      	ldr	r2, [r1, #8]
 8004910:	690b      	ldr	r3, [r1, #16]
 8004912:	000c      	movs	r4, r1
 8004914:	9000      	str	r0, [sp, #0]
 8004916:	4293      	cmp	r3, r2
 8004918:	da00      	bge.n	800491c <_printf_common+0x14>
 800491a:	0013      	movs	r3, r2
 800491c:	0022      	movs	r2, r4
 800491e:	602b      	str	r3, [r5, #0]
 8004920:	3243      	adds	r2, #67	; 0x43
 8004922:	7812      	ldrb	r2, [r2, #0]
 8004924:	2a00      	cmp	r2, #0
 8004926:	d001      	beq.n	800492c <_printf_common+0x24>
 8004928:	3301      	adds	r3, #1
 800492a:	602b      	str	r3, [r5, #0]
 800492c:	6823      	ldr	r3, [r4, #0]
 800492e:	069b      	lsls	r3, r3, #26
 8004930:	d502      	bpl.n	8004938 <_printf_common+0x30>
 8004932:	682b      	ldr	r3, [r5, #0]
 8004934:	3302      	adds	r3, #2
 8004936:	602b      	str	r3, [r5, #0]
 8004938:	6822      	ldr	r2, [r4, #0]
 800493a:	2306      	movs	r3, #6
 800493c:	0017      	movs	r7, r2
 800493e:	401f      	ands	r7, r3
 8004940:	421a      	tst	r2, r3
 8004942:	d027      	beq.n	8004994 <_printf_common+0x8c>
 8004944:	0023      	movs	r3, r4
 8004946:	3343      	adds	r3, #67	; 0x43
 8004948:	781b      	ldrb	r3, [r3, #0]
 800494a:	1e5a      	subs	r2, r3, #1
 800494c:	4193      	sbcs	r3, r2
 800494e:	6822      	ldr	r2, [r4, #0]
 8004950:	0692      	lsls	r2, r2, #26
 8004952:	d430      	bmi.n	80049b6 <_printf_common+0xae>
 8004954:	0022      	movs	r2, r4
 8004956:	9901      	ldr	r1, [sp, #4]
 8004958:	9800      	ldr	r0, [sp, #0]
 800495a:	9e08      	ldr	r6, [sp, #32]
 800495c:	3243      	adds	r2, #67	; 0x43
 800495e:	47b0      	blx	r6
 8004960:	1c43      	adds	r3, r0, #1
 8004962:	d025      	beq.n	80049b0 <_printf_common+0xa8>
 8004964:	2306      	movs	r3, #6
 8004966:	6820      	ldr	r0, [r4, #0]
 8004968:	682a      	ldr	r2, [r5, #0]
 800496a:	68e1      	ldr	r1, [r4, #12]
 800496c:	2500      	movs	r5, #0
 800496e:	4003      	ands	r3, r0
 8004970:	2b04      	cmp	r3, #4
 8004972:	d103      	bne.n	800497c <_printf_common+0x74>
 8004974:	1a8d      	subs	r5, r1, r2
 8004976:	43eb      	mvns	r3, r5
 8004978:	17db      	asrs	r3, r3, #31
 800497a:	401d      	ands	r5, r3
 800497c:	68a3      	ldr	r3, [r4, #8]
 800497e:	6922      	ldr	r2, [r4, #16]
 8004980:	4293      	cmp	r3, r2
 8004982:	dd01      	ble.n	8004988 <_printf_common+0x80>
 8004984:	1a9b      	subs	r3, r3, r2
 8004986:	18ed      	adds	r5, r5, r3
 8004988:	2700      	movs	r7, #0
 800498a:	42bd      	cmp	r5, r7
 800498c:	d120      	bne.n	80049d0 <_printf_common+0xc8>
 800498e:	2000      	movs	r0, #0
 8004990:	e010      	b.n	80049b4 <_printf_common+0xac>
 8004992:	3701      	adds	r7, #1
 8004994:	68e3      	ldr	r3, [r4, #12]
 8004996:	682a      	ldr	r2, [r5, #0]
 8004998:	1a9b      	subs	r3, r3, r2
 800499a:	42bb      	cmp	r3, r7
 800499c:	ddd2      	ble.n	8004944 <_printf_common+0x3c>
 800499e:	0022      	movs	r2, r4
 80049a0:	2301      	movs	r3, #1
 80049a2:	9901      	ldr	r1, [sp, #4]
 80049a4:	9800      	ldr	r0, [sp, #0]
 80049a6:	9e08      	ldr	r6, [sp, #32]
 80049a8:	3219      	adds	r2, #25
 80049aa:	47b0      	blx	r6
 80049ac:	1c43      	adds	r3, r0, #1
 80049ae:	d1f0      	bne.n	8004992 <_printf_common+0x8a>
 80049b0:	2001      	movs	r0, #1
 80049b2:	4240      	negs	r0, r0
 80049b4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80049b6:	2030      	movs	r0, #48	; 0x30
 80049b8:	18e1      	adds	r1, r4, r3
 80049ba:	3143      	adds	r1, #67	; 0x43
 80049bc:	7008      	strb	r0, [r1, #0]
 80049be:	0021      	movs	r1, r4
 80049c0:	1c5a      	adds	r2, r3, #1
 80049c2:	3145      	adds	r1, #69	; 0x45
 80049c4:	7809      	ldrb	r1, [r1, #0]
 80049c6:	18a2      	adds	r2, r4, r2
 80049c8:	3243      	adds	r2, #67	; 0x43
 80049ca:	3302      	adds	r3, #2
 80049cc:	7011      	strb	r1, [r2, #0]
 80049ce:	e7c1      	b.n	8004954 <_printf_common+0x4c>
 80049d0:	0022      	movs	r2, r4
 80049d2:	2301      	movs	r3, #1
 80049d4:	9901      	ldr	r1, [sp, #4]
 80049d6:	9800      	ldr	r0, [sp, #0]
 80049d8:	9e08      	ldr	r6, [sp, #32]
 80049da:	321a      	adds	r2, #26
 80049dc:	47b0      	blx	r6
 80049de:	1c43      	adds	r3, r0, #1
 80049e0:	d0e6      	beq.n	80049b0 <_printf_common+0xa8>
 80049e2:	3701      	adds	r7, #1
 80049e4:	e7d1      	b.n	800498a <_printf_common+0x82>
	...

080049e8 <_printf_i>:
 80049e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80049ea:	b08b      	sub	sp, #44	; 0x2c
 80049ec:	9206      	str	r2, [sp, #24]
 80049ee:	000a      	movs	r2, r1
 80049f0:	3243      	adds	r2, #67	; 0x43
 80049f2:	9307      	str	r3, [sp, #28]
 80049f4:	9005      	str	r0, [sp, #20]
 80049f6:	9204      	str	r2, [sp, #16]
 80049f8:	7e0a      	ldrb	r2, [r1, #24]
 80049fa:	000c      	movs	r4, r1
 80049fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80049fe:	2a78      	cmp	r2, #120	; 0x78
 8004a00:	d807      	bhi.n	8004a12 <_printf_i+0x2a>
 8004a02:	2a62      	cmp	r2, #98	; 0x62
 8004a04:	d809      	bhi.n	8004a1a <_printf_i+0x32>
 8004a06:	2a00      	cmp	r2, #0
 8004a08:	d100      	bne.n	8004a0c <_printf_i+0x24>
 8004a0a:	e0c1      	b.n	8004b90 <_printf_i+0x1a8>
 8004a0c:	2a58      	cmp	r2, #88	; 0x58
 8004a0e:	d100      	bne.n	8004a12 <_printf_i+0x2a>
 8004a10:	e08c      	b.n	8004b2c <_printf_i+0x144>
 8004a12:	0026      	movs	r6, r4
 8004a14:	3642      	adds	r6, #66	; 0x42
 8004a16:	7032      	strb	r2, [r6, #0]
 8004a18:	e022      	b.n	8004a60 <_printf_i+0x78>
 8004a1a:	0010      	movs	r0, r2
 8004a1c:	3863      	subs	r0, #99	; 0x63
 8004a1e:	2815      	cmp	r0, #21
 8004a20:	d8f7      	bhi.n	8004a12 <_printf_i+0x2a>
 8004a22:	f7fb fb83 	bl	800012c <__gnu_thumb1_case_shi>
 8004a26:	0016      	.short	0x0016
 8004a28:	fff6001f 	.word	0xfff6001f
 8004a2c:	fff6fff6 	.word	0xfff6fff6
 8004a30:	001ffff6 	.word	0x001ffff6
 8004a34:	fff6fff6 	.word	0xfff6fff6
 8004a38:	fff6fff6 	.word	0xfff6fff6
 8004a3c:	003600a8 	.word	0x003600a8
 8004a40:	fff6009a 	.word	0xfff6009a
 8004a44:	00b9fff6 	.word	0x00b9fff6
 8004a48:	0036fff6 	.word	0x0036fff6
 8004a4c:	fff6fff6 	.word	0xfff6fff6
 8004a50:	009e      	.short	0x009e
 8004a52:	0026      	movs	r6, r4
 8004a54:	681a      	ldr	r2, [r3, #0]
 8004a56:	3642      	adds	r6, #66	; 0x42
 8004a58:	1d11      	adds	r1, r2, #4
 8004a5a:	6019      	str	r1, [r3, #0]
 8004a5c:	6813      	ldr	r3, [r2, #0]
 8004a5e:	7033      	strb	r3, [r6, #0]
 8004a60:	2301      	movs	r3, #1
 8004a62:	e0a7      	b.n	8004bb4 <_printf_i+0x1cc>
 8004a64:	6808      	ldr	r0, [r1, #0]
 8004a66:	6819      	ldr	r1, [r3, #0]
 8004a68:	1d0a      	adds	r2, r1, #4
 8004a6a:	0605      	lsls	r5, r0, #24
 8004a6c:	d50b      	bpl.n	8004a86 <_printf_i+0x9e>
 8004a6e:	680d      	ldr	r5, [r1, #0]
 8004a70:	601a      	str	r2, [r3, #0]
 8004a72:	2d00      	cmp	r5, #0
 8004a74:	da03      	bge.n	8004a7e <_printf_i+0x96>
 8004a76:	232d      	movs	r3, #45	; 0x2d
 8004a78:	9a04      	ldr	r2, [sp, #16]
 8004a7a:	426d      	negs	r5, r5
 8004a7c:	7013      	strb	r3, [r2, #0]
 8004a7e:	4b61      	ldr	r3, [pc, #388]	; (8004c04 <_printf_i+0x21c>)
 8004a80:	270a      	movs	r7, #10
 8004a82:	9303      	str	r3, [sp, #12]
 8004a84:	e01b      	b.n	8004abe <_printf_i+0xd6>
 8004a86:	680d      	ldr	r5, [r1, #0]
 8004a88:	601a      	str	r2, [r3, #0]
 8004a8a:	0641      	lsls	r1, r0, #25
 8004a8c:	d5f1      	bpl.n	8004a72 <_printf_i+0x8a>
 8004a8e:	b22d      	sxth	r5, r5
 8004a90:	e7ef      	b.n	8004a72 <_printf_i+0x8a>
 8004a92:	680d      	ldr	r5, [r1, #0]
 8004a94:	6819      	ldr	r1, [r3, #0]
 8004a96:	1d08      	adds	r0, r1, #4
 8004a98:	6018      	str	r0, [r3, #0]
 8004a9a:	062e      	lsls	r6, r5, #24
 8004a9c:	d501      	bpl.n	8004aa2 <_printf_i+0xba>
 8004a9e:	680d      	ldr	r5, [r1, #0]
 8004aa0:	e003      	b.n	8004aaa <_printf_i+0xc2>
 8004aa2:	066d      	lsls	r5, r5, #25
 8004aa4:	d5fb      	bpl.n	8004a9e <_printf_i+0xb6>
 8004aa6:	680d      	ldr	r5, [r1, #0]
 8004aa8:	b2ad      	uxth	r5, r5
 8004aaa:	4b56      	ldr	r3, [pc, #344]	; (8004c04 <_printf_i+0x21c>)
 8004aac:	2708      	movs	r7, #8
 8004aae:	9303      	str	r3, [sp, #12]
 8004ab0:	2a6f      	cmp	r2, #111	; 0x6f
 8004ab2:	d000      	beq.n	8004ab6 <_printf_i+0xce>
 8004ab4:	3702      	adds	r7, #2
 8004ab6:	0023      	movs	r3, r4
 8004ab8:	2200      	movs	r2, #0
 8004aba:	3343      	adds	r3, #67	; 0x43
 8004abc:	701a      	strb	r2, [r3, #0]
 8004abe:	6863      	ldr	r3, [r4, #4]
 8004ac0:	60a3      	str	r3, [r4, #8]
 8004ac2:	2b00      	cmp	r3, #0
 8004ac4:	db03      	blt.n	8004ace <_printf_i+0xe6>
 8004ac6:	2204      	movs	r2, #4
 8004ac8:	6821      	ldr	r1, [r4, #0]
 8004aca:	4391      	bics	r1, r2
 8004acc:	6021      	str	r1, [r4, #0]
 8004ace:	2d00      	cmp	r5, #0
 8004ad0:	d102      	bne.n	8004ad8 <_printf_i+0xf0>
 8004ad2:	9e04      	ldr	r6, [sp, #16]
 8004ad4:	2b00      	cmp	r3, #0
 8004ad6:	d00c      	beq.n	8004af2 <_printf_i+0x10a>
 8004ad8:	9e04      	ldr	r6, [sp, #16]
 8004ada:	0028      	movs	r0, r5
 8004adc:	0039      	movs	r1, r7
 8004ade:	f7fb fbb5 	bl	800024c <__aeabi_uidivmod>
 8004ae2:	9b03      	ldr	r3, [sp, #12]
 8004ae4:	3e01      	subs	r6, #1
 8004ae6:	5c5b      	ldrb	r3, [r3, r1]
 8004ae8:	7033      	strb	r3, [r6, #0]
 8004aea:	002b      	movs	r3, r5
 8004aec:	0005      	movs	r5, r0
 8004aee:	429f      	cmp	r7, r3
 8004af0:	d9f3      	bls.n	8004ada <_printf_i+0xf2>
 8004af2:	2f08      	cmp	r7, #8
 8004af4:	d109      	bne.n	8004b0a <_printf_i+0x122>
 8004af6:	6823      	ldr	r3, [r4, #0]
 8004af8:	07db      	lsls	r3, r3, #31
 8004afa:	d506      	bpl.n	8004b0a <_printf_i+0x122>
 8004afc:	6863      	ldr	r3, [r4, #4]
 8004afe:	6922      	ldr	r2, [r4, #16]
 8004b00:	4293      	cmp	r3, r2
 8004b02:	dc02      	bgt.n	8004b0a <_printf_i+0x122>
 8004b04:	2330      	movs	r3, #48	; 0x30
 8004b06:	3e01      	subs	r6, #1
 8004b08:	7033      	strb	r3, [r6, #0]
 8004b0a:	9b04      	ldr	r3, [sp, #16]
 8004b0c:	1b9b      	subs	r3, r3, r6
 8004b0e:	6123      	str	r3, [r4, #16]
 8004b10:	9b07      	ldr	r3, [sp, #28]
 8004b12:	0021      	movs	r1, r4
 8004b14:	9300      	str	r3, [sp, #0]
 8004b16:	9805      	ldr	r0, [sp, #20]
 8004b18:	9b06      	ldr	r3, [sp, #24]
 8004b1a:	aa09      	add	r2, sp, #36	; 0x24
 8004b1c:	f7ff fef4 	bl	8004908 <_printf_common>
 8004b20:	1c43      	adds	r3, r0, #1
 8004b22:	d14c      	bne.n	8004bbe <_printf_i+0x1d6>
 8004b24:	2001      	movs	r0, #1
 8004b26:	4240      	negs	r0, r0
 8004b28:	b00b      	add	sp, #44	; 0x2c
 8004b2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004b2c:	3145      	adds	r1, #69	; 0x45
 8004b2e:	700a      	strb	r2, [r1, #0]
 8004b30:	4a34      	ldr	r2, [pc, #208]	; (8004c04 <_printf_i+0x21c>)
 8004b32:	9203      	str	r2, [sp, #12]
 8004b34:	681a      	ldr	r2, [r3, #0]
 8004b36:	6821      	ldr	r1, [r4, #0]
 8004b38:	ca20      	ldmia	r2!, {r5}
 8004b3a:	601a      	str	r2, [r3, #0]
 8004b3c:	0608      	lsls	r0, r1, #24
 8004b3e:	d516      	bpl.n	8004b6e <_printf_i+0x186>
 8004b40:	07cb      	lsls	r3, r1, #31
 8004b42:	d502      	bpl.n	8004b4a <_printf_i+0x162>
 8004b44:	2320      	movs	r3, #32
 8004b46:	4319      	orrs	r1, r3
 8004b48:	6021      	str	r1, [r4, #0]
 8004b4a:	2710      	movs	r7, #16
 8004b4c:	2d00      	cmp	r5, #0
 8004b4e:	d1b2      	bne.n	8004ab6 <_printf_i+0xce>
 8004b50:	2320      	movs	r3, #32
 8004b52:	6822      	ldr	r2, [r4, #0]
 8004b54:	439a      	bics	r2, r3
 8004b56:	6022      	str	r2, [r4, #0]
 8004b58:	e7ad      	b.n	8004ab6 <_printf_i+0xce>
 8004b5a:	2220      	movs	r2, #32
 8004b5c:	6809      	ldr	r1, [r1, #0]
 8004b5e:	430a      	orrs	r2, r1
 8004b60:	6022      	str	r2, [r4, #0]
 8004b62:	0022      	movs	r2, r4
 8004b64:	2178      	movs	r1, #120	; 0x78
 8004b66:	3245      	adds	r2, #69	; 0x45
 8004b68:	7011      	strb	r1, [r2, #0]
 8004b6a:	4a27      	ldr	r2, [pc, #156]	; (8004c08 <_printf_i+0x220>)
 8004b6c:	e7e1      	b.n	8004b32 <_printf_i+0x14a>
 8004b6e:	0648      	lsls	r0, r1, #25
 8004b70:	d5e6      	bpl.n	8004b40 <_printf_i+0x158>
 8004b72:	b2ad      	uxth	r5, r5
 8004b74:	e7e4      	b.n	8004b40 <_printf_i+0x158>
 8004b76:	681a      	ldr	r2, [r3, #0]
 8004b78:	680d      	ldr	r5, [r1, #0]
 8004b7a:	1d10      	adds	r0, r2, #4
 8004b7c:	6949      	ldr	r1, [r1, #20]
 8004b7e:	6018      	str	r0, [r3, #0]
 8004b80:	6813      	ldr	r3, [r2, #0]
 8004b82:	062e      	lsls	r6, r5, #24
 8004b84:	d501      	bpl.n	8004b8a <_printf_i+0x1a2>
 8004b86:	6019      	str	r1, [r3, #0]
 8004b88:	e002      	b.n	8004b90 <_printf_i+0x1a8>
 8004b8a:	066d      	lsls	r5, r5, #25
 8004b8c:	d5fb      	bpl.n	8004b86 <_printf_i+0x19e>
 8004b8e:	8019      	strh	r1, [r3, #0]
 8004b90:	2300      	movs	r3, #0
 8004b92:	9e04      	ldr	r6, [sp, #16]
 8004b94:	6123      	str	r3, [r4, #16]
 8004b96:	e7bb      	b.n	8004b10 <_printf_i+0x128>
 8004b98:	681a      	ldr	r2, [r3, #0]
 8004b9a:	1d11      	adds	r1, r2, #4
 8004b9c:	6019      	str	r1, [r3, #0]
 8004b9e:	6816      	ldr	r6, [r2, #0]
 8004ba0:	2100      	movs	r1, #0
 8004ba2:	0030      	movs	r0, r6
 8004ba4:	6862      	ldr	r2, [r4, #4]
 8004ba6:	f000 ff1d 	bl	80059e4 <memchr>
 8004baa:	2800      	cmp	r0, #0
 8004bac:	d001      	beq.n	8004bb2 <_printf_i+0x1ca>
 8004bae:	1b80      	subs	r0, r0, r6
 8004bb0:	6060      	str	r0, [r4, #4]
 8004bb2:	6863      	ldr	r3, [r4, #4]
 8004bb4:	6123      	str	r3, [r4, #16]
 8004bb6:	2300      	movs	r3, #0
 8004bb8:	9a04      	ldr	r2, [sp, #16]
 8004bba:	7013      	strb	r3, [r2, #0]
 8004bbc:	e7a8      	b.n	8004b10 <_printf_i+0x128>
 8004bbe:	6923      	ldr	r3, [r4, #16]
 8004bc0:	0032      	movs	r2, r6
 8004bc2:	9906      	ldr	r1, [sp, #24]
 8004bc4:	9805      	ldr	r0, [sp, #20]
 8004bc6:	9d07      	ldr	r5, [sp, #28]
 8004bc8:	47a8      	blx	r5
 8004bca:	1c43      	adds	r3, r0, #1
 8004bcc:	d0aa      	beq.n	8004b24 <_printf_i+0x13c>
 8004bce:	6823      	ldr	r3, [r4, #0]
 8004bd0:	079b      	lsls	r3, r3, #30
 8004bd2:	d415      	bmi.n	8004c00 <_printf_i+0x218>
 8004bd4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004bd6:	68e0      	ldr	r0, [r4, #12]
 8004bd8:	4298      	cmp	r0, r3
 8004bda:	daa5      	bge.n	8004b28 <_printf_i+0x140>
 8004bdc:	0018      	movs	r0, r3
 8004bde:	e7a3      	b.n	8004b28 <_printf_i+0x140>
 8004be0:	0022      	movs	r2, r4
 8004be2:	2301      	movs	r3, #1
 8004be4:	9906      	ldr	r1, [sp, #24]
 8004be6:	9805      	ldr	r0, [sp, #20]
 8004be8:	9e07      	ldr	r6, [sp, #28]
 8004bea:	3219      	adds	r2, #25
 8004bec:	47b0      	blx	r6
 8004bee:	1c43      	adds	r3, r0, #1
 8004bf0:	d098      	beq.n	8004b24 <_printf_i+0x13c>
 8004bf2:	3501      	adds	r5, #1
 8004bf4:	68e3      	ldr	r3, [r4, #12]
 8004bf6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004bf8:	1a9b      	subs	r3, r3, r2
 8004bfa:	42ab      	cmp	r3, r5
 8004bfc:	dcf0      	bgt.n	8004be0 <_printf_i+0x1f8>
 8004bfe:	e7e9      	b.n	8004bd4 <_printf_i+0x1ec>
 8004c00:	2500      	movs	r5, #0
 8004c02:	e7f7      	b.n	8004bf4 <_printf_i+0x20c>
 8004c04:	08007586 	.word	0x08007586
 8004c08:	08007597 	.word	0x08007597

08004c0c <_vsniprintf_r>:
 8004c0c:	b530      	push	{r4, r5, lr}
 8004c0e:	0014      	movs	r4, r2
 8004c10:	0005      	movs	r5, r0
 8004c12:	001a      	movs	r2, r3
 8004c14:	b09b      	sub	sp, #108	; 0x6c
 8004c16:	2c00      	cmp	r4, #0
 8004c18:	da05      	bge.n	8004c26 <_vsniprintf_r+0x1a>
 8004c1a:	238b      	movs	r3, #139	; 0x8b
 8004c1c:	6003      	str	r3, [r0, #0]
 8004c1e:	2001      	movs	r0, #1
 8004c20:	4240      	negs	r0, r0
 8004c22:	b01b      	add	sp, #108	; 0x6c
 8004c24:	bd30      	pop	{r4, r5, pc}
 8004c26:	2382      	movs	r3, #130	; 0x82
 8004c28:	4668      	mov	r0, sp
 8004c2a:	009b      	lsls	r3, r3, #2
 8004c2c:	8183      	strh	r3, [r0, #12]
 8004c2e:	2300      	movs	r3, #0
 8004c30:	9100      	str	r1, [sp, #0]
 8004c32:	9104      	str	r1, [sp, #16]
 8004c34:	429c      	cmp	r4, r3
 8004c36:	d000      	beq.n	8004c3a <_vsniprintf_r+0x2e>
 8004c38:	1e63      	subs	r3, r4, #1
 8004c3a:	9302      	str	r3, [sp, #8]
 8004c3c:	9305      	str	r3, [sp, #20]
 8004c3e:	2301      	movs	r3, #1
 8004c40:	4669      	mov	r1, sp
 8004c42:	425b      	negs	r3, r3
 8004c44:	81cb      	strh	r3, [r1, #14]
 8004c46:	0028      	movs	r0, r5
 8004c48:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004c4a:	f001 fbeb 	bl	8006424 <_svfiprintf_r>
 8004c4e:	1c43      	adds	r3, r0, #1
 8004c50:	da01      	bge.n	8004c56 <_vsniprintf_r+0x4a>
 8004c52:	238b      	movs	r3, #139	; 0x8b
 8004c54:	602b      	str	r3, [r5, #0]
 8004c56:	2c00      	cmp	r4, #0
 8004c58:	d0e3      	beq.n	8004c22 <_vsniprintf_r+0x16>
 8004c5a:	2300      	movs	r3, #0
 8004c5c:	9a00      	ldr	r2, [sp, #0]
 8004c5e:	7013      	strb	r3, [r2, #0]
 8004c60:	e7df      	b.n	8004c22 <_vsniprintf_r+0x16>
	...

08004c64 <vsniprintf>:
 8004c64:	b507      	push	{r0, r1, r2, lr}
 8004c66:	9300      	str	r3, [sp, #0]
 8004c68:	0013      	movs	r3, r2
 8004c6a:	000a      	movs	r2, r1
 8004c6c:	0001      	movs	r1, r0
 8004c6e:	4802      	ldr	r0, [pc, #8]	; (8004c78 <vsniprintf+0x14>)
 8004c70:	6800      	ldr	r0, [r0, #0]
 8004c72:	f7ff ffcb 	bl	8004c0c <_vsniprintf_r>
 8004c76:	bd0e      	pop	{r1, r2, r3, pc}
 8004c78:	20000050 	.word	0x20000050

08004c7c <quorem>:
 8004c7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004c7e:	0006      	movs	r6, r0
 8004c80:	690b      	ldr	r3, [r1, #16]
 8004c82:	6932      	ldr	r2, [r6, #16]
 8004c84:	b087      	sub	sp, #28
 8004c86:	2000      	movs	r0, #0
 8004c88:	9103      	str	r1, [sp, #12]
 8004c8a:	429a      	cmp	r2, r3
 8004c8c:	db65      	blt.n	8004d5a <quorem+0xde>
 8004c8e:	3b01      	subs	r3, #1
 8004c90:	009c      	lsls	r4, r3, #2
 8004c92:	9300      	str	r3, [sp, #0]
 8004c94:	000b      	movs	r3, r1
 8004c96:	3314      	adds	r3, #20
 8004c98:	9305      	str	r3, [sp, #20]
 8004c9a:	191b      	adds	r3, r3, r4
 8004c9c:	9304      	str	r3, [sp, #16]
 8004c9e:	0033      	movs	r3, r6
 8004ca0:	3314      	adds	r3, #20
 8004ca2:	9302      	str	r3, [sp, #8]
 8004ca4:	191c      	adds	r4, r3, r4
 8004ca6:	9b04      	ldr	r3, [sp, #16]
 8004ca8:	6827      	ldr	r7, [r4, #0]
 8004caa:	681b      	ldr	r3, [r3, #0]
 8004cac:	0038      	movs	r0, r7
 8004cae:	1c5d      	adds	r5, r3, #1
 8004cb0:	0029      	movs	r1, r5
 8004cb2:	9301      	str	r3, [sp, #4]
 8004cb4:	f7fb fa44 	bl	8000140 <__udivsi3>
 8004cb8:	9001      	str	r0, [sp, #4]
 8004cba:	42af      	cmp	r7, r5
 8004cbc:	d324      	bcc.n	8004d08 <quorem+0x8c>
 8004cbe:	2500      	movs	r5, #0
 8004cc0:	46ac      	mov	ip, r5
 8004cc2:	9802      	ldr	r0, [sp, #8]
 8004cc4:	9f05      	ldr	r7, [sp, #20]
 8004cc6:	cf08      	ldmia	r7!, {r3}
 8004cc8:	9a01      	ldr	r2, [sp, #4]
 8004cca:	b299      	uxth	r1, r3
 8004ccc:	4351      	muls	r1, r2
 8004cce:	0c1b      	lsrs	r3, r3, #16
 8004cd0:	4353      	muls	r3, r2
 8004cd2:	1949      	adds	r1, r1, r5
 8004cd4:	0c0a      	lsrs	r2, r1, #16
 8004cd6:	189b      	adds	r3, r3, r2
 8004cd8:	6802      	ldr	r2, [r0, #0]
 8004cda:	b289      	uxth	r1, r1
 8004cdc:	b292      	uxth	r2, r2
 8004cde:	4462      	add	r2, ip
 8004ce0:	1a52      	subs	r2, r2, r1
 8004ce2:	6801      	ldr	r1, [r0, #0]
 8004ce4:	0c1d      	lsrs	r5, r3, #16
 8004ce6:	0c09      	lsrs	r1, r1, #16
 8004ce8:	b29b      	uxth	r3, r3
 8004cea:	1acb      	subs	r3, r1, r3
 8004cec:	1411      	asrs	r1, r2, #16
 8004cee:	185b      	adds	r3, r3, r1
 8004cf0:	1419      	asrs	r1, r3, #16
 8004cf2:	b292      	uxth	r2, r2
 8004cf4:	041b      	lsls	r3, r3, #16
 8004cf6:	431a      	orrs	r2, r3
 8004cf8:	9b04      	ldr	r3, [sp, #16]
 8004cfa:	468c      	mov	ip, r1
 8004cfc:	c004      	stmia	r0!, {r2}
 8004cfe:	42bb      	cmp	r3, r7
 8004d00:	d2e1      	bcs.n	8004cc6 <quorem+0x4a>
 8004d02:	6823      	ldr	r3, [r4, #0]
 8004d04:	2b00      	cmp	r3, #0
 8004d06:	d030      	beq.n	8004d6a <quorem+0xee>
 8004d08:	0030      	movs	r0, r6
 8004d0a:	9903      	ldr	r1, [sp, #12]
 8004d0c:	f001 f902 	bl	8005f14 <__mcmp>
 8004d10:	2800      	cmp	r0, #0
 8004d12:	db21      	blt.n	8004d58 <quorem+0xdc>
 8004d14:	0030      	movs	r0, r6
 8004d16:	2400      	movs	r4, #0
 8004d18:	9b01      	ldr	r3, [sp, #4]
 8004d1a:	9903      	ldr	r1, [sp, #12]
 8004d1c:	3301      	adds	r3, #1
 8004d1e:	9301      	str	r3, [sp, #4]
 8004d20:	3014      	adds	r0, #20
 8004d22:	3114      	adds	r1, #20
 8004d24:	6803      	ldr	r3, [r0, #0]
 8004d26:	c920      	ldmia	r1!, {r5}
 8004d28:	b29a      	uxth	r2, r3
 8004d2a:	1914      	adds	r4, r2, r4
 8004d2c:	b2aa      	uxth	r2, r5
 8004d2e:	1aa2      	subs	r2, r4, r2
 8004d30:	0c1b      	lsrs	r3, r3, #16
 8004d32:	0c2d      	lsrs	r5, r5, #16
 8004d34:	1414      	asrs	r4, r2, #16
 8004d36:	1b5b      	subs	r3, r3, r5
 8004d38:	191b      	adds	r3, r3, r4
 8004d3a:	141c      	asrs	r4, r3, #16
 8004d3c:	b292      	uxth	r2, r2
 8004d3e:	041b      	lsls	r3, r3, #16
 8004d40:	4313      	orrs	r3, r2
 8004d42:	c008      	stmia	r0!, {r3}
 8004d44:	9b04      	ldr	r3, [sp, #16]
 8004d46:	428b      	cmp	r3, r1
 8004d48:	d2ec      	bcs.n	8004d24 <quorem+0xa8>
 8004d4a:	9b00      	ldr	r3, [sp, #0]
 8004d4c:	9a02      	ldr	r2, [sp, #8]
 8004d4e:	009b      	lsls	r3, r3, #2
 8004d50:	18d3      	adds	r3, r2, r3
 8004d52:	681a      	ldr	r2, [r3, #0]
 8004d54:	2a00      	cmp	r2, #0
 8004d56:	d015      	beq.n	8004d84 <quorem+0x108>
 8004d58:	9801      	ldr	r0, [sp, #4]
 8004d5a:	b007      	add	sp, #28
 8004d5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004d5e:	6823      	ldr	r3, [r4, #0]
 8004d60:	2b00      	cmp	r3, #0
 8004d62:	d106      	bne.n	8004d72 <quorem+0xf6>
 8004d64:	9b00      	ldr	r3, [sp, #0]
 8004d66:	3b01      	subs	r3, #1
 8004d68:	9300      	str	r3, [sp, #0]
 8004d6a:	9b02      	ldr	r3, [sp, #8]
 8004d6c:	3c04      	subs	r4, #4
 8004d6e:	42a3      	cmp	r3, r4
 8004d70:	d3f5      	bcc.n	8004d5e <quorem+0xe2>
 8004d72:	9b00      	ldr	r3, [sp, #0]
 8004d74:	6133      	str	r3, [r6, #16]
 8004d76:	e7c7      	b.n	8004d08 <quorem+0x8c>
 8004d78:	681a      	ldr	r2, [r3, #0]
 8004d7a:	2a00      	cmp	r2, #0
 8004d7c:	d106      	bne.n	8004d8c <quorem+0x110>
 8004d7e:	9a00      	ldr	r2, [sp, #0]
 8004d80:	3a01      	subs	r2, #1
 8004d82:	9200      	str	r2, [sp, #0]
 8004d84:	9a02      	ldr	r2, [sp, #8]
 8004d86:	3b04      	subs	r3, #4
 8004d88:	429a      	cmp	r2, r3
 8004d8a:	d3f5      	bcc.n	8004d78 <quorem+0xfc>
 8004d8c:	9b00      	ldr	r3, [sp, #0]
 8004d8e:	6133      	str	r3, [r6, #16]
 8004d90:	e7e2      	b.n	8004d58 <quorem+0xdc>
	...

08004d94 <_dtoa_r>:
 8004d94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004d96:	b09d      	sub	sp, #116	; 0x74
 8004d98:	9202      	str	r2, [sp, #8]
 8004d9a:	9303      	str	r3, [sp, #12]
 8004d9c:	9b02      	ldr	r3, [sp, #8]
 8004d9e:	9c03      	ldr	r4, [sp, #12]
 8004da0:	9308      	str	r3, [sp, #32]
 8004da2:	9409      	str	r4, [sp, #36]	; 0x24
 8004da4:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8004da6:	0007      	movs	r7, r0
 8004da8:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8004daa:	2c00      	cmp	r4, #0
 8004dac:	d10e      	bne.n	8004dcc <_dtoa_r+0x38>
 8004dae:	2010      	movs	r0, #16
 8004db0:	f000 fe0e 	bl	80059d0 <malloc>
 8004db4:	1e02      	subs	r2, r0, #0
 8004db6:	6278      	str	r0, [r7, #36]	; 0x24
 8004db8:	d104      	bne.n	8004dc4 <_dtoa_r+0x30>
 8004dba:	21ea      	movs	r1, #234	; 0xea
 8004dbc:	4bc7      	ldr	r3, [pc, #796]	; (80050dc <_dtoa_r+0x348>)
 8004dbe:	48c8      	ldr	r0, [pc, #800]	; (80050e0 <_dtoa_r+0x34c>)
 8004dc0:	f001 fc42 	bl	8006648 <__assert_func>
 8004dc4:	6044      	str	r4, [r0, #4]
 8004dc6:	6084      	str	r4, [r0, #8]
 8004dc8:	6004      	str	r4, [r0, #0]
 8004dca:	60c4      	str	r4, [r0, #12]
 8004dcc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004dce:	6819      	ldr	r1, [r3, #0]
 8004dd0:	2900      	cmp	r1, #0
 8004dd2:	d00a      	beq.n	8004dea <_dtoa_r+0x56>
 8004dd4:	685a      	ldr	r2, [r3, #4]
 8004dd6:	2301      	movs	r3, #1
 8004dd8:	4093      	lsls	r3, r2
 8004dda:	604a      	str	r2, [r1, #4]
 8004ddc:	608b      	str	r3, [r1, #8]
 8004dde:	0038      	movs	r0, r7
 8004de0:	f000 fe58 	bl	8005a94 <_Bfree>
 8004de4:	2200      	movs	r2, #0
 8004de6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004de8:	601a      	str	r2, [r3, #0]
 8004dea:	9b03      	ldr	r3, [sp, #12]
 8004dec:	2b00      	cmp	r3, #0
 8004dee:	da20      	bge.n	8004e32 <_dtoa_r+0x9e>
 8004df0:	2301      	movs	r3, #1
 8004df2:	602b      	str	r3, [r5, #0]
 8004df4:	9b03      	ldr	r3, [sp, #12]
 8004df6:	005b      	lsls	r3, r3, #1
 8004df8:	085b      	lsrs	r3, r3, #1
 8004dfa:	9309      	str	r3, [sp, #36]	; 0x24
 8004dfc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004dfe:	4bb9      	ldr	r3, [pc, #740]	; (80050e4 <_dtoa_r+0x350>)
 8004e00:	4ab8      	ldr	r2, [pc, #736]	; (80050e4 <_dtoa_r+0x350>)
 8004e02:	402b      	ands	r3, r5
 8004e04:	4293      	cmp	r3, r2
 8004e06:	d117      	bne.n	8004e38 <_dtoa_r+0xa4>
 8004e08:	4bb7      	ldr	r3, [pc, #732]	; (80050e8 <_dtoa_r+0x354>)
 8004e0a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004e0c:	0328      	lsls	r0, r5, #12
 8004e0e:	6013      	str	r3, [r2, #0]
 8004e10:	9b02      	ldr	r3, [sp, #8]
 8004e12:	0b00      	lsrs	r0, r0, #12
 8004e14:	4318      	orrs	r0, r3
 8004e16:	d101      	bne.n	8004e1c <_dtoa_r+0x88>
 8004e18:	f000 fdbf 	bl	800599a <_dtoa_r+0xc06>
 8004e1c:	48b3      	ldr	r0, [pc, #716]	; (80050ec <_dtoa_r+0x358>)
 8004e1e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004e20:	9006      	str	r0, [sp, #24]
 8004e22:	2b00      	cmp	r3, #0
 8004e24:	d002      	beq.n	8004e2c <_dtoa_r+0x98>
 8004e26:	4bb2      	ldr	r3, [pc, #712]	; (80050f0 <_dtoa_r+0x35c>)
 8004e28:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8004e2a:	6013      	str	r3, [r2, #0]
 8004e2c:	9806      	ldr	r0, [sp, #24]
 8004e2e:	b01d      	add	sp, #116	; 0x74
 8004e30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004e32:	2300      	movs	r3, #0
 8004e34:	602b      	str	r3, [r5, #0]
 8004e36:	e7e1      	b.n	8004dfc <_dtoa_r+0x68>
 8004e38:	9b08      	ldr	r3, [sp, #32]
 8004e3a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8004e3c:	9312      	str	r3, [sp, #72]	; 0x48
 8004e3e:	9413      	str	r4, [sp, #76]	; 0x4c
 8004e40:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004e42:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004e44:	2200      	movs	r2, #0
 8004e46:	2300      	movs	r3, #0
 8004e48:	f7fb fb00 	bl	800044c <__aeabi_dcmpeq>
 8004e4c:	1e04      	subs	r4, r0, #0
 8004e4e:	d009      	beq.n	8004e64 <_dtoa_r+0xd0>
 8004e50:	2301      	movs	r3, #1
 8004e52:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004e54:	6013      	str	r3, [r2, #0]
 8004e56:	4ba7      	ldr	r3, [pc, #668]	; (80050f4 <_dtoa_r+0x360>)
 8004e58:	9306      	str	r3, [sp, #24]
 8004e5a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004e5c:	2b00      	cmp	r3, #0
 8004e5e:	d0e5      	beq.n	8004e2c <_dtoa_r+0x98>
 8004e60:	4ba5      	ldr	r3, [pc, #660]	; (80050f8 <_dtoa_r+0x364>)
 8004e62:	e7e1      	b.n	8004e28 <_dtoa_r+0x94>
 8004e64:	ab1a      	add	r3, sp, #104	; 0x68
 8004e66:	9301      	str	r3, [sp, #4]
 8004e68:	ab1b      	add	r3, sp, #108	; 0x6c
 8004e6a:	9300      	str	r3, [sp, #0]
 8004e6c:	0038      	movs	r0, r7
 8004e6e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004e70:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004e72:	f001 f903 	bl	800607c <__d2b>
 8004e76:	006e      	lsls	r6, r5, #1
 8004e78:	9005      	str	r0, [sp, #20]
 8004e7a:	0d76      	lsrs	r6, r6, #21
 8004e7c:	d100      	bne.n	8004e80 <_dtoa_r+0xec>
 8004e7e:	e07c      	b.n	8004f7a <_dtoa_r+0x1e6>
 8004e80:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004e82:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004e84:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004e86:	4a9d      	ldr	r2, [pc, #628]	; (80050fc <_dtoa_r+0x368>)
 8004e88:	031b      	lsls	r3, r3, #12
 8004e8a:	0b1b      	lsrs	r3, r3, #12
 8004e8c:	431a      	orrs	r2, r3
 8004e8e:	0011      	movs	r1, r2
 8004e90:	4b9b      	ldr	r3, [pc, #620]	; (8005100 <_dtoa_r+0x36c>)
 8004e92:	9418      	str	r4, [sp, #96]	; 0x60
 8004e94:	18f6      	adds	r6, r6, r3
 8004e96:	2200      	movs	r2, #0
 8004e98:	4b9a      	ldr	r3, [pc, #616]	; (8005104 <_dtoa_r+0x370>)
 8004e9a:	f7fc fcaf 	bl	80017fc <__aeabi_dsub>
 8004e9e:	4a9a      	ldr	r2, [pc, #616]	; (8005108 <_dtoa_r+0x374>)
 8004ea0:	4b9a      	ldr	r3, [pc, #616]	; (800510c <_dtoa_r+0x378>)
 8004ea2:	f7fc fa3f 	bl	8001324 <__aeabi_dmul>
 8004ea6:	4a9a      	ldr	r2, [pc, #616]	; (8005110 <_dtoa_r+0x37c>)
 8004ea8:	4b9a      	ldr	r3, [pc, #616]	; (8005114 <_dtoa_r+0x380>)
 8004eaa:	f7fb fafd 	bl	80004a8 <__aeabi_dadd>
 8004eae:	0004      	movs	r4, r0
 8004eb0:	0030      	movs	r0, r6
 8004eb2:	000d      	movs	r5, r1
 8004eb4:	f7fd f888 	bl	8001fc8 <__aeabi_i2d>
 8004eb8:	4a97      	ldr	r2, [pc, #604]	; (8005118 <_dtoa_r+0x384>)
 8004eba:	4b98      	ldr	r3, [pc, #608]	; (800511c <_dtoa_r+0x388>)
 8004ebc:	f7fc fa32 	bl	8001324 <__aeabi_dmul>
 8004ec0:	0002      	movs	r2, r0
 8004ec2:	000b      	movs	r3, r1
 8004ec4:	0020      	movs	r0, r4
 8004ec6:	0029      	movs	r1, r5
 8004ec8:	f7fb faee 	bl	80004a8 <__aeabi_dadd>
 8004ecc:	0004      	movs	r4, r0
 8004ece:	000d      	movs	r5, r1
 8004ed0:	f7fd f844 	bl	8001f5c <__aeabi_d2iz>
 8004ed4:	2200      	movs	r2, #0
 8004ed6:	9002      	str	r0, [sp, #8]
 8004ed8:	2300      	movs	r3, #0
 8004eda:	0020      	movs	r0, r4
 8004edc:	0029      	movs	r1, r5
 8004ede:	f7fb fabb 	bl	8000458 <__aeabi_dcmplt>
 8004ee2:	2800      	cmp	r0, #0
 8004ee4:	d00b      	beq.n	8004efe <_dtoa_r+0x16a>
 8004ee6:	9802      	ldr	r0, [sp, #8]
 8004ee8:	f7fd f86e 	bl	8001fc8 <__aeabi_i2d>
 8004eec:	002b      	movs	r3, r5
 8004eee:	0022      	movs	r2, r4
 8004ef0:	f7fb faac 	bl	800044c <__aeabi_dcmpeq>
 8004ef4:	4243      	negs	r3, r0
 8004ef6:	4158      	adcs	r0, r3
 8004ef8:	9b02      	ldr	r3, [sp, #8]
 8004efa:	1a1b      	subs	r3, r3, r0
 8004efc:	9302      	str	r3, [sp, #8]
 8004efe:	2301      	movs	r3, #1
 8004f00:	9316      	str	r3, [sp, #88]	; 0x58
 8004f02:	9b02      	ldr	r3, [sp, #8]
 8004f04:	2b16      	cmp	r3, #22
 8004f06:	d80f      	bhi.n	8004f28 <_dtoa_r+0x194>
 8004f08:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004f0a:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004f0c:	00da      	lsls	r2, r3, #3
 8004f0e:	4b84      	ldr	r3, [pc, #528]	; (8005120 <_dtoa_r+0x38c>)
 8004f10:	189b      	adds	r3, r3, r2
 8004f12:	681a      	ldr	r2, [r3, #0]
 8004f14:	685b      	ldr	r3, [r3, #4]
 8004f16:	f7fb fa9f 	bl	8000458 <__aeabi_dcmplt>
 8004f1a:	2800      	cmp	r0, #0
 8004f1c:	d049      	beq.n	8004fb2 <_dtoa_r+0x21e>
 8004f1e:	9b02      	ldr	r3, [sp, #8]
 8004f20:	3b01      	subs	r3, #1
 8004f22:	9302      	str	r3, [sp, #8]
 8004f24:	2300      	movs	r3, #0
 8004f26:	9316      	str	r3, [sp, #88]	; 0x58
 8004f28:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004f2a:	1b9e      	subs	r6, r3, r6
 8004f2c:	2300      	movs	r3, #0
 8004f2e:	930a      	str	r3, [sp, #40]	; 0x28
 8004f30:	0033      	movs	r3, r6
 8004f32:	3b01      	subs	r3, #1
 8004f34:	930d      	str	r3, [sp, #52]	; 0x34
 8004f36:	d504      	bpl.n	8004f42 <_dtoa_r+0x1ae>
 8004f38:	2301      	movs	r3, #1
 8004f3a:	1b9b      	subs	r3, r3, r6
 8004f3c:	930a      	str	r3, [sp, #40]	; 0x28
 8004f3e:	2300      	movs	r3, #0
 8004f40:	930d      	str	r3, [sp, #52]	; 0x34
 8004f42:	9b02      	ldr	r3, [sp, #8]
 8004f44:	2b00      	cmp	r3, #0
 8004f46:	db36      	blt.n	8004fb6 <_dtoa_r+0x222>
 8004f48:	9a02      	ldr	r2, [sp, #8]
 8004f4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004f4c:	4694      	mov	ip, r2
 8004f4e:	4463      	add	r3, ip
 8004f50:	930d      	str	r3, [sp, #52]	; 0x34
 8004f52:	2300      	movs	r3, #0
 8004f54:	9215      	str	r2, [sp, #84]	; 0x54
 8004f56:	930e      	str	r3, [sp, #56]	; 0x38
 8004f58:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004f5a:	2401      	movs	r4, #1
 8004f5c:	2b09      	cmp	r3, #9
 8004f5e:	d864      	bhi.n	800502a <_dtoa_r+0x296>
 8004f60:	2b05      	cmp	r3, #5
 8004f62:	dd02      	ble.n	8004f6a <_dtoa_r+0x1d6>
 8004f64:	2400      	movs	r4, #0
 8004f66:	3b04      	subs	r3, #4
 8004f68:	9322      	str	r3, [sp, #136]	; 0x88
 8004f6a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004f6c:	1e98      	subs	r0, r3, #2
 8004f6e:	2803      	cmp	r0, #3
 8004f70:	d864      	bhi.n	800503c <_dtoa_r+0x2a8>
 8004f72:	f7fb f8d1 	bl	8000118 <__gnu_thumb1_case_uqi>
 8004f76:	3829      	.short	0x3829
 8004f78:	5836      	.short	0x5836
 8004f7a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004f7c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8004f7e:	189e      	adds	r6, r3, r2
 8004f80:	4b68      	ldr	r3, [pc, #416]	; (8005124 <_dtoa_r+0x390>)
 8004f82:	18f2      	adds	r2, r6, r3
 8004f84:	2a20      	cmp	r2, #32
 8004f86:	dd0f      	ble.n	8004fa8 <_dtoa_r+0x214>
 8004f88:	2340      	movs	r3, #64	; 0x40
 8004f8a:	1a9b      	subs	r3, r3, r2
 8004f8c:	409d      	lsls	r5, r3
 8004f8e:	4b66      	ldr	r3, [pc, #408]	; (8005128 <_dtoa_r+0x394>)
 8004f90:	9802      	ldr	r0, [sp, #8]
 8004f92:	18f3      	adds	r3, r6, r3
 8004f94:	40d8      	lsrs	r0, r3
 8004f96:	4328      	orrs	r0, r5
 8004f98:	f7fd f846 	bl	8002028 <__aeabi_ui2d>
 8004f9c:	2301      	movs	r3, #1
 8004f9e:	4c63      	ldr	r4, [pc, #396]	; (800512c <_dtoa_r+0x398>)
 8004fa0:	3e01      	subs	r6, #1
 8004fa2:	1909      	adds	r1, r1, r4
 8004fa4:	9318      	str	r3, [sp, #96]	; 0x60
 8004fa6:	e776      	b.n	8004e96 <_dtoa_r+0x102>
 8004fa8:	2320      	movs	r3, #32
 8004faa:	9802      	ldr	r0, [sp, #8]
 8004fac:	1a9b      	subs	r3, r3, r2
 8004fae:	4098      	lsls	r0, r3
 8004fb0:	e7f2      	b.n	8004f98 <_dtoa_r+0x204>
 8004fb2:	9016      	str	r0, [sp, #88]	; 0x58
 8004fb4:	e7b8      	b.n	8004f28 <_dtoa_r+0x194>
 8004fb6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004fb8:	9a02      	ldr	r2, [sp, #8]
 8004fba:	1a9b      	subs	r3, r3, r2
 8004fbc:	930a      	str	r3, [sp, #40]	; 0x28
 8004fbe:	4253      	negs	r3, r2
 8004fc0:	930e      	str	r3, [sp, #56]	; 0x38
 8004fc2:	2300      	movs	r3, #0
 8004fc4:	9315      	str	r3, [sp, #84]	; 0x54
 8004fc6:	e7c7      	b.n	8004f58 <_dtoa_r+0x1c4>
 8004fc8:	2300      	movs	r3, #0
 8004fca:	930f      	str	r3, [sp, #60]	; 0x3c
 8004fcc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004fce:	930c      	str	r3, [sp, #48]	; 0x30
 8004fd0:	9307      	str	r3, [sp, #28]
 8004fd2:	2b00      	cmp	r3, #0
 8004fd4:	dc13      	bgt.n	8004ffe <_dtoa_r+0x26a>
 8004fd6:	2301      	movs	r3, #1
 8004fd8:	001a      	movs	r2, r3
 8004fda:	930c      	str	r3, [sp, #48]	; 0x30
 8004fdc:	9307      	str	r3, [sp, #28]
 8004fde:	9223      	str	r2, [sp, #140]	; 0x8c
 8004fe0:	e00d      	b.n	8004ffe <_dtoa_r+0x26a>
 8004fe2:	2301      	movs	r3, #1
 8004fe4:	e7f1      	b.n	8004fca <_dtoa_r+0x236>
 8004fe6:	2300      	movs	r3, #0
 8004fe8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8004fea:	930f      	str	r3, [sp, #60]	; 0x3c
 8004fec:	4694      	mov	ip, r2
 8004fee:	9b02      	ldr	r3, [sp, #8]
 8004ff0:	4463      	add	r3, ip
 8004ff2:	930c      	str	r3, [sp, #48]	; 0x30
 8004ff4:	3301      	adds	r3, #1
 8004ff6:	9307      	str	r3, [sp, #28]
 8004ff8:	2b00      	cmp	r3, #0
 8004ffa:	dc00      	bgt.n	8004ffe <_dtoa_r+0x26a>
 8004ffc:	2301      	movs	r3, #1
 8004ffe:	2200      	movs	r2, #0
 8005000:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8005002:	6042      	str	r2, [r0, #4]
 8005004:	3204      	adds	r2, #4
 8005006:	0015      	movs	r5, r2
 8005008:	3514      	adds	r5, #20
 800500a:	6841      	ldr	r1, [r0, #4]
 800500c:	429d      	cmp	r5, r3
 800500e:	d919      	bls.n	8005044 <_dtoa_r+0x2b0>
 8005010:	0038      	movs	r0, r7
 8005012:	f000 fcfb 	bl	8005a0c <_Balloc>
 8005016:	9006      	str	r0, [sp, #24]
 8005018:	2800      	cmp	r0, #0
 800501a:	d117      	bne.n	800504c <_dtoa_r+0x2b8>
 800501c:	21d5      	movs	r1, #213	; 0xd5
 800501e:	0002      	movs	r2, r0
 8005020:	4b43      	ldr	r3, [pc, #268]	; (8005130 <_dtoa_r+0x39c>)
 8005022:	0049      	lsls	r1, r1, #1
 8005024:	e6cb      	b.n	8004dbe <_dtoa_r+0x2a>
 8005026:	2301      	movs	r3, #1
 8005028:	e7de      	b.n	8004fe8 <_dtoa_r+0x254>
 800502a:	2300      	movs	r3, #0
 800502c:	940f      	str	r4, [sp, #60]	; 0x3c
 800502e:	9322      	str	r3, [sp, #136]	; 0x88
 8005030:	3b01      	subs	r3, #1
 8005032:	930c      	str	r3, [sp, #48]	; 0x30
 8005034:	9307      	str	r3, [sp, #28]
 8005036:	2200      	movs	r2, #0
 8005038:	3313      	adds	r3, #19
 800503a:	e7d0      	b.n	8004fde <_dtoa_r+0x24a>
 800503c:	2301      	movs	r3, #1
 800503e:	930f      	str	r3, [sp, #60]	; 0x3c
 8005040:	3b02      	subs	r3, #2
 8005042:	e7f6      	b.n	8005032 <_dtoa_r+0x29e>
 8005044:	3101      	adds	r1, #1
 8005046:	6041      	str	r1, [r0, #4]
 8005048:	0052      	lsls	r2, r2, #1
 800504a:	e7dc      	b.n	8005006 <_dtoa_r+0x272>
 800504c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800504e:	9a06      	ldr	r2, [sp, #24]
 8005050:	601a      	str	r2, [r3, #0]
 8005052:	9b07      	ldr	r3, [sp, #28]
 8005054:	2b0e      	cmp	r3, #14
 8005056:	d900      	bls.n	800505a <_dtoa_r+0x2c6>
 8005058:	e0eb      	b.n	8005232 <_dtoa_r+0x49e>
 800505a:	2c00      	cmp	r4, #0
 800505c:	d100      	bne.n	8005060 <_dtoa_r+0x2cc>
 800505e:	e0e8      	b.n	8005232 <_dtoa_r+0x49e>
 8005060:	9b02      	ldr	r3, [sp, #8]
 8005062:	2b00      	cmp	r3, #0
 8005064:	dd68      	ble.n	8005138 <_dtoa_r+0x3a4>
 8005066:	001a      	movs	r2, r3
 8005068:	210f      	movs	r1, #15
 800506a:	4b2d      	ldr	r3, [pc, #180]	; (8005120 <_dtoa_r+0x38c>)
 800506c:	400a      	ands	r2, r1
 800506e:	00d2      	lsls	r2, r2, #3
 8005070:	189b      	adds	r3, r3, r2
 8005072:	681d      	ldr	r5, [r3, #0]
 8005074:	685e      	ldr	r6, [r3, #4]
 8005076:	9b02      	ldr	r3, [sp, #8]
 8005078:	111c      	asrs	r4, r3, #4
 800507a:	2302      	movs	r3, #2
 800507c:	9310      	str	r3, [sp, #64]	; 0x40
 800507e:	9b02      	ldr	r3, [sp, #8]
 8005080:	05db      	lsls	r3, r3, #23
 8005082:	d50b      	bpl.n	800509c <_dtoa_r+0x308>
 8005084:	4b2b      	ldr	r3, [pc, #172]	; (8005134 <_dtoa_r+0x3a0>)
 8005086:	400c      	ands	r4, r1
 8005088:	6a1a      	ldr	r2, [r3, #32]
 800508a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800508c:	9812      	ldr	r0, [sp, #72]	; 0x48
 800508e:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005090:	f7fb fd46 	bl	8000b20 <__aeabi_ddiv>
 8005094:	2303      	movs	r3, #3
 8005096:	9008      	str	r0, [sp, #32]
 8005098:	9109      	str	r1, [sp, #36]	; 0x24
 800509a:	9310      	str	r3, [sp, #64]	; 0x40
 800509c:	4b25      	ldr	r3, [pc, #148]	; (8005134 <_dtoa_r+0x3a0>)
 800509e:	9314      	str	r3, [sp, #80]	; 0x50
 80050a0:	2c00      	cmp	r4, #0
 80050a2:	d108      	bne.n	80050b6 <_dtoa_r+0x322>
 80050a4:	9808      	ldr	r0, [sp, #32]
 80050a6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80050a8:	002a      	movs	r2, r5
 80050aa:	0033      	movs	r3, r6
 80050ac:	f7fb fd38 	bl	8000b20 <__aeabi_ddiv>
 80050b0:	9008      	str	r0, [sp, #32]
 80050b2:	9109      	str	r1, [sp, #36]	; 0x24
 80050b4:	e05c      	b.n	8005170 <_dtoa_r+0x3dc>
 80050b6:	2301      	movs	r3, #1
 80050b8:	421c      	tst	r4, r3
 80050ba:	d00b      	beq.n	80050d4 <_dtoa_r+0x340>
 80050bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80050be:	0028      	movs	r0, r5
 80050c0:	3301      	adds	r3, #1
 80050c2:	9310      	str	r3, [sp, #64]	; 0x40
 80050c4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80050c6:	0031      	movs	r1, r6
 80050c8:	681a      	ldr	r2, [r3, #0]
 80050ca:	685b      	ldr	r3, [r3, #4]
 80050cc:	f7fc f92a 	bl	8001324 <__aeabi_dmul>
 80050d0:	0005      	movs	r5, r0
 80050d2:	000e      	movs	r6, r1
 80050d4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80050d6:	1064      	asrs	r4, r4, #1
 80050d8:	3308      	adds	r3, #8
 80050da:	e7e0      	b.n	800509e <_dtoa_r+0x30a>
 80050dc:	080075b5 	.word	0x080075b5
 80050e0:	080075cc 	.word	0x080075cc
 80050e4:	7ff00000 	.word	0x7ff00000
 80050e8:	0000270f 	.word	0x0000270f
 80050ec:	080075b1 	.word	0x080075b1
 80050f0:	080075b4 	.word	0x080075b4
 80050f4:	08007584 	.word	0x08007584
 80050f8:	08007585 	.word	0x08007585
 80050fc:	3ff00000 	.word	0x3ff00000
 8005100:	fffffc01 	.word	0xfffffc01
 8005104:	3ff80000 	.word	0x3ff80000
 8005108:	636f4361 	.word	0x636f4361
 800510c:	3fd287a7 	.word	0x3fd287a7
 8005110:	8b60c8b3 	.word	0x8b60c8b3
 8005114:	3fc68a28 	.word	0x3fc68a28
 8005118:	509f79fb 	.word	0x509f79fb
 800511c:	3fd34413 	.word	0x3fd34413
 8005120:	080076c0 	.word	0x080076c0
 8005124:	00000432 	.word	0x00000432
 8005128:	00000412 	.word	0x00000412
 800512c:	fe100000 	.word	0xfe100000
 8005130:	08007627 	.word	0x08007627
 8005134:	08007698 	.word	0x08007698
 8005138:	2302      	movs	r3, #2
 800513a:	9310      	str	r3, [sp, #64]	; 0x40
 800513c:	9b02      	ldr	r3, [sp, #8]
 800513e:	2b00      	cmp	r3, #0
 8005140:	d016      	beq.n	8005170 <_dtoa_r+0x3dc>
 8005142:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005144:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005146:	425c      	negs	r4, r3
 8005148:	230f      	movs	r3, #15
 800514a:	4ab6      	ldr	r2, [pc, #728]	; (8005424 <_dtoa_r+0x690>)
 800514c:	4023      	ands	r3, r4
 800514e:	00db      	lsls	r3, r3, #3
 8005150:	18d3      	adds	r3, r2, r3
 8005152:	681a      	ldr	r2, [r3, #0]
 8005154:	685b      	ldr	r3, [r3, #4]
 8005156:	f7fc f8e5 	bl	8001324 <__aeabi_dmul>
 800515a:	2601      	movs	r6, #1
 800515c:	2300      	movs	r3, #0
 800515e:	9008      	str	r0, [sp, #32]
 8005160:	9109      	str	r1, [sp, #36]	; 0x24
 8005162:	4db1      	ldr	r5, [pc, #708]	; (8005428 <_dtoa_r+0x694>)
 8005164:	1124      	asrs	r4, r4, #4
 8005166:	2c00      	cmp	r4, #0
 8005168:	d000      	beq.n	800516c <_dtoa_r+0x3d8>
 800516a:	e094      	b.n	8005296 <_dtoa_r+0x502>
 800516c:	2b00      	cmp	r3, #0
 800516e:	d19f      	bne.n	80050b0 <_dtoa_r+0x31c>
 8005170:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005172:	2b00      	cmp	r3, #0
 8005174:	d100      	bne.n	8005178 <_dtoa_r+0x3e4>
 8005176:	e09b      	b.n	80052b0 <_dtoa_r+0x51c>
 8005178:	9c08      	ldr	r4, [sp, #32]
 800517a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800517c:	2200      	movs	r2, #0
 800517e:	0020      	movs	r0, r4
 8005180:	0029      	movs	r1, r5
 8005182:	4baa      	ldr	r3, [pc, #680]	; (800542c <_dtoa_r+0x698>)
 8005184:	f7fb f968 	bl	8000458 <__aeabi_dcmplt>
 8005188:	2800      	cmp	r0, #0
 800518a:	d100      	bne.n	800518e <_dtoa_r+0x3fa>
 800518c:	e090      	b.n	80052b0 <_dtoa_r+0x51c>
 800518e:	9b07      	ldr	r3, [sp, #28]
 8005190:	2b00      	cmp	r3, #0
 8005192:	d100      	bne.n	8005196 <_dtoa_r+0x402>
 8005194:	e08c      	b.n	80052b0 <_dtoa_r+0x51c>
 8005196:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005198:	2b00      	cmp	r3, #0
 800519a:	dd46      	ble.n	800522a <_dtoa_r+0x496>
 800519c:	9b02      	ldr	r3, [sp, #8]
 800519e:	2200      	movs	r2, #0
 80051a0:	0020      	movs	r0, r4
 80051a2:	0029      	movs	r1, r5
 80051a4:	1e5e      	subs	r6, r3, #1
 80051a6:	4ba2      	ldr	r3, [pc, #648]	; (8005430 <_dtoa_r+0x69c>)
 80051a8:	f7fc f8bc 	bl	8001324 <__aeabi_dmul>
 80051ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80051ae:	9008      	str	r0, [sp, #32]
 80051b0:	9109      	str	r1, [sp, #36]	; 0x24
 80051b2:	3301      	adds	r3, #1
 80051b4:	9310      	str	r3, [sp, #64]	; 0x40
 80051b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80051b8:	9810      	ldr	r0, [sp, #64]	; 0x40
 80051ba:	9c08      	ldr	r4, [sp, #32]
 80051bc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80051be:	9314      	str	r3, [sp, #80]	; 0x50
 80051c0:	f7fc ff02 	bl	8001fc8 <__aeabi_i2d>
 80051c4:	0022      	movs	r2, r4
 80051c6:	002b      	movs	r3, r5
 80051c8:	f7fc f8ac 	bl	8001324 <__aeabi_dmul>
 80051cc:	2200      	movs	r2, #0
 80051ce:	4b99      	ldr	r3, [pc, #612]	; (8005434 <_dtoa_r+0x6a0>)
 80051d0:	f7fb f96a 	bl	80004a8 <__aeabi_dadd>
 80051d4:	9010      	str	r0, [sp, #64]	; 0x40
 80051d6:	9111      	str	r1, [sp, #68]	; 0x44
 80051d8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80051da:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80051dc:	9208      	str	r2, [sp, #32]
 80051de:	9309      	str	r3, [sp, #36]	; 0x24
 80051e0:	4a95      	ldr	r2, [pc, #596]	; (8005438 <_dtoa_r+0x6a4>)
 80051e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80051e4:	4694      	mov	ip, r2
 80051e6:	4463      	add	r3, ip
 80051e8:	9317      	str	r3, [sp, #92]	; 0x5c
 80051ea:	9309      	str	r3, [sp, #36]	; 0x24
 80051ec:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80051ee:	2b00      	cmp	r3, #0
 80051f0:	d161      	bne.n	80052b6 <_dtoa_r+0x522>
 80051f2:	2200      	movs	r2, #0
 80051f4:	0020      	movs	r0, r4
 80051f6:	0029      	movs	r1, r5
 80051f8:	4b90      	ldr	r3, [pc, #576]	; (800543c <_dtoa_r+0x6a8>)
 80051fa:	f7fc faff 	bl	80017fc <__aeabi_dsub>
 80051fe:	9a08      	ldr	r2, [sp, #32]
 8005200:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005202:	0004      	movs	r4, r0
 8005204:	000d      	movs	r5, r1
 8005206:	f7fb f93b 	bl	8000480 <__aeabi_dcmpgt>
 800520a:	2800      	cmp	r0, #0
 800520c:	d000      	beq.n	8005210 <_dtoa_r+0x47c>
 800520e:	e2af      	b.n	8005770 <_dtoa_r+0x9dc>
 8005210:	488b      	ldr	r0, [pc, #556]	; (8005440 <_dtoa_r+0x6ac>)
 8005212:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005214:	4684      	mov	ip, r0
 8005216:	4461      	add	r1, ip
 8005218:	000b      	movs	r3, r1
 800521a:	0020      	movs	r0, r4
 800521c:	0029      	movs	r1, r5
 800521e:	9a08      	ldr	r2, [sp, #32]
 8005220:	f7fb f91a 	bl	8000458 <__aeabi_dcmplt>
 8005224:	2800      	cmp	r0, #0
 8005226:	d000      	beq.n	800522a <_dtoa_r+0x496>
 8005228:	e29f      	b.n	800576a <_dtoa_r+0x9d6>
 800522a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800522c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800522e:	9308      	str	r3, [sp, #32]
 8005230:	9409      	str	r4, [sp, #36]	; 0x24
 8005232:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005234:	2b00      	cmp	r3, #0
 8005236:	da00      	bge.n	800523a <_dtoa_r+0x4a6>
 8005238:	e172      	b.n	8005520 <_dtoa_r+0x78c>
 800523a:	9a02      	ldr	r2, [sp, #8]
 800523c:	2a0e      	cmp	r2, #14
 800523e:	dd00      	ble.n	8005242 <_dtoa_r+0x4ae>
 8005240:	e16e      	b.n	8005520 <_dtoa_r+0x78c>
 8005242:	4b78      	ldr	r3, [pc, #480]	; (8005424 <_dtoa_r+0x690>)
 8005244:	00d2      	lsls	r2, r2, #3
 8005246:	189b      	adds	r3, r3, r2
 8005248:	685c      	ldr	r4, [r3, #4]
 800524a:	681b      	ldr	r3, [r3, #0]
 800524c:	930a      	str	r3, [sp, #40]	; 0x28
 800524e:	940b      	str	r4, [sp, #44]	; 0x2c
 8005250:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005252:	2b00      	cmp	r3, #0
 8005254:	db00      	blt.n	8005258 <_dtoa_r+0x4c4>
 8005256:	e0f7      	b.n	8005448 <_dtoa_r+0x6b4>
 8005258:	9b07      	ldr	r3, [sp, #28]
 800525a:	2b00      	cmp	r3, #0
 800525c:	dd00      	ble.n	8005260 <_dtoa_r+0x4cc>
 800525e:	e0f3      	b.n	8005448 <_dtoa_r+0x6b4>
 8005260:	d000      	beq.n	8005264 <_dtoa_r+0x4d0>
 8005262:	e282      	b.n	800576a <_dtoa_r+0x9d6>
 8005264:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005266:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005268:	2200      	movs	r2, #0
 800526a:	4b74      	ldr	r3, [pc, #464]	; (800543c <_dtoa_r+0x6a8>)
 800526c:	f7fc f85a 	bl	8001324 <__aeabi_dmul>
 8005270:	9a08      	ldr	r2, [sp, #32]
 8005272:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005274:	f7fb f90e 	bl	8000494 <__aeabi_dcmpge>
 8005278:	9e07      	ldr	r6, [sp, #28]
 800527a:	0035      	movs	r5, r6
 800527c:	2800      	cmp	r0, #0
 800527e:	d000      	beq.n	8005282 <_dtoa_r+0x4ee>
 8005280:	e259      	b.n	8005736 <_dtoa_r+0x9a2>
 8005282:	9b06      	ldr	r3, [sp, #24]
 8005284:	9a06      	ldr	r2, [sp, #24]
 8005286:	3301      	adds	r3, #1
 8005288:	9308      	str	r3, [sp, #32]
 800528a:	2331      	movs	r3, #49	; 0x31
 800528c:	7013      	strb	r3, [r2, #0]
 800528e:	9b02      	ldr	r3, [sp, #8]
 8005290:	3301      	adds	r3, #1
 8005292:	9302      	str	r3, [sp, #8]
 8005294:	e254      	b.n	8005740 <_dtoa_r+0x9ac>
 8005296:	4234      	tst	r4, r6
 8005298:	d007      	beq.n	80052aa <_dtoa_r+0x516>
 800529a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800529c:	3301      	adds	r3, #1
 800529e:	9310      	str	r3, [sp, #64]	; 0x40
 80052a0:	682a      	ldr	r2, [r5, #0]
 80052a2:	686b      	ldr	r3, [r5, #4]
 80052a4:	f7fc f83e 	bl	8001324 <__aeabi_dmul>
 80052a8:	0033      	movs	r3, r6
 80052aa:	1064      	asrs	r4, r4, #1
 80052ac:	3508      	adds	r5, #8
 80052ae:	e75a      	b.n	8005166 <_dtoa_r+0x3d2>
 80052b0:	9e02      	ldr	r6, [sp, #8]
 80052b2:	9b07      	ldr	r3, [sp, #28]
 80052b4:	e780      	b.n	80051b8 <_dtoa_r+0x424>
 80052b6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80052b8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80052ba:	1e5a      	subs	r2, r3, #1
 80052bc:	4b59      	ldr	r3, [pc, #356]	; (8005424 <_dtoa_r+0x690>)
 80052be:	00d2      	lsls	r2, r2, #3
 80052c0:	189b      	adds	r3, r3, r2
 80052c2:	681a      	ldr	r2, [r3, #0]
 80052c4:	685b      	ldr	r3, [r3, #4]
 80052c6:	2900      	cmp	r1, #0
 80052c8:	d051      	beq.n	800536e <_dtoa_r+0x5da>
 80052ca:	2000      	movs	r0, #0
 80052cc:	495d      	ldr	r1, [pc, #372]	; (8005444 <_dtoa_r+0x6b0>)
 80052ce:	f7fb fc27 	bl	8000b20 <__aeabi_ddiv>
 80052d2:	9a08      	ldr	r2, [sp, #32]
 80052d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80052d6:	f7fc fa91 	bl	80017fc <__aeabi_dsub>
 80052da:	9a06      	ldr	r2, [sp, #24]
 80052dc:	9b06      	ldr	r3, [sp, #24]
 80052de:	4694      	mov	ip, r2
 80052e0:	9317      	str	r3, [sp, #92]	; 0x5c
 80052e2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80052e4:	9010      	str	r0, [sp, #64]	; 0x40
 80052e6:	9111      	str	r1, [sp, #68]	; 0x44
 80052e8:	4463      	add	r3, ip
 80052ea:	9319      	str	r3, [sp, #100]	; 0x64
 80052ec:	0029      	movs	r1, r5
 80052ee:	0020      	movs	r0, r4
 80052f0:	f7fc fe34 	bl	8001f5c <__aeabi_d2iz>
 80052f4:	9014      	str	r0, [sp, #80]	; 0x50
 80052f6:	f7fc fe67 	bl	8001fc8 <__aeabi_i2d>
 80052fa:	0002      	movs	r2, r0
 80052fc:	000b      	movs	r3, r1
 80052fe:	0020      	movs	r0, r4
 8005300:	0029      	movs	r1, r5
 8005302:	f7fc fa7b 	bl	80017fc <__aeabi_dsub>
 8005306:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005308:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800530a:	3301      	adds	r3, #1
 800530c:	9308      	str	r3, [sp, #32]
 800530e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005310:	0004      	movs	r4, r0
 8005312:	3330      	adds	r3, #48	; 0x30
 8005314:	7013      	strb	r3, [r2, #0]
 8005316:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005318:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800531a:	000d      	movs	r5, r1
 800531c:	f7fb f89c 	bl	8000458 <__aeabi_dcmplt>
 8005320:	2800      	cmp	r0, #0
 8005322:	d175      	bne.n	8005410 <_dtoa_r+0x67c>
 8005324:	0022      	movs	r2, r4
 8005326:	002b      	movs	r3, r5
 8005328:	2000      	movs	r0, #0
 800532a:	4940      	ldr	r1, [pc, #256]	; (800542c <_dtoa_r+0x698>)
 800532c:	f7fc fa66 	bl	80017fc <__aeabi_dsub>
 8005330:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005332:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005334:	f7fb f890 	bl	8000458 <__aeabi_dcmplt>
 8005338:	2800      	cmp	r0, #0
 800533a:	d000      	beq.n	800533e <_dtoa_r+0x5aa>
 800533c:	e0d2      	b.n	80054e4 <_dtoa_r+0x750>
 800533e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005340:	9a08      	ldr	r2, [sp, #32]
 8005342:	4293      	cmp	r3, r2
 8005344:	d100      	bne.n	8005348 <_dtoa_r+0x5b4>
 8005346:	e770      	b.n	800522a <_dtoa_r+0x496>
 8005348:	9810      	ldr	r0, [sp, #64]	; 0x40
 800534a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800534c:	2200      	movs	r2, #0
 800534e:	4b38      	ldr	r3, [pc, #224]	; (8005430 <_dtoa_r+0x69c>)
 8005350:	f7fb ffe8 	bl	8001324 <__aeabi_dmul>
 8005354:	4b36      	ldr	r3, [pc, #216]	; (8005430 <_dtoa_r+0x69c>)
 8005356:	9010      	str	r0, [sp, #64]	; 0x40
 8005358:	9111      	str	r1, [sp, #68]	; 0x44
 800535a:	2200      	movs	r2, #0
 800535c:	0020      	movs	r0, r4
 800535e:	0029      	movs	r1, r5
 8005360:	f7fb ffe0 	bl	8001324 <__aeabi_dmul>
 8005364:	9b08      	ldr	r3, [sp, #32]
 8005366:	0004      	movs	r4, r0
 8005368:	000d      	movs	r5, r1
 800536a:	9317      	str	r3, [sp, #92]	; 0x5c
 800536c:	e7be      	b.n	80052ec <_dtoa_r+0x558>
 800536e:	9808      	ldr	r0, [sp, #32]
 8005370:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005372:	f7fb ffd7 	bl	8001324 <__aeabi_dmul>
 8005376:	9a06      	ldr	r2, [sp, #24]
 8005378:	9b06      	ldr	r3, [sp, #24]
 800537a:	4694      	mov	ip, r2
 800537c:	9308      	str	r3, [sp, #32]
 800537e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005380:	9010      	str	r0, [sp, #64]	; 0x40
 8005382:	9111      	str	r1, [sp, #68]	; 0x44
 8005384:	4463      	add	r3, ip
 8005386:	9319      	str	r3, [sp, #100]	; 0x64
 8005388:	0029      	movs	r1, r5
 800538a:	0020      	movs	r0, r4
 800538c:	f7fc fde6 	bl	8001f5c <__aeabi_d2iz>
 8005390:	9017      	str	r0, [sp, #92]	; 0x5c
 8005392:	f7fc fe19 	bl	8001fc8 <__aeabi_i2d>
 8005396:	0002      	movs	r2, r0
 8005398:	000b      	movs	r3, r1
 800539a:	0020      	movs	r0, r4
 800539c:	0029      	movs	r1, r5
 800539e:	f7fc fa2d 	bl	80017fc <__aeabi_dsub>
 80053a2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80053a4:	9a08      	ldr	r2, [sp, #32]
 80053a6:	3330      	adds	r3, #48	; 0x30
 80053a8:	7013      	strb	r3, [r2, #0]
 80053aa:	0013      	movs	r3, r2
 80053ac:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80053ae:	3301      	adds	r3, #1
 80053b0:	0004      	movs	r4, r0
 80053b2:	000d      	movs	r5, r1
 80053b4:	9308      	str	r3, [sp, #32]
 80053b6:	4293      	cmp	r3, r2
 80053b8:	d12c      	bne.n	8005414 <_dtoa_r+0x680>
 80053ba:	9810      	ldr	r0, [sp, #64]	; 0x40
 80053bc:	9911      	ldr	r1, [sp, #68]	; 0x44
 80053be:	9a06      	ldr	r2, [sp, #24]
 80053c0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80053c2:	4694      	mov	ip, r2
 80053c4:	4463      	add	r3, ip
 80053c6:	2200      	movs	r2, #0
 80053c8:	9308      	str	r3, [sp, #32]
 80053ca:	4b1e      	ldr	r3, [pc, #120]	; (8005444 <_dtoa_r+0x6b0>)
 80053cc:	f7fb f86c 	bl	80004a8 <__aeabi_dadd>
 80053d0:	0002      	movs	r2, r0
 80053d2:	000b      	movs	r3, r1
 80053d4:	0020      	movs	r0, r4
 80053d6:	0029      	movs	r1, r5
 80053d8:	f7fb f852 	bl	8000480 <__aeabi_dcmpgt>
 80053dc:	2800      	cmp	r0, #0
 80053de:	d000      	beq.n	80053e2 <_dtoa_r+0x64e>
 80053e0:	e080      	b.n	80054e4 <_dtoa_r+0x750>
 80053e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80053e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80053e6:	2000      	movs	r0, #0
 80053e8:	4916      	ldr	r1, [pc, #88]	; (8005444 <_dtoa_r+0x6b0>)
 80053ea:	f7fc fa07 	bl	80017fc <__aeabi_dsub>
 80053ee:	0002      	movs	r2, r0
 80053f0:	000b      	movs	r3, r1
 80053f2:	0020      	movs	r0, r4
 80053f4:	0029      	movs	r1, r5
 80053f6:	f7fb f82f 	bl	8000458 <__aeabi_dcmplt>
 80053fa:	2800      	cmp	r0, #0
 80053fc:	d100      	bne.n	8005400 <_dtoa_r+0x66c>
 80053fe:	e714      	b.n	800522a <_dtoa_r+0x496>
 8005400:	9b08      	ldr	r3, [sp, #32]
 8005402:	001a      	movs	r2, r3
 8005404:	3a01      	subs	r2, #1
 8005406:	9208      	str	r2, [sp, #32]
 8005408:	7812      	ldrb	r2, [r2, #0]
 800540a:	2a30      	cmp	r2, #48	; 0x30
 800540c:	d0f8      	beq.n	8005400 <_dtoa_r+0x66c>
 800540e:	9308      	str	r3, [sp, #32]
 8005410:	9602      	str	r6, [sp, #8]
 8005412:	e055      	b.n	80054c0 <_dtoa_r+0x72c>
 8005414:	2200      	movs	r2, #0
 8005416:	4b06      	ldr	r3, [pc, #24]	; (8005430 <_dtoa_r+0x69c>)
 8005418:	f7fb ff84 	bl	8001324 <__aeabi_dmul>
 800541c:	0004      	movs	r4, r0
 800541e:	000d      	movs	r5, r1
 8005420:	e7b2      	b.n	8005388 <_dtoa_r+0x5f4>
 8005422:	46c0      	nop			; (mov r8, r8)
 8005424:	080076c0 	.word	0x080076c0
 8005428:	08007698 	.word	0x08007698
 800542c:	3ff00000 	.word	0x3ff00000
 8005430:	40240000 	.word	0x40240000
 8005434:	401c0000 	.word	0x401c0000
 8005438:	fcc00000 	.word	0xfcc00000
 800543c:	40140000 	.word	0x40140000
 8005440:	7cc00000 	.word	0x7cc00000
 8005444:	3fe00000 	.word	0x3fe00000
 8005448:	9b07      	ldr	r3, [sp, #28]
 800544a:	9e06      	ldr	r6, [sp, #24]
 800544c:	3b01      	subs	r3, #1
 800544e:	199b      	adds	r3, r3, r6
 8005450:	930c      	str	r3, [sp, #48]	; 0x30
 8005452:	9c08      	ldr	r4, [sp, #32]
 8005454:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8005456:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005458:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800545a:	0020      	movs	r0, r4
 800545c:	0029      	movs	r1, r5
 800545e:	f7fb fb5f 	bl	8000b20 <__aeabi_ddiv>
 8005462:	f7fc fd7b 	bl	8001f5c <__aeabi_d2iz>
 8005466:	9007      	str	r0, [sp, #28]
 8005468:	f7fc fdae 	bl	8001fc8 <__aeabi_i2d>
 800546c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800546e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005470:	f7fb ff58 	bl	8001324 <__aeabi_dmul>
 8005474:	0002      	movs	r2, r0
 8005476:	000b      	movs	r3, r1
 8005478:	0020      	movs	r0, r4
 800547a:	0029      	movs	r1, r5
 800547c:	f7fc f9be 	bl	80017fc <__aeabi_dsub>
 8005480:	0033      	movs	r3, r6
 8005482:	9a07      	ldr	r2, [sp, #28]
 8005484:	3601      	adds	r6, #1
 8005486:	3230      	adds	r2, #48	; 0x30
 8005488:	701a      	strb	r2, [r3, #0]
 800548a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800548c:	9608      	str	r6, [sp, #32]
 800548e:	429a      	cmp	r2, r3
 8005490:	d139      	bne.n	8005506 <_dtoa_r+0x772>
 8005492:	0002      	movs	r2, r0
 8005494:	000b      	movs	r3, r1
 8005496:	f7fb f807 	bl	80004a8 <__aeabi_dadd>
 800549a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800549c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800549e:	0004      	movs	r4, r0
 80054a0:	000d      	movs	r5, r1
 80054a2:	f7fa ffed 	bl	8000480 <__aeabi_dcmpgt>
 80054a6:	2800      	cmp	r0, #0
 80054a8:	d11b      	bne.n	80054e2 <_dtoa_r+0x74e>
 80054aa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80054ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80054ae:	0020      	movs	r0, r4
 80054b0:	0029      	movs	r1, r5
 80054b2:	f7fa ffcb 	bl	800044c <__aeabi_dcmpeq>
 80054b6:	2800      	cmp	r0, #0
 80054b8:	d002      	beq.n	80054c0 <_dtoa_r+0x72c>
 80054ba:	9b07      	ldr	r3, [sp, #28]
 80054bc:	07db      	lsls	r3, r3, #31
 80054be:	d410      	bmi.n	80054e2 <_dtoa_r+0x74e>
 80054c0:	0038      	movs	r0, r7
 80054c2:	9905      	ldr	r1, [sp, #20]
 80054c4:	f000 fae6 	bl	8005a94 <_Bfree>
 80054c8:	2300      	movs	r3, #0
 80054ca:	9a08      	ldr	r2, [sp, #32]
 80054cc:	9802      	ldr	r0, [sp, #8]
 80054ce:	7013      	strb	r3, [r2, #0]
 80054d0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80054d2:	3001      	adds	r0, #1
 80054d4:	6018      	str	r0, [r3, #0]
 80054d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80054d8:	2b00      	cmp	r3, #0
 80054da:	d100      	bne.n	80054de <_dtoa_r+0x74a>
 80054dc:	e4a6      	b.n	8004e2c <_dtoa_r+0x98>
 80054de:	601a      	str	r2, [r3, #0]
 80054e0:	e4a4      	b.n	8004e2c <_dtoa_r+0x98>
 80054e2:	9e02      	ldr	r6, [sp, #8]
 80054e4:	9b08      	ldr	r3, [sp, #32]
 80054e6:	9308      	str	r3, [sp, #32]
 80054e8:	3b01      	subs	r3, #1
 80054ea:	781a      	ldrb	r2, [r3, #0]
 80054ec:	2a39      	cmp	r2, #57	; 0x39
 80054ee:	d106      	bne.n	80054fe <_dtoa_r+0x76a>
 80054f0:	9a06      	ldr	r2, [sp, #24]
 80054f2:	429a      	cmp	r2, r3
 80054f4:	d1f7      	bne.n	80054e6 <_dtoa_r+0x752>
 80054f6:	2230      	movs	r2, #48	; 0x30
 80054f8:	9906      	ldr	r1, [sp, #24]
 80054fa:	3601      	adds	r6, #1
 80054fc:	700a      	strb	r2, [r1, #0]
 80054fe:	781a      	ldrb	r2, [r3, #0]
 8005500:	3201      	adds	r2, #1
 8005502:	701a      	strb	r2, [r3, #0]
 8005504:	e784      	b.n	8005410 <_dtoa_r+0x67c>
 8005506:	2200      	movs	r2, #0
 8005508:	4baa      	ldr	r3, [pc, #680]	; (80057b4 <_dtoa_r+0xa20>)
 800550a:	f7fb ff0b 	bl	8001324 <__aeabi_dmul>
 800550e:	2200      	movs	r2, #0
 8005510:	2300      	movs	r3, #0
 8005512:	0004      	movs	r4, r0
 8005514:	000d      	movs	r5, r1
 8005516:	f7fa ff99 	bl	800044c <__aeabi_dcmpeq>
 800551a:	2800      	cmp	r0, #0
 800551c:	d09b      	beq.n	8005456 <_dtoa_r+0x6c2>
 800551e:	e7cf      	b.n	80054c0 <_dtoa_r+0x72c>
 8005520:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8005522:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8005524:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005526:	2d00      	cmp	r5, #0
 8005528:	d012      	beq.n	8005550 <_dtoa_r+0x7bc>
 800552a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800552c:	2a01      	cmp	r2, #1
 800552e:	dc66      	bgt.n	80055fe <_dtoa_r+0x86a>
 8005530:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8005532:	2a00      	cmp	r2, #0
 8005534:	d05d      	beq.n	80055f2 <_dtoa_r+0x85e>
 8005536:	4aa0      	ldr	r2, [pc, #640]	; (80057b8 <_dtoa_r+0xa24>)
 8005538:	189b      	adds	r3, r3, r2
 800553a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800553c:	2101      	movs	r1, #1
 800553e:	18d2      	adds	r2, r2, r3
 8005540:	920a      	str	r2, [sp, #40]	; 0x28
 8005542:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005544:	0038      	movs	r0, r7
 8005546:	18d3      	adds	r3, r2, r3
 8005548:	930d      	str	r3, [sp, #52]	; 0x34
 800554a:	f000 fb53 	bl	8005bf4 <__i2b>
 800554e:	0005      	movs	r5, r0
 8005550:	2c00      	cmp	r4, #0
 8005552:	dd0e      	ble.n	8005572 <_dtoa_r+0x7de>
 8005554:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005556:	2b00      	cmp	r3, #0
 8005558:	dd0b      	ble.n	8005572 <_dtoa_r+0x7de>
 800555a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800555c:	0023      	movs	r3, r4
 800555e:	4294      	cmp	r4, r2
 8005560:	dd00      	ble.n	8005564 <_dtoa_r+0x7d0>
 8005562:	0013      	movs	r3, r2
 8005564:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005566:	1ae4      	subs	r4, r4, r3
 8005568:	1ad2      	subs	r2, r2, r3
 800556a:	920a      	str	r2, [sp, #40]	; 0x28
 800556c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800556e:	1ad3      	subs	r3, r2, r3
 8005570:	930d      	str	r3, [sp, #52]	; 0x34
 8005572:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005574:	2b00      	cmp	r3, #0
 8005576:	d01f      	beq.n	80055b8 <_dtoa_r+0x824>
 8005578:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800557a:	2b00      	cmp	r3, #0
 800557c:	d054      	beq.n	8005628 <_dtoa_r+0x894>
 800557e:	2e00      	cmp	r6, #0
 8005580:	dd11      	ble.n	80055a6 <_dtoa_r+0x812>
 8005582:	0029      	movs	r1, r5
 8005584:	0032      	movs	r2, r6
 8005586:	0038      	movs	r0, r7
 8005588:	f000 fbfa 	bl	8005d80 <__pow5mult>
 800558c:	9a05      	ldr	r2, [sp, #20]
 800558e:	0001      	movs	r1, r0
 8005590:	0005      	movs	r5, r0
 8005592:	0038      	movs	r0, r7
 8005594:	f000 fb44 	bl	8005c20 <__multiply>
 8005598:	9905      	ldr	r1, [sp, #20]
 800559a:	9014      	str	r0, [sp, #80]	; 0x50
 800559c:	0038      	movs	r0, r7
 800559e:	f000 fa79 	bl	8005a94 <_Bfree>
 80055a2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80055a4:	9305      	str	r3, [sp, #20]
 80055a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80055a8:	1b9a      	subs	r2, r3, r6
 80055aa:	42b3      	cmp	r3, r6
 80055ac:	d004      	beq.n	80055b8 <_dtoa_r+0x824>
 80055ae:	0038      	movs	r0, r7
 80055b0:	9905      	ldr	r1, [sp, #20]
 80055b2:	f000 fbe5 	bl	8005d80 <__pow5mult>
 80055b6:	9005      	str	r0, [sp, #20]
 80055b8:	2101      	movs	r1, #1
 80055ba:	0038      	movs	r0, r7
 80055bc:	f000 fb1a 	bl	8005bf4 <__i2b>
 80055c0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80055c2:	0006      	movs	r6, r0
 80055c4:	2b00      	cmp	r3, #0
 80055c6:	dd31      	ble.n	800562c <_dtoa_r+0x898>
 80055c8:	001a      	movs	r2, r3
 80055ca:	0001      	movs	r1, r0
 80055cc:	0038      	movs	r0, r7
 80055ce:	f000 fbd7 	bl	8005d80 <__pow5mult>
 80055d2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80055d4:	0006      	movs	r6, r0
 80055d6:	2b01      	cmp	r3, #1
 80055d8:	dd2d      	ble.n	8005636 <_dtoa_r+0x8a2>
 80055da:	2300      	movs	r3, #0
 80055dc:	930e      	str	r3, [sp, #56]	; 0x38
 80055de:	6933      	ldr	r3, [r6, #16]
 80055e0:	3303      	adds	r3, #3
 80055e2:	009b      	lsls	r3, r3, #2
 80055e4:	18f3      	adds	r3, r6, r3
 80055e6:	6858      	ldr	r0, [r3, #4]
 80055e8:	f000 fabc 	bl	8005b64 <__hi0bits>
 80055ec:	2320      	movs	r3, #32
 80055ee:	1a18      	subs	r0, r3, r0
 80055f0:	e039      	b.n	8005666 <_dtoa_r+0x8d2>
 80055f2:	2336      	movs	r3, #54	; 0x36
 80055f4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80055f6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80055f8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80055fa:	1a9b      	subs	r3, r3, r2
 80055fc:	e79d      	b.n	800553a <_dtoa_r+0x7a6>
 80055fe:	9b07      	ldr	r3, [sp, #28]
 8005600:	1e5e      	subs	r6, r3, #1
 8005602:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005604:	42b3      	cmp	r3, r6
 8005606:	db07      	blt.n	8005618 <_dtoa_r+0x884>
 8005608:	1b9e      	subs	r6, r3, r6
 800560a:	9b07      	ldr	r3, [sp, #28]
 800560c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800560e:	2b00      	cmp	r3, #0
 8005610:	da93      	bge.n	800553a <_dtoa_r+0x7a6>
 8005612:	1ae4      	subs	r4, r4, r3
 8005614:	2300      	movs	r3, #0
 8005616:	e790      	b.n	800553a <_dtoa_r+0x7a6>
 8005618:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800561a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800561c:	1af3      	subs	r3, r6, r3
 800561e:	18d3      	adds	r3, r2, r3
 8005620:	960e      	str	r6, [sp, #56]	; 0x38
 8005622:	9315      	str	r3, [sp, #84]	; 0x54
 8005624:	2600      	movs	r6, #0
 8005626:	e7f0      	b.n	800560a <_dtoa_r+0x876>
 8005628:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800562a:	e7c0      	b.n	80055ae <_dtoa_r+0x81a>
 800562c:	2300      	movs	r3, #0
 800562e:	930e      	str	r3, [sp, #56]	; 0x38
 8005630:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005632:	2b01      	cmp	r3, #1
 8005634:	dc13      	bgt.n	800565e <_dtoa_r+0x8ca>
 8005636:	2300      	movs	r3, #0
 8005638:	930e      	str	r3, [sp, #56]	; 0x38
 800563a:	9b08      	ldr	r3, [sp, #32]
 800563c:	2b00      	cmp	r3, #0
 800563e:	d10e      	bne.n	800565e <_dtoa_r+0x8ca>
 8005640:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005642:	031b      	lsls	r3, r3, #12
 8005644:	d10b      	bne.n	800565e <_dtoa_r+0x8ca>
 8005646:	4b5d      	ldr	r3, [pc, #372]	; (80057bc <_dtoa_r+0xa28>)
 8005648:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800564a:	4213      	tst	r3, r2
 800564c:	d007      	beq.n	800565e <_dtoa_r+0x8ca>
 800564e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005650:	3301      	adds	r3, #1
 8005652:	930a      	str	r3, [sp, #40]	; 0x28
 8005654:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005656:	3301      	adds	r3, #1
 8005658:	930d      	str	r3, [sp, #52]	; 0x34
 800565a:	2301      	movs	r3, #1
 800565c:	930e      	str	r3, [sp, #56]	; 0x38
 800565e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005660:	2001      	movs	r0, #1
 8005662:	2b00      	cmp	r3, #0
 8005664:	d1bb      	bne.n	80055de <_dtoa_r+0x84a>
 8005666:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005668:	221f      	movs	r2, #31
 800566a:	1818      	adds	r0, r3, r0
 800566c:	0003      	movs	r3, r0
 800566e:	4013      	ands	r3, r2
 8005670:	4210      	tst	r0, r2
 8005672:	d046      	beq.n	8005702 <_dtoa_r+0x96e>
 8005674:	3201      	adds	r2, #1
 8005676:	1ad2      	subs	r2, r2, r3
 8005678:	2a04      	cmp	r2, #4
 800567a:	dd3f      	ble.n	80056fc <_dtoa_r+0x968>
 800567c:	221c      	movs	r2, #28
 800567e:	1ad3      	subs	r3, r2, r3
 8005680:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005682:	18e4      	adds	r4, r4, r3
 8005684:	18d2      	adds	r2, r2, r3
 8005686:	920a      	str	r2, [sp, #40]	; 0x28
 8005688:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800568a:	18d3      	adds	r3, r2, r3
 800568c:	930d      	str	r3, [sp, #52]	; 0x34
 800568e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005690:	2b00      	cmp	r3, #0
 8005692:	dd05      	ble.n	80056a0 <_dtoa_r+0x90c>
 8005694:	001a      	movs	r2, r3
 8005696:	0038      	movs	r0, r7
 8005698:	9905      	ldr	r1, [sp, #20]
 800569a:	f000 fbcd 	bl	8005e38 <__lshift>
 800569e:	9005      	str	r0, [sp, #20]
 80056a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80056a2:	2b00      	cmp	r3, #0
 80056a4:	dd05      	ble.n	80056b2 <_dtoa_r+0x91e>
 80056a6:	0031      	movs	r1, r6
 80056a8:	001a      	movs	r2, r3
 80056aa:	0038      	movs	r0, r7
 80056ac:	f000 fbc4 	bl	8005e38 <__lshift>
 80056b0:	0006      	movs	r6, r0
 80056b2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80056b4:	2b00      	cmp	r3, #0
 80056b6:	d026      	beq.n	8005706 <_dtoa_r+0x972>
 80056b8:	0031      	movs	r1, r6
 80056ba:	9805      	ldr	r0, [sp, #20]
 80056bc:	f000 fc2a 	bl	8005f14 <__mcmp>
 80056c0:	2800      	cmp	r0, #0
 80056c2:	da20      	bge.n	8005706 <_dtoa_r+0x972>
 80056c4:	9b02      	ldr	r3, [sp, #8]
 80056c6:	220a      	movs	r2, #10
 80056c8:	3b01      	subs	r3, #1
 80056ca:	9302      	str	r3, [sp, #8]
 80056cc:	0038      	movs	r0, r7
 80056ce:	2300      	movs	r3, #0
 80056d0:	9905      	ldr	r1, [sp, #20]
 80056d2:	f000 fa03 	bl	8005adc <__multadd>
 80056d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80056d8:	9005      	str	r0, [sp, #20]
 80056da:	2b00      	cmp	r3, #0
 80056dc:	d100      	bne.n	80056e0 <_dtoa_r+0x94c>
 80056de:	e166      	b.n	80059ae <_dtoa_r+0xc1a>
 80056e0:	2300      	movs	r3, #0
 80056e2:	0029      	movs	r1, r5
 80056e4:	220a      	movs	r2, #10
 80056e6:	0038      	movs	r0, r7
 80056e8:	f000 f9f8 	bl	8005adc <__multadd>
 80056ec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80056ee:	0005      	movs	r5, r0
 80056f0:	2b00      	cmp	r3, #0
 80056f2:	dc47      	bgt.n	8005784 <_dtoa_r+0x9f0>
 80056f4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80056f6:	2b02      	cmp	r3, #2
 80056f8:	dc0d      	bgt.n	8005716 <_dtoa_r+0x982>
 80056fa:	e043      	b.n	8005784 <_dtoa_r+0x9f0>
 80056fc:	2a04      	cmp	r2, #4
 80056fe:	d0c6      	beq.n	800568e <_dtoa_r+0x8fa>
 8005700:	0013      	movs	r3, r2
 8005702:	331c      	adds	r3, #28
 8005704:	e7bc      	b.n	8005680 <_dtoa_r+0x8ec>
 8005706:	9b07      	ldr	r3, [sp, #28]
 8005708:	2b00      	cmp	r3, #0
 800570a:	dc35      	bgt.n	8005778 <_dtoa_r+0x9e4>
 800570c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800570e:	2b02      	cmp	r3, #2
 8005710:	dd32      	ble.n	8005778 <_dtoa_r+0x9e4>
 8005712:	9b07      	ldr	r3, [sp, #28]
 8005714:	930c      	str	r3, [sp, #48]	; 0x30
 8005716:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005718:	2b00      	cmp	r3, #0
 800571a:	d10c      	bne.n	8005736 <_dtoa_r+0x9a2>
 800571c:	0031      	movs	r1, r6
 800571e:	2205      	movs	r2, #5
 8005720:	0038      	movs	r0, r7
 8005722:	f000 f9db 	bl	8005adc <__multadd>
 8005726:	0006      	movs	r6, r0
 8005728:	0001      	movs	r1, r0
 800572a:	9805      	ldr	r0, [sp, #20]
 800572c:	f000 fbf2 	bl	8005f14 <__mcmp>
 8005730:	2800      	cmp	r0, #0
 8005732:	dd00      	ble.n	8005736 <_dtoa_r+0x9a2>
 8005734:	e5a5      	b.n	8005282 <_dtoa_r+0x4ee>
 8005736:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005738:	43db      	mvns	r3, r3
 800573a:	9302      	str	r3, [sp, #8]
 800573c:	9b06      	ldr	r3, [sp, #24]
 800573e:	9308      	str	r3, [sp, #32]
 8005740:	2400      	movs	r4, #0
 8005742:	0031      	movs	r1, r6
 8005744:	0038      	movs	r0, r7
 8005746:	f000 f9a5 	bl	8005a94 <_Bfree>
 800574a:	2d00      	cmp	r5, #0
 800574c:	d100      	bne.n	8005750 <_dtoa_r+0x9bc>
 800574e:	e6b7      	b.n	80054c0 <_dtoa_r+0x72c>
 8005750:	2c00      	cmp	r4, #0
 8005752:	d005      	beq.n	8005760 <_dtoa_r+0x9cc>
 8005754:	42ac      	cmp	r4, r5
 8005756:	d003      	beq.n	8005760 <_dtoa_r+0x9cc>
 8005758:	0021      	movs	r1, r4
 800575a:	0038      	movs	r0, r7
 800575c:	f000 f99a 	bl	8005a94 <_Bfree>
 8005760:	0029      	movs	r1, r5
 8005762:	0038      	movs	r0, r7
 8005764:	f000 f996 	bl	8005a94 <_Bfree>
 8005768:	e6aa      	b.n	80054c0 <_dtoa_r+0x72c>
 800576a:	2600      	movs	r6, #0
 800576c:	0035      	movs	r5, r6
 800576e:	e7e2      	b.n	8005736 <_dtoa_r+0x9a2>
 8005770:	9602      	str	r6, [sp, #8]
 8005772:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8005774:	0035      	movs	r5, r6
 8005776:	e584      	b.n	8005282 <_dtoa_r+0x4ee>
 8005778:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800577a:	2b00      	cmp	r3, #0
 800577c:	d100      	bne.n	8005780 <_dtoa_r+0x9ec>
 800577e:	e0ce      	b.n	800591e <_dtoa_r+0xb8a>
 8005780:	9b07      	ldr	r3, [sp, #28]
 8005782:	930c      	str	r3, [sp, #48]	; 0x30
 8005784:	2c00      	cmp	r4, #0
 8005786:	dd05      	ble.n	8005794 <_dtoa_r+0xa00>
 8005788:	0029      	movs	r1, r5
 800578a:	0022      	movs	r2, r4
 800578c:	0038      	movs	r0, r7
 800578e:	f000 fb53 	bl	8005e38 <__lshift>
 8005792:	0005      	movs	r5, r0
 8005794:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005796:	0028      	movs	r0, r5
 8005798:	2b00      	cmp	r3, #0
 800579a:	d022      	beq.n	80057e2 <_dtoa_r+0xa4e>
 800579c:	0038      	movs	r0, r7
 800579e:	6869      	ldr	r1, [r5, #4]
 80057a0:	f000 f934 	bl	8005a0c <_Balloc>
 80057a4:	1e04      	subs	r4, r0, #0
 80057a6:	d10f      	bne.n	80057c8 <_dtoa_r+0xa34>
 80057a8:	0002      	movs	r2, r0
 80057aa:	4b05      	ldr	r3, [pc, #20]	; (80057c0 <_dtoa_r+0xa2c>)
 80057ac:	4905      	ldr	r1, [pc, #20]	; (80057c4 <_dtoa_r+0xa30>)
 80057ae:	f7ff fb06 	bl	8004dbe <_dtoa_r+0x2a>
 80057b2:	46c0      	nop			; (mov r8, r8)
 80057b4:	40240000 	.word	0x40240000
 80057b8:	00000433 	.word	0x00000433
 80057bc:	7ff00000 	.word	0x7ff00000
 80057c0:	08007627 	.word	0x08007627
 80057c4:	000002ea 	.word	0x000002ea
 80057c8:	0029      	movs	r1, r5
 80057ca:	692b      	ldr	r3, [r5, #16]
 80057cc:	310c      	adds	r1, #12
 80057ce:	1c9a      	adds	r2, r3, #2
 80057d0:	0092      	lsls	r2, r2, #2
 80057d2:	300c      	adds	r0, #12
 80057d4:	f000 f911 	bl	80059fa <memcpy>
 80057d8:	2201      	movs	r2, #1
 80057da:	0021      	movs	r1, r4
 80057dc:	0038      	movs	r0, r7
 80057de:	f000 fb2b 	bl	8005e38 <__lshift>
 80057e2:	9b06      	ldr	r3, [sp, #24]
 80057e4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80057e6:	930a      	str	r3, [sp, #40]	; 0x28
 80057e8:	3b01      	subs	r3, #1
 80057ea:	189b      	adds	r3, r3, r2
 80057ec:	2201      	movs	r2, #1
 80057ee:	002c      	movs	r4, r5
 80057f0:	0005      	movs	r5, r0
 80057f2:	9314      	str	r3, [sp, #80]	; 0x50
 80057f4:	9b08      	ldr	r3, [sp, #32]
 80057f6:	4013      	ands	r3, r2
 80057f8:	930f      	str	r3, [sp, #60]	; 0x3c
 80057fa:	0031      	movs	r1, r6
 80057fc:	9805      	ldr	r0, [sp, #20]
 80057fe:	f7ff fa3d 	bl	8004c7c <quorem>
 8005802:	0003      	movs	r3, r0
 8005804:	0021      	movs	r1, r4
 8005806:	3330      	adds	r3, #48	; 0x30
 8005808:	900d      	str	r0, [sp, #52]	; 0x34
 800580a:	9805      	ldr	r0, [sp, #20]
 800580c:	9307      	str	r3, [sp, #28]
 800580e:	f000 fb81 	bl	8005f14 <__mcmp>
 8005812:	002a      	movs	r2, r5
 8005814:	900e      	str	r0, [sp, #56]	; 0x38
 8005816:	0031      	movs	r1, r6
 8005818:	0038      	movs	r0, r7
 800581a:	f000 fb97 	bl	8005f4c <__mdiff>
 800581e:	68c3      	ldr	r3, [r0, #12]
 8005820:	9008      	str	r0, [sp, #32]
 8005822:	9310      	str	r3, [sp, #64]	; 0x40
 8005824:	2301      	movs	r3, #1
 8005826:	930c      	str	r3, [sp, #48]	; 0x30
 8005828:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800582a:	2b00      	cmp	r3, #0
 800582c:	d104      	bne.n	8005838 <_dtoa_r+0xaa4>
 800582e:	0001      	movs	r1, r0
 8005830:	9805      	ldr	r0, [sp, #20]
 8005832:	f000 fb6f 	bl	8005f14 <__mcmp>
 8005836:	900c      	str	r0, [sp, #48]	; 0x30
 8005838:	0038      	movs	r0, r7
 800583a:	9908      	ldr	r1, [sp, #32]
 800583c:	f000 f92a 	bl	8005a94 <_Bfree>
 8005840:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005842:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005844:	3301      	adds	r3, #1
 8005846:	9308      	str	r3, [sp, #32]
 8005848:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800584a:	4313      	orrs	r3, r2
 800584c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800584e:	4313      	orrs	r3, r2
 8005850:	d10c      	bne.n	800586c <_dtoa_r+0xad8>
 8005852:	9b07      	ldr	r3, [sp, #28]
 8005854:	2b39      	cmp	r3, #57	; 0x39
 8005856:	d026      	beq.n	80058a6 <_dtoa_r+0xb12>
 8005858:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800585a:	2b00      	cmp	r3, #0
 800585c:	dd02      	ble.n	8005864 <_dtoa_r+0xad0>
 800585e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005860:	3331      	adds	r3, #49	; 0x31
 8005862:	9307      	str	r3, [sp, #28]
 8005864:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005866:	9a07      	ldr	r2, [sp, #28]
 8005868:	701a      	strb	r2, [r3, #0]
 800586a:	e76a      	b.n	8005742 <_dtoa_r+0x9ae>
 800586c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800586e:	2b00      	cmp	r3, #0
 8005870:	db04      	blt.n	800587c <_dtoa_r+0xae8>
 8005872:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005874:	4313      	orrs	r3, r2
 8005876:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005878:	4313      	orrs	r3, r2
 800587a:	d11f      	bne.n	80058bc <_dtoa_r+0xb28>
 800587c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800587e:	2b00      	cmp	r3, #0
 8005880:	ddf0      	ble.n	8005864 <_dtoa_r+0xad0>
 8005882:	9905      	ldr	r1, [sp, #20]
 8005884:	2201      	movs	r2, #1
 8005886:	0038      	movs	r0, r7
 8005888:	f000 fad6 	bl	8005e38 <__lshift>
 800588c:	0031      	movs	r1, r6
 800588e:	9005      	str	r0, [sp, #20]
 8005890:	f000 fb40 	bl	8005f14 <__mcmp>
 8005894:	2800      	cmp	r0, #0
 8005896:	dc03      	bgt.n	80058a0 <_dtoa_r+0xb0c>
 8005898:	d1e4      	bne.n	8005864 <_dtoa_r+0xad0>
 800589a:	9b07      	ldr	r3, [sp, #28]
 800589c:	07db      	lsls	r3, r3, #31
 800589e:	d5e1      	bpl.n	8005864 <_dtoa_r+0xad0>
 80058a0:	9b07      	ldr	r3, [sp, #28]
 80058a2:	2b39      	cmp	r3, #57	; 0x39
 80058a4:	d1db      	bne.n	800585e <_dtoa_r+0xaca>
 80058a6:	2339      	movs	r3, #57	; 0x39
 80058a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80058aa:	7013      	strb	r3, [r2, #0]
 80058ac:	9b08      	ldr	r3, [sp, #32]
 80058ae:	9308      	str	r3, [sp, #32]
 80058b0:	3b01      	subs	r3, #1
 80058b2:	781a      	ldrb	r2, [r3, #0]
 80058b4:	2a39      	cmp	r2, #57	; 0x39
 80058b6:	d068      	beq.n	800598a <_dtoa_r+0xbf6>
 80058b8:	3201      	adds	r2, #1
 80058ba:	e7d5      	b.n	8005868 <_dtoa_r+0xad4>
 80058bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80058be:	2b00      	cmp	r3, #0
 80058c0:	dd07      	ble.n	80058d2 <_dtoa_r+0xb3e>
 80058c2:	9b07      	ldr	r3, [sp, #28]
 80058c4:	2b39      	cmp	r3, #57	; 0x39
 80058c6:	d0ee      	beq.n	80058a6 <_dtoa_r+0xb12>
 80058c8:	9b07      	ldr	r3, [sp, #28]
 80058ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80058cc:	3301      	adds	r3, #1
 80058ce:	7013      	strb	r3, [r2, #0]
 80058d0:	e737      	b.n	8005742 <_dtoa_r+0x9ae>
 80058d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80058d4:	9a07      	ldr	r2, [sp, #28]
 80058d6:	701a      	strb	r2, [r3, #0]
 80058d8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80058da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80058dc:	4293      	cmp	r3, r2
 80058de:	d03e      	beq.n	800595e <_dtoa_r+0xbca>
 80058e0:	2300      	movs	r3, #0
 80058e2:	220a      	movs	r2, #10
 80058e4:	9905      	ldr	r1, [sp, #20]
 80058e6:	0038      	movs	r0, r7
 80058e8:	f000 f8f8 	bl	8005adc <__multadd>
 80058ec:	2300      	movs	r3, #0
 80058ee:	9005      	str	r0, [sp, #20]
 80058f0:	220a      	movs	r2, #10
 80058f2:	0021      	movs	r1, r4
 80058f4:	0038      	movs	r0, r7
 80058f6:	42ac      	cmp	r4, r5
 80058f8:	d106      	bne.n	8005908 <_dtoa_r+0xb74>
 80058fa:	f000 f8ef 	bl	8005adc <__multadd>
 80058fe:	0004      	movs	r4, r0
 8005900:	0005      	movs	r5, r0
 8005902:	9b08      	ldr	r3, [sp, #32]
 8005904:	930a      	str	r3, [sp, #40]	; 0x28
 8005906:	e778      	b.n	80057fa <_dtoa_r+0xa66>
 8005908:	f000 f8e8 	bl	8005adc <__multadd>
 800590c:	0029      	movs	r1, r5
 800590e:	0004      	movs	r4, r0
 8005910:	2300      	movs	r3, #0
 8005912:	220a      	movs	r2, #10
 8005914:	0038      	movs	r0, r7
 8005916:	f000 f8e1 	bl	8005adc <__multadd>
 800591a:	0005      	movs	r5, r0
 800591c:	e7f1      	b.n	8005902 <_dtoa_r+0xb6e>
 800591e:	9b07      	ldr	r3, [sp, #28]
 8005920:	930c      	str	r3, [sp, #48]	; 0x30
 8005922:	2400      	movs	r4, #0
 8005924:	0031      	movs	r1, r6
 8005926:	9805      	ldr	r0, [sp, #20]
 8005928:	f7ff f9a8 	bl	8004c7c <quorem>
 800592c:	9b06      	ldr	r3, [sp, #24]
 800592e:	3030      	adds	r0, #48	; 0x30
 8005930:	5518      	strb	r0, [r3, r4]
 8005932:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005934:	3401      	adds	r4, #1
 8005936:	9007      	str	r0, [sp, #28]
 8005938:	42a3      	cmp	r3, r4
 800593a:	dd07      	ble.n	800594c <_dtoa_r+0xbb8>
 800593c:	2300      	movs	r3, #0
 800593e:	220a      	movs	r2, #10
 8005940:	0038      	movs	r0, r7
 8005942:	9905      	ldr	r1, [sp, #20]
 8005944:	f000 f8ca 	bl	8005adc <__multadd>
 8005948:	9005      	str	r0, [sp, #20]
 800594a:	e7eb      	b.n	8005924 <_dtoa_r+0xb90>
 800594c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800594e:	2001      	movs	r0, #1
 8005950:	2b00      	cmp	r3, #0
 8005952:	dd00      	ble.n	8005956 <_dtoa_r+0xbc2>
 8005954:	0018      	movs	r0, r3
 8005956:	2400      	movs	r4, #0
 8005958:	9b06      	ldr	r3, [sp, #24]
 800595a:	181b      	adds	r3, r3, r0
 800595c:	9308      	str	r3, [sp, #32]
 800595e:	9905      	ldr	r1, [sp, #20]
 8005960:	2201      	movs	r2, #1
 8005962:	0038      	movs	r0, r7
 8005964:	f000 fa68 	bl	8005e38 <__lshift>
 8005968:	0031      	movs	r1, r6
 800596a:	9005      	str	r0, [sp, #20]
 800596c:	f000 fad2 	bl	8005f14 <__mcmp>
 8005970:	2800      	cmp	r0, #0
 8005972:	dc9b      	bgt.n	80058ac <_dtoa_r+0xb18>
 8005974:	d102      	bne.n	800597c <_dtoa_r+0xbe8>
 8005976:	9b07      	ldr	r3, [sp, #28]
 8005978:	07db      	lsls	r3, r3, #31
 800597a:	d497      	bmi.n	80058ac <_dtoa_r+0xb18>
 800597c:	9b08      	ldr	r3, [sp, #32]
 800597e:	9308      	str	r3, [sp, #32]
 8005980:	3b01      	subs	r3, #1
 8005982:	781a      	ldrb	r2, [r3, #0]
 8005984:	2a30      	cmp	r2, #48	; 0x30
 8005986:	d0fa      	beq.n	800597e <_dtoa_r+0xbea>
 8005988:	e6db      	b.n	8005742 <_dtoa_r+0x9ae>
 800598a:	9a06      	ldr	r2, [sp, #24]
 800598c:	429a      	cmp	r2, r3
 800598e:	d18e      	bne.n	80058ae <_dtoa_r+0xb1a>
 8005990:	9b02      	ldr	r3, [sp, #8]
 8005992:	3301      	adds	r3, #1
 8005994:	9302      	str	r3, [sp, #8]
 8005996:	2331      	movs	r3, #49	; 0x31
 8005998:	e799      	b.n	80058ce <_dtoa_r+0xb3a>
 800599a:	4b09      	ldr	r3, [pc, #36]	; (80059c0 <_dtoa_r+0xc2c>)
 800599c:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800599e:	9306      	str	r3, [sp, #24]
 80059a0:	4b08      	ldr	r3, [pc, #32]	; (80059c4 <_dtoa_r+0xc30>)
 80059a2:	2a00      	cmp	r2, #0
 80059a4:	d001      	beq.n	80059aa <_dtoa_r+0xc16>
 80059a6:	f7ff fa3f 	bl	8004e28 <_dtoa_r+0x94>
 80059aa:	f7ff fa3f 	bl	8004e2c <_dtoa_r+0x98>
 80059ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80059b0:	2b00      	cmp	r3, #0
 80059b2:	dcb6      	bgt.n	8005922 <_dtoa_r+0xb8e>
 80059b4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80059b6:	2b02      	cmp	r3, #2
 80059b8:	dd00      	ble.n	80059bc <_dtoa_r+0xc28>
 80059ba:	e6ac      	b.n	8005716 <_dtoa_r+0x982>
 80059bc:	e7b1      	b.n	8005922 <_dtoa_r+0xb8e>
 80059be:	46c0      	nop			; (mov r8, r8)
 80059c0:	080075a8 	.word	0x080075a8
 80059c4:	080075b0 	.word	0x080075b0

080059c8 <_localeconv_r>:
 80059c8:	4800      	ldr	r0, [pc, #0]	; (80059cc <_localeconv_r+0x4>)
 80059ca:	4770      	bx	lr
 80059cc:	200001a4 	.word	0x200001a4

080059d0 <malloc>:
 80059d0:	b510      	push	{r4, lr}
 80059d2:	4b03      	ldr	r3, [pc, #12]	; (80059e0 <malloc+0x10>)
 80059d4:	0001      	movs	r1, r0
 80059d6:	6818      	ldr	r0, [r3, #0]
 80059d8:	f000 fc4c 	bl	8006274 <_malloc_r>
 80059dc:	bd10      	pop	{r4, pc}
 80059de:	46c0      	nop			; (mov r8, r8)
 80059e0:	20000050 	.word	0x20000050

080059e4 <memchr>:
 80059e4:	b2c9      	uxtb	r1, r1
 80059e6:	1882      	adds	r2, r0, r2
 80059e8:	4290      	cmp	r0, r2
 80059ea:	d101      	bne.n	80059f0 <memchr+0xc>
 80059ec:	2000      	movs	r0, #0
 80059ee:	4770      	bx	lr
 80059f0:	7803      	ldrb	r3, [r0, #0]
 80059f2:	428b      	cmp	r3, r1
 80059f4:	d0fb      	beq.n	80059ee <memchr+0xa>
 80059f6:	3001      	adds	r0, #1
 80059f8:	e7f6      	b.n	80059e8 <memchr+0x4>

080059fa <memcpy>:
 80059fa:	2300      	movs	r3, #0
 80059fc:	b510      	push	{r4, lr}
 80059fe:	429a      	cmp	r2, r3
 8005a00:	d100      	bne.n	8005a04 <memcpy+0xa>
 8005a02:	bd10      	pop	{r4, pc}
 8005a04:	5ccc      	ldrb	r4, [r1, r3]
 8005a06:	54c4      	strb	r4, [r0, r3]
 8005a08:	3301      	adds	r3, #1
 8005a0a:	e7f8      	b.n	80059fe <memcpy+0x4>

08005a0c <_Balloc>:
 8005a0c:	b570      	push	{r4, r5, r6, lr}
 8005a0e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8005a10:	0006      	movs	r6, r0
 8005a12:	000c      	movs	r4, r1
 8005a14:	2d00      	cmp	r5, #0
 8005a16:	d10e      	bne.n	8005a36 <_Balloc+0x2a>
 8005a18:	2010      	movs	r0, #16
 8005a1a:	f7ff ffd9 	bl	80059d0 <malloc>
 8005a1e:	1e02      	subs	r2, r0, #0
 8005a20:	6270      	str	r0, [r6, #36]	; 0x24
 8005a22:	d104      	bne.n	8005a2e <_Balloc+0x22>
 8005a24:	2166      	movs	r1, #102	; 0x66
 8005a26:	4b19      	ldr	r3, [pc, #100]	; (8005a8c <_Balloc+0x80>)
 8005a28:	4819      	ldr	r0, [pc, #100]	; (8005a90 <_Balloc+0x84>)
 8005a2a:	f000 fe0d 	bl	8006648 <__assert_func>
 8005a2e:	6045      	str	r5, [r0, #4]
 8005a30:	6085      	str	r5, [r0, #8]
 8005a32:	6005      	str	r5, [r0, #0]
 8005a34:	60c5      	str	r5, [r0, #12]
 8005a36:	6a75      	ldr	r5, [r6, #36]	; 0x24
 8005a38:	68eb      	ldr	r3, [r5, #12]
 8005a3a:	2b00      	cmp	r3, #0
 8005a3c:	d013      	beq.n	8005a66 <_Balloc+0x5a>
 8005a3e:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005a40:	00a2      	lsls	r2, r4, #2
 8005a42:	68db      	ldr	r3, [r3, #12]
 8005a44:	189b      	adds	r3, r3, r2
 8005a46:	6818      	ldr	r0, [r3, #0]
 8005a48:	2800      	cmp	r0, #0
 8005a4a:	d118      	bne.n	8005a7e <_Balloc+0x72>
 8005a4c:	2101      	movs	r1, #1
 8005a4e:	000d      	movs	r5, r1
 8005a50:	40a5      	lsls	r5, r4
 8005a52:	1d6a      	adds	r2, r5, #5
 8005a54:	0030      	movs	r0, r6
 8005a56:	0092      	lsls	r2, r2, #2
 8005a58:	f000 fb74 	bl	8006144 <_calloc_r>
 8005a5c:	2800      	cmp	r0, #0
 8005a5e:	d00c      	beq.n	8005a7a <_Balloc+0x6e>
 8005a60:	6044      	str	r4, [r0, #4]
 8005a62:	6085      	str	r5, [r0, #8]
 8005a64:	e00d      	b.n	8005a82 <_Balloc+0x76>
 8005a66:	2221      	movs	r2, #33	; 0x21
 8005a68:	2104      	movs	r1, #4
 8005a6a:	0030      	movs	r0, r6
 8005a6c:	f000 fb6a 	bl	8006144 <_calloc_r>
 8005a70:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005a72:	60e8      	str	r0, [r5, #12]
 8005a74:	68db      	ldr	r3, [r3, #12]
 8005a76:	2b00      	cmp	r3, #0
 8005a78:	d1e1      	bne.n	8005a3e <_Balloc+0x32>
 8005a7a:	2000      	movs	r0, #0
 8005a7c:	bd70      	pop	{r4, r5, r6, pc}
 8005a7e:	6802      	ldr	r2, [r0, #0]
 8005a80:	601a      	str	r2, [r3, #0]
 8005a82:	2300      	movs	r3, #0
 8005a84:	6103      	str	r3, [r0, #16]
 8005a86:	60c3      	str	r3, [r0, #12]
 8005a88:	e7f8      	b.n	8005a7c <_Balloc+0x70>
 8005a8a:	46c0      	nop			; (mov r8, r8)
 8005a8c:	080075b5 	.word	0x080075b5
 8005a90:	08007638 	.word	0x08007638

08005a94 <_Bfree>:
 8005a94:	b570      	push	{r4, r5, r6, lr}
 8005a96:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8005a98:	0005      	movs	r5, r0
 8005a9a:	000c      	movs	r4, r1
 8005a9c:	2e00      	cmp	r6, #0
 8005a9e:	d10e      	bne.n	8005abe <_Bfree+0x2a>
 8005aa0:	2010      	movs	r0, #16
 8005aa2:	f7ff ff95 	bl	80059d0 <malloc>
 8005aa6:	1e02      	subs	r2, r0, #0
 8005aa8:	6268      	str	r0, [r5, #36]	; 0x24
 8005aaa:	d104      	bne.n	8005ab6 <_Bfree+0x22>
 8005aac:	218a      	movs	r1, #138	; 0x8a
 8005aae:	4b09      	ldr	r3, [pc, #36]	; (8005ad4 <_Bfree+0x40>)
 8005ab0:	4809      	ldr	r0, [pc, #36]	; (8005ad8 <_Bfree+0x44>)
 8005ab2:	f000 fdc9 	bl	8006648 <__assert_func>
 8005ab6:	6046      	str	r6, [r0, #4]
 8005ab8:	6086      	str	r6, [r0, #8]
 8005aba:	6006      	str	r6, [r0, #0]
 8005abc:	60c6      	str	r6, [r0, #12]
 8005abe:	2c00      	cmp	r4, #0
 8005ac0:	d007      	beq.n	8005ad2 <_Bfree+0x3e>
 8005ac2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8005ac4:	6862      	ldr	r2, [r4, #4]
 8005ac6:	68db      	ldr	r3, [r3, #12]
 8005ac8:	0092      	lsls	r2, r2, #2
 8005aca:	189b      	adds	r3, r3, r2
 8005acc:	681a      	ldr	r2, [r3, #0]
 8005ace:	6022      	str	r2, [r4, #0]
 8005ad0:	601c      	str	r4, [r3, #0]
 8005ad2:	bd70      	pop	{r4, r5, r6, pc}
 8005ad4:	080075b5 	.word	0x080075b5
 8005ad8:	08007638 	.word	0x08007638

08005adc <__multadd>:
 8005adc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005ade:	000e      	movs	r6, r1
 8005ae0:	9001      	str	r0, [sp, #4]
 8005ae2:	000c      	movs	r4, r1
 8005ae4:	001d      	movs	r5, r3
 8005ae6:	2000      	movs	r0, #0
 8005ae8:	690f      	ldr	r7, [r1, #16]
 8005aea:	3614      	adds	r6, #20
 8005aec:	6833      	ldr	r3, [r6, #0]
 8005aee:	3001      	adds	r0, #1
 8005af0:	b299      	uxth	r1, r3
 8005af2:	4351      	muls	r1, r2
 8005af4:	0c1b      	lsrs	r3, r3, #16
 8005af6:	4353      	muls	r3, r2
 8005af8:	1949      	adds	r1, r1, r5
 8005afa:	0c0d      	lsrs	r5, r1, #16
 8005afc:	195b      	adds	r3, r3, r5
 8005afe:	0c1d      	lsrs	r5, r3, #16
 8005b00:	b289      	uxth	r1, r1
 8005b02:	041b      	lsls	r3, r3, #16
 8005b04:	185b      	adds	r3, r3, r1
 8005b06:	c608      	stmia	r6!, {r3}
 8005b08:	4287      	cmp	r7, r0
 8005b0a:	dcef      	bgt.n	8005aec <__multadd+0x10>
 8005b0c:	2d00      	cmp	r5, #0
 8005b0e:	d022      	beq.n	8005b56 <__multadd+0x7a>
 8005b10:	68a3      	ldr	r3, [r4, #8]
 8005b12:	42bb      	cmp	r3, r7
 8005b14:	dc19      	bgt.n	8005b4a <__multadd+0x6e>
 8005b16:	6863      	ldr	r3, [r4, #4]
 8005b18:	9801      	ldr	r0, [sp, #4]
 8005b1a:	1c59      	adds	r1, r3, #1
 8005b1c:	f7ff ff76 	bl	8005a0c <_Balloc>
 8005b20:	1e06      	subs	r6, r0, #0
 8005b22:	d105      	bne.n	8005b30 <__multadd+0x54>
 8005b24:	0002      	movs	r2, r0
 8005b26:	21b5      	movs	r1, #181	; 0xb5
 8005b28:	4b0c      	ldr	r3, [pc, #48]	; (8005b5c <__multadd+0x80>)
 8005b2a:	480d      	ldr	r0, [pc, #52]	; (8005b60 <__multadd+0x84>)
 8005b2c:	f000 fd8c 	bl	8006648 <__assert_func>
 8005b30:	0021      	movs	r1, r4
 8005b32:	6923      	ldr	r3, [r4, #16]
 8005b34:	310c      	adds	r1, #12
 8005b36:	1c9a      	adds	r2, r3, #2
 8005b38:	0092      	lsls	r2, r2, #2
 8005b3a:	300c      	adds	r0, #12
 8005b3c:	f7ff ff5d 	bl	80059fa <memcpy>
 8005b40:	0021      	movs	r1, r4
 8005b42:	9801      	ldr	r0, [sp, #4]
 8005b44:	f7ff ffa6 	bl	8005a94 <_Bfree>
 8005b48:	0034      	movs	r4, r6
 8005b4a:	1d3b      	adds	r3, r7, #4
 8005b4c:	009b      	lsls	r3, r3, #2
 8005b4e:	18e3      	adds	r3, r4, r3
 8005b50:	605d      	str	r5, [r3, #4]
 8005b52:	1c7b      	adds	r3, r7, #1
 8005b54:	6123      	str	r3, [r4, #16]
 8005b56:	0020      	movs	r0, r4
 8005b58:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005b5a:	46c0      	nop			; (mov r8, r8)
 8005b5c:	08007627 	.word	0x08007627
 8005b60:	08007638 	.word	0x08007638

08005b64 <__hi0bits>:
 8005b64:	0003      	movs	r3, r0
 8005b66:	0c02      	lsrs	r2, r0, #16
 8005b68:	2000      	movs	r0, #0
 8005b6a:	4282      	cmp	r2, r0
 8005b6c:	d101      	bne.n	8005b72 <__hi0bits+0xe>
 8005b6e:	041b      	lsls	r3, r3, #16
 8005b70:	3010      	adds	r0, #16
 8005b72:	0e1a      	lsrs	r2, r3, #24
 8005b74:	d101      	bne.n	8005b7a <__hi0bits+0x16>
 8005b76:	3008      	adds	r0, #8
 8005b78:	021b      	lsls	r3, r3, #8
 8005b7a:	0f1a      	lsrs	r2, r3, #28
 8005b7c:	d101      	bne.n	8005b82 <__hi0bits+0x1e>
 8005b7e:	3004      	adds	r0, #4
 8005b80:	011b      	lsls	r3, r3, #4
 8005b82:	0f9a      	lsrs	r2, r3, #30
 8005b84:	d101      	bne.n	8005b8a <__hi0bits+0x26>
 8005b86:	3002      	adds	r0, #2
 8005b88:	009b      	lsls	r3, r3, #2
 8005b8a:	2b00      	cmp	r3, #0
 8005b8c:	db03      	blt.n	8005b96 <__hi0bits+0x32>
 8005b8e:	3001      	adds	r0, #1
 8005b90:	005b      	lsls	r3, r3, #1
 8005b92:	d400      	bmi.n	8005b96 <__hi0bits+0x32>
 8005b94:	2020      	movs	r0, #32
 8005b96:	4770      	bx	lr

08005b98 <__lo0bits>:
 8005b98:	6803      	ldr	r3, [r0, #0]
 8005b9a:	0002      	movs	r2, r0
 8005b9c:	2107      	movs	r1, #7
 8005b9e:	0018      	movs	r0, r3
 8005ba0:	4008      	ands	r0, r1
 8005ba2:	420b      	tst	r3, r1
 8005ba4:	d00d      	beq.n	8005bc2 <__lo0bits+0x2a>
 8005ba6:	3906      	subs	r1, #6
 8005ba8:	2000      	movs	r0, #0
 8005baa:	420b      	tst	r3, r1
 8005bac:	d105      	bne.n	8005bba <__lo0bits+0x22>
 8005bae:	3002      	adds	r0, #2
 8005bb0:	4203      	tst	r3, r0
 8005bb2:	d003      	beq.n	8005bbc <__lo0bits+0x24>
 8005bb4:	40cb      	lsrs	r3, r1
 8005bb6:	0008      	movs	r0, r1
 8005bb8:	6013      	str	r3, [r2, #0]
 8005bba:	4770      	bx	lr
 8005bbc:	089b      	lsrs	r3, r3, #2
 8005bbe:	6013      	str	r3, [r2, #0]
 8005bc0:	e7fb      	b.n	8005bba <__lo0bits+0x22>
 8005bc2:	b299      	uxth	r1, r3
 8005bc4:	2900      	cmp	r1, #0
 8005bc6:	d101      	bne.n	8005bcc <__lo0bits+0x34>
 8005bc8:	2010      	movs	r0, #16
 8005bca:	0c1b      	lsrs	r3, r3, #16
 8005bcc:	b2d9      	uxtb	r1, r3
 8005bce:	2900      	cmp	r1, #0
 8005bd0:	d101      	bne.n	8005bd6 <__lo0bits+0x3e>
 8005bd2:	3008      	adds	r0, #8
 8005bd4:	0a1b      	lsrs	r3, r3, #8
 8005bd6:	0719      	lsls	r1, r3, #28
 8005bd8:	d101      	bne.n	8005bde <__lo0bits+0x46>
 8005bda:	3004      	adds	r0, #4
 8005bdc:	091b      	lsrs	r3, r3, #4
 8005bde:	0799      	lsls	r1, r3, #30
 8005be0:	d101      	bne.n	8005be6 <__lo0bits+0x4e>
 8005be2:	3002      	adds	r0, #2
 8005be4:	089b      	lsrs	r3, r3, #2
 8005be6:	07d9      	lsls	r1, r3, #31
 8005be8:	d4e9      	bmi.n	8005bbe <__lo0bits+0x26>
 8005bea:	3001      	adds	r0, #1
 8005bec:	085b      	lsrs	r3, r3, #1
 8005bee:	d1e6      	bne.n	8005bbe <__lo0bits+0x26>
 8005bf0:	2020      	movs	r0, #32
 8005bf2:	e7e2      	b.n	8005bba <__lo0bits+0x22>

08005bf4 <__i2b>:
 8005bf4:	b510      	push	{r4, lr}
 8005bf6:	000c      	movs	r4, r1
 8005bf8:	2101      	movs	r1, #1
 8005bfa:	f7ff ff07 	bl	8005a0c <_Balloc>
 8005bfe:	2800      	cmp	r0, #0
 8005c00:	d106      	bne.n	8005c10 <__i2b+0x1c>
 8005c02:	21a0      	movs	r1, #160	; 0xa0
 8005c04:	0002      	movs	r2, r0
 8005c06:	4b04      	ldr	r3, [pc, #16]	; (8005c18 <__i2b+0x24>)
 8005c08:	4804      	ldr	r0, [pc, #16]	; (8005c1c <__i2b+0x28>)
 8005c0a:	0049      	lsls	r1, r1, #1
 8005c0c:	f000 fd1c 	bl	8006648 <__assert_func>
 8005c10:	2301      	movs	r3, #1
 8005c12:	6144      	str	r4, [r0, #20]
 8005c14:	6103      	str	r3, [r0, #16]
 8005c16:	bd10      	pop	{r4, pc}
 8005c18:	08007627 	.word	0x08007627
 8005c1c:	08007638 	.word	0x08007638

08005c20 <__multiply>:
 8005c20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c22:	690b      	ldr	r3, [r1, #16]
 8005c24:	0014      	movs	r4, r2
 8005c26:	6912      	ldr	r2, [r2, #16]
 8005c28:	000d      	movs	r5, r1
 8005c2a:	b089      	sub	sp, #36	; 0x24
 8005c2c:	4293      	cmp	r3, r2
 8005c2e:	da01      	bge.n	8005c34 <__multiply+0x14>
 8005c30:	0025      	movs	r5, r4
 8005c32:	000c      	movs	r4, r1
 8005c34:	692f      	ldr	r7, [r5, #16]
 8005c36:	6926      	ldr	r6, [r4, #16]
 8005c38:	6869      	ldr	r1, [r5, #4]
 8005c3a:	19bb      	adds	r3, r7, r6
 8005c3c:	9302      	str	r3, [sp, #8]
 8005c3e:	68ab      	ldr	r3, [r5, #8]
 8005c40:	19ba      	adds	r2, r7, r6
 8005c42:	4293      	cmp	r3, r2
 8005c44:	da00      	bge.n	8005c48 <__multiply+0x28>
 8005c46:	3101      	adds	r1, #1
 8005c48:	f7ff fee0 	bl	8005a0c <_Balloc>
 8005c4c:	9001      	str	r0, [sp, #4]
 8005c4e:	2800      	cmp	r0, #0
 8005c50:	d106      	bne.n	8005c60 <__multiply+0x40>
 8005c52:	215e      	movs	r1, #94	; 0x5e
 8005c54:	0002      	movs	r2, r0
 8005c56:	4b48      	ldr	r3, [pc, #288]	; (8005d78 <__multiply+0x158>)
 8005c58:	4848      	ldr	r0, [pc, #288]	; (8005d7c <__multiply+0x15c>)
 8005c5a:	31ff      	adds	r1, #255	; 0xff
 8005c5c:	f000 fcf4 	bl	8006648 <__assert_func>
 8005c60:	9b01      	ldr	r3, [sp, #4]
 8005c62:	2200      	movs	r2, #0
 8005c64:	3314      	adds	r3, #20
 8005c66:	469c      	mov	ip, r3
 8005c68:	19bb      	adds	r3, r7, r6
 8005c6a:	009b      	lsls	r3, r3, #2
 8005c6c:	4463      	add	r3, ip
 8005c6e:	9303      	str	r3, [sp, #12]
 8005c70:	4663      	mov	r3, ip
 8005c72:	9903      	ldr	r1, [sp, #12]
 8005c74:	428b      	cmp	r3, r1
 8005c76:	d32c      	bcc.n	8005cd2 <__multiply+0xb2>
 8005c78:	002b      	movs	r3, r5
 8005c7a:	0022      	movs	r2, r4
 8005c7c:	3314      	adds	r3, #20
 8005c7e:	00bf      	lsls	r7, r7, #2
 8005c80:	3214      	adds	r2, #20
 8005c82:	9306      	str	r3, [sp, #24]
 8005c84:	00b6      	lsls	r6, r6, #2
 8005c86:	19db      	adds	r3, r3, r7
 8005c88:	9304      	str	r3, [sp, #16]
 8005c8a:	1993      	adds	r3, r2, r6
 8005c8c:	9307      	str	r3, [sp, #28]
 8005c8e:	2304      	movs	r3, #4
 8005c90:	9305      	str	r3, [sp, #20]
 8005c92:	002b      	movs	r3, r5
 8005c94:	9904      	ldr	r1, [sp, #16]
 8005c96:	3315      	adds	r3, #21
 8005c98:	9200      	str	r2, [sp, #0]
 8005c9a:	4299      	cmp	r1, r3
 8005c9c:	d305      	bcc.n	8005caa <__multiply+0x8a>
 8005c9e:	1b4b      	subs	r3, r1, r5
 8005ca0:	3b15      	subs	r3, #21
 8005ca2:	089b      	lsrs	r3, r3, #2
 8005ca4:	3301      	adds	r3, #1
 8005ca6:	009b      	lsls	r3, r3, #2
 8005ca8:	9305      	str	r3, [sp, #20]
 8005caa:	9b07      	ldr	r3, [sp, #28]
 8005cac:	9a00      	ldr	r2, [sp, #0]
 8005cae:	429a      	cmp	r2, r3
 8005cb0:	d311      	bcc.n	8005cd6 <__multiply+0xb6>
 8005cb2:	9b02      	ldr	r3, [sp, #8]
 8005cb4:	2b00      	cmp	r3, #0
 8005cb6:	dd06      	ble.n	8005cc6 <__multiply+0xa6>
 8005cb8:	9b03      	ldr	r3, [sp, #12]
 8005cba:	3b04      	subs	r3, #4
 8005cbc:	9303      	str	r3, [sp, #12]
 8005cbe:	681b      	ldr	r3, [r3, #0]
 8005cc0:	9300      	str	r3, [sp, #0]
 8005cc2:	2b00      	cmp	r3, #0
 8005cc4:	d053      	beq.n	8005d6e <__multiply+0x14e>
 8005cc6:	9b01      	ldr	r3, [sp, #4]
 8005cc8:	9a02      	ldr	r2, [sp, #8]
 8005cca:	0018      	movs	r0, r3
 8005ccc:	611a      	str	r2, [r3, #16]
 8005cce:	b009      	add	sp, #36	; 0x24
 8005cd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005cd2:	c304      	stmia	r3!, {r2}
 8005cd4:	e7cd      	b.n	8005c72 <__multiply+0x52>
 8005cd6:	9b00      	ldr	r3, [sp, #0]
 8005cd8:	681b      	ldr	r3, [r3, #0]
 8005cda:	b298      	uxth	r0, r3
 8005cdc:	2800      	cmp	r0, #0
 8005cde:	d01b      	beq.n	8005d18 <__multiply+0xf8>
 8005ce0:	4667      	mov	r7, ip
 8005ce2:	2400      	movs	r4, #0
 8005ce4:	9e06      	ldr	r6, [sp, #24]
 8005ce6:	ce02      	ldmia	r6!, {r1}
 8005ce8:	683a      	ldr	r2, [r7, #0]
 8005cea:	b28b      	uxth	r3, r1
 8005cec:	4343      	muls	r3, r0
 8005cee:	b292      	uxth	r2, r2
 8005cf0:	189b      	adds	r3, r3, r2
 8005cf2:	191b      	adds	r3, r3, r4
 8005cf4:	0c0c      	lsrs	r4, r1, #16
 8005cf6:	4344      	muls	r4, r0
 8005cf8:	683a      	ldr	r2, [r7, #0]
 8005cfa:	0c11      	lsrs	r1, r2, #16
 8005cfc:	1861      	adds	r1, r4, r1
 8005cfe:	0c1c      	lsrs	r4, r3, #16
 8005d00:	1909      	adds	r1, r1, r4
 8005d02:	0c0c      	lsrs	r4, r1, #16
 8005d04:	b29b      	uxth	r3, r3
 8005d06:	0409      	lsls	r1, r1, #16
 8005d08:	430b      	orrs	r3, r1
 8005d0a:	c708      	stmia	r7!, {r3}
 8005d0c:	9b04      	ldr	r3, [sp, #16]
 8005d0e:	42b3      	cmp	r3, r6
 8005d10:	d8e9      	bhi.n	8005ce6 <__multiply+0xc6>
 8005d12:	4663      	mov	r3, ip
 8005d14:	9a05      	ldr	r2, [sp, #20]
 8005d16:	509c      	str	r4, [r3, r2]
 8005d18:	9b00      	ldr	r3, [sp, #0]
 8005d1a:	681b      	ldr	r3, [r3, #0]
 8005d1c:	0c1e      	lsrs	r6, r3, #16
 8005d1e:	d020      	beq.n	8005d62 <__multiply+0x142>
 8005d20:	4663      	mov	r3, ip
 8005d22:	002c      	movs	r4, r5
 8005d24:	4660      	mov	r0, ip
 8005d26:	2700      	movs	r7, #0
 8005d28:	681b      	ldr	r3, [r3, #0]
 8005d2a:	3414      	adds	r4, #20
 8005d2c:	6822      	ldr	r2, [r4, #0]
 8005d2e:	b29b      	uxth	r3, r3
 8005d30:	b291      	uxth	r1, r2
 8005d32:	4371      	muls	r1, r6
 8005d34:	6802      	ldr	r2, [r0, #0]
 8005d36:	0c12      	lsrs	r2, r2, #16
 8005d38:	1889      	adds	r1, r1, r2
 8005d3a:	19cf      	adds	r7, r1, r7
 8005d3c:	0439      	lsls	r1, r7, #16
 8005d3e:	430b      	orrs	r3, r1
 8005d40:	6003      	str	r3, [r0, #0]
 8005d42:	cc02      	ldmia	r4!, {r1}
 8005d44:	6843      	ldr	r3, [r0, #4]
 8005d46:	0c09      	lsrs	r1, r1, #16
 8005d48:	4371      	muls	r1, r6
 8005d4a:	b29b      	uxth	r3, r3
 8005d4c:	0c3f      	lsrs	r7, r7, #16
 8005d4e:	18cb      	adds	r3, r1, r3
 8005d50:	9a04      	ldr	r2, [sp, #16]
 8005d52:	19db      	adds	r3, r3, r7
 8005d54:	0c1f      	lsrs	r7, r3, #16
 8005d56:	3004      	adds	r0, #4
 8005d58:	42a2      	cmp	r2, r4
 8005d5a:	d8e7      	bhi.n	8005d2c <__multiply+0x10c>
 8005d5c:	4662      	mov	r2, ip
 8005d5e:	9905      	ldr	r1, [sp, #20]
 8005d60:	5053      	str	r3, [r2, r1]
 8005d62:	9b00      	ldr	r3, [sp, #0]
 8005d64:	3304      	adds	r3, #4
 8005d66:	9300      	str	r3, [sp, #0]
 8005d68:	2304      	movs	r3, #4
 8005d6a:	449c      	add	ip, r3
 8005d6c:	e79d      	b.n	8005caa <__multiply+0x8a>
 8005d6e:	9b02      	ldr	r3, [sp, #8]
 8005d70:	3b01      	subs	r3, #1
 8005d72:	9302      	str	r3, [sp, #8]
 8005d74:	e79d      	b.n	8005cb2 <__multiply+0x92>
 8005d76:	46c0      	nop			; (mov r8, r8)
 8005d78:	08007627 	.word	0x08007627
 8005d7c:	08007638 	.word	0x08007638

08005d80 <__pow5mult>:
 8005d80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005d82:	2303      	movs	r3, #3
 8005d84:	0015      	movs	r5, r2
 8005d86:	0007      	movs	r7, r0
 8005d88:	000e      	movs	r6, r1
 8005d8a:	401a      	ands	r2, r3
 8005d8c:	421d      	tst	r5, r3
 8005d8e:	d008      	beq.n	8005da2 <__pow5mult+0x22>
 8005d90:	4925      	ldr	r1, [pc, #148]	; (8005e28 <__pow5mult+0xa8>)
 8005d92:	3a01      	subs	r2, #1
 8005d94:	0092      	lsls	r2, r2, #2
 8005d96:	5852      	ldr	r2, [r2, r1]
 8005d98:	2300      	movs	r3, #0
 8005d9a:	0031      	movs	r1, r6
 8005d9c:	f7ff fe9e 	bl	8005adc <__multadd>
 8005da0:	0006      	movs	r6, r0
 8005da2:	10ad      	asrs	r5, r5, #2
 8005da4:	d03d      	beq.n	8005e22 <__pow5mult+0xa2>
 8005da6:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 8005da8:	2c00      	cmp	r4, #0
 8005daa:	d10f      	bne.n	8005dcc <__pow5mult+0x4c>
 8005dac:	2010      	movs	r0, #16
 8005dae:	f7ff fe0f 	bl	80059d0 <malloc>
 8005db2:	1e02      	subs	r2, r0, #0
 8005db4:	6278      	str	r0, [r7, #36]	; 0x24
 8005db6:	d105      	bne.n	8005dc4 <__pow5mult+0x44>
 8005db8:	21d7      	movs	r1, #215	; 0xd7
 8005dba:	4b1c      	ldr	r3, [pc, #112]	; (8005e2c <__pow5mult+0xac>)
 8005dbc:	481c      	ldr	r0, [pc, #112]	; (8005e30 <__pow5mult+0xb0>)
 8005dbe:	0049      	lsls	r1, r1, #1
 8005dc0:	f000 fc42 	bl	8006648 <__assert_func>
 8005dc4:	6044      	str	r4, [r0, #4]
 8005dc6:	6084      	str	r4, [r0, #8]
 8005dc8:	6004      	str	r4, [r0, #0]
 8005dca:	60c4      	str	r4, [r0, #12]
 8005dcc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005dce:	689c      	ldr	r4, [r3, #8]
 8005dd0:	9301      	str	r3, [sp, #4]
 8005dd2:	2c00      	cmp	r4, #0
 8005dd4:	d108      	bne.n	8005de8 <__pow5mult+0x68>
 8005dd6:	0038      	movs	r0, r7
 8005dd8:	4916      	ldr	r1, [pc, #88]	; (8005e34 <__pow5mult+0xb4>)
 8005dda:	f7ff ff0b 	bl	8005bf4 <__i2b>
 8005dde:	9b01      	ldr	r3, [sp, #4]
 8005de0:	0004      	movs	r4, r0
 8005de2:	6098      	str	r0, [r3, #8]
 8005de4:	2300      	movs	r3, #0
 8005de6:	6003      	str	r3, [r0, #0]
 8005de8:	2301      	movs	r3, #1
 8005dea:	421d      	tst	r5, r3
 8005dec:	d00a      	beq.n	8005e04 <__pow5mult+0x84>
 8005dee:	0031      	movs	r1, r6
 8005df0:	0022      	movs	r2, r4
 8005df2:	0038      	movs	r0, r7
 8005df4:	f7ff ff14 	bl	8005c20 <__multiply>
 8005df8:	0031      	movs	r1, r6
 8005dfa:	9001      	str	r0, [sp, #4]
 8005dfc:	0038      	movs	r0, r7
 8005dfe:	f7ff fe49 	bl	8005a94 <_Bfree>
 8005e02:	9e01      	ldr	r6, [sp, #4]
 8005e04:	106d      	asrs	r5, r5, #1
 8005e06:	d00c      	beq.n	8005e22 <__pow5mult+0xa2>
 8005e08:	6820      	ldr	r0, [r4, #0]
 8005e0a:	2800      	cmp	r0, #0
 8005e0c:	d107      	bne.n	8005e1e <__pow5mult+0x9e>
 8005e0e:	0022      	movs	r2, r4
 8005e10:	0021      	movs	r1, r4
 8005e12:	0038      	movs	r0, r7
 8005e14:	f7ff ff04 	bl	8005c20 <__multiply>
 8005e18:	2300      	movs	r3, #0
 8005e1a:	6020      	str	r0, [r4, #0]
 8005e1c:	6003      	str	r3, [r0, #0]
 8005e1e:	0004      	movs	r4, r0
 8005e20:	e7e2      	b.n	8005de8 <__pow5mult+0x68>
 8005e22:	0030      	movs	r0, r6
 8005e24:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005e26:	46c0      	nop			; (mov r8, r8)
 8005e28:	08007788 	.word	0x08007788
 8005e2c:	080075b5 	.word	0x080075b5
 8005e30:	08007638 	.word	0x08007638
 8005e34:	00000271 	.word	0x00000271

08005e38 <__lshift>:
 8005e38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e3a:	000c      	movs	r4, r1
 8005e3c:	0017      	movs	r7, r2
 8005e3e:	6923      	ldr	r3, [r4, #16]
 8005e40:	1155      	asrs	r5, r2, #5
 8005e42:	b087      	sub	sp, #28
 8005e44:	18eb      	adds	r3, r5, r3
 8005e46:	9302      	str	r3, [sp, #8]
 8005e48:	3301      	adds	r3, #1
 8005e4a:	9301      	str	r3, [sp, #4]
 8005e4c:	6849      	ldr	r1, [r1, #4]
 8005e4e:	68a3      	ldr	r3, [r4, #8]
 8005e50:	9004      	str	r0, [sp, #16]
 8005e52:	9a01      	ldr	r2, [sp, #4]
 8005e54:	4293      	cmp	r3, r2
 8005e56:	db10      	blt.n	8005e7a <__lshift+0x42>
 8005e58:	9804      	ldr	r0, [sp, #16]
 8005e5a:	f7ff fdd7 	bl	8005a0c <_Balloc>
 8005e5e:	2300      	movs	r3, #0
 8005e60:	0002      	movs	r2, r0
 8005e62:	0006      	movs	r6, r0
 8005e64:	0019      	movs	r1, r3
 8005e66:	3214      	adds	r2, #20
 8005e68:	4298      	cmp	r0, r3
 8005e6a:	d10c      	bne.n	8005e86 <__lshift+0x4e>
 8005e6c:	21da      	movs	r1, #218	; 0xda
 8005e6e:	0002      	movs	r2, r0
 8005e70:	4b26      	ldr	r3, [pc, #152]	; (8005f0c <__lshift+0xd4>)
 8005e72:	4827      	ldr	r0, [pc, #156]	; (8005f10 <__lshift+0xd8>)
 8005e74:	31ff      	adds	r1, #255	; 0xff
 8005e76:	f000 fbe7 	bl	8006648 <__assert_func>
 8005e7a:	3101      	adds	r1, #1
 8005e7c:	005b      	lsls	r3, r3, #1
 8005e7e:	e7e8      	b.n	8005e52 <__lshift+0x1a>
 8005e80:	0098      	lsls	r0, r3, #2
 8005e82:	5011      	str	r1, [r2, r0]
 8005e84:	3301      	adds	r3, #1
 8005e86:	42ab      	cmp	r3, r5
 8005e88:	dbfa      	blt.n	8005e80 <__lshift+0x48>
 8005e8a:	43eb      	mvns	r3, r5
 8005e8c:	17db      	asrs	r3, r3, #31
 8005e8e:	401d      	ands	r5, r3
 8005e90:	211f      	movs	r1, #31
 8005e92:	0023      	movs	r3, r4
 8005e94:	0038      	movs	r0, r7
 8005e96:	00ad      	lsls	r5, r5, #2
 8005e98:	1955      	adds	r5, r2, r5
 8005e9a:	6922      	ldr	r2, [r4, #16]
 8005e9c:	3314      	adds	r3, #20
 8005e9e:	0092      	lsls	r2, r2, #2
 8005ea0:	4008      	ands	r0, r1
 8005ea2:	4684      	mov	ip, r0
 8005ea4:	189a      	adds	r2, r3, r2
 8005ea6:	420f      	tst	r7, r1
 8005ea8:	d02a      	beq.n	8005f00 <__lshift+0xc8>
 8005eaa:	3101      	adds	r1, #1
 8005eac:	1a09      	subs	r1, r1, r0
 8005eae:	9105      	str	r1, [sp, #20]
 8005eb0:	2100      	movs	r1, #0
 8005eb2:	9503      	str	r5, [sp, #12]
 8005eb4:	4667      	mov	r7, ip
 8005eb6:	6818      	ldr	r0, [r3, #0]
 8005eb8:	40b8      	lsls	r0, r7
 8005eba:	4301      	orrs	r1, r0
 8005ebc:	9803      	ldr	r0, [sp, #12]
 8005ebe:	c002      	stmia	r0!, {r1}
 8005ec0:	cb02      	ldmia	r3!, {r1}
 8005ec2:	9003      	str	r0, [sp, #12]
 8005ec4:	9805      	ldr	r0, [sp, #20]
 8005ec6:	40c1      	lsrs	r1, r0
 8005ec8:	429a      	cmp	r2, r3
 8005eca:	d8f3      	bhi.n	8005eb4 <__lshift+0x7c>
 8005ecc:	0020      	movs	r0, r4
 8005ece:	3015      	adds	r0, #21
 8005ed0:	2304      	movs	r3, #4
 8005ed2:	4282      	cmp	r2, r0
 8005ed4:	d304      	bcc.n	8005ee0 <__lshift+0xa8>
 8005ed6:	1b13      	subs	r3, r2, r4
 8005ed8:	3b15      	subs	r3, #21
 8005eda:	089b      	lsrs	r3, r3, #2
 8005edc:	3301      	adds	r3, #1
 8005ede:	009b      	lsls	r3, r3, #2
 8005ee0:	50e9      	str	r1, [r5, r3]
 8005ee2:	2900      	cmp	r1, #0
 8005ee4:	d002      	beq.n	8005eec <__lshift+0xb4>
 8005ee6:	9b02      	ldr	r3, [sp, #8]
 8005ee8:	3302      	adds	r3, #2
 8005eea:	9301      	str	r3, [sp, #4]
 8005eec:	9b01      	ldr	r3, [sp, #4]
 8005eee:	9804      	ldr	r0, [sp, #16]
 8005ef0:	3b01      	subs	r3, #1
 8005ef2:	0021      	movs	r1, r4
 8005ef4:	6133      	str	r3, [r6, #16]
 8005ef6:	f7ff fdcd 	bl	8005a94 <_Bfree>
 8005efa:	0030      	movs	r0, r6
 8005efc:	b007      	add	sp, #28
 8005efe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005f00:	cb02      	ldmia	r3!, {r1}
 8005f02:	c502      	stmia	r5!, {r1}
 8005f04:	429a      	cmp	r2, r3
 8005f06:	d8fb      	bhi.n	8005f00 <__lshift+0xc8>
 8005f08:	e7f0      	b.n	8005eec <__lshift+0xb4>
 8005f0a:	46c0      	nop			; (mov r8, r8)
 8005f0c:	08007627 	.word	0x08007627
 8005f10:	08007638 	.word	0x08007638

08005f14 <__mcmp>:
 8005f14:	6902      	ldr	r2, [r0, #16]
 8005f16:	690b      	ldr	r3, [r1, #16]
 8005f18:	b530      	push	{r4, r5, lr}
 8005f1a:	0004      	movs	r4, r0
 8005f1c:	1ad0      	subs	r0, r2, r3
 8005f1e:	429a      	cmp	r2, r3
 8005f20:	d10d      	bne.n	8005f3e <__mcmp+0x2a>
 8005f22:	009b      	lsls	r3, r3, #2
 8005f24:	3414      	adds	r4, #20
 8005f26:	3114      	adds	r1, #20
 8005f28:	18e2      	adds	r2, r4, r3
 8005f2a:	18c9      	adds	r1, r1, r3
 8005f2c:	3a04      	subs	r2, #4
 8005f2e:	3904      	subs	r1, #4
 8005f30:	6815      	ldr	r5, [r2, #0]
 8005f32:	680b      	ldr	r3, [r1, #0]
 8005f34:	429d      	cmp	r5, r3
 8005f36:	d003      	beq.n	8005f40 <__mcmp+0x2c>
 8005f38:	2001      	movs	r0, #1
 8005f3a:	429d      	cmp	r5, r3
 8005f3c:	d303      	bcc.n	8005f46 <__mcmp+0x32>
 8005f3e:	bd30      	pop	{r4, r5, pc}
 8005f40:	4294      	cmp	r4, r2
 8005f42:	d3f3      	bcc.n	8005f2c <__mcmp+0x18>
 8005f44:	e7fb      	b.n	8005f3e <__mcmp+0x2a>
 8005f46:	4240      	negs	r0, r0
 8005f48:	e7f9      	b.n	8005f3e <__mcmp+0x2a>
	...

08005f4c <__mdiff>:
 8005f4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005f4e:	000e      	movs	r6, r1
 8005f50:	0007      	movs	r7, r0
 8005f52:	0011      	movs	r1, r2
 8005f54:	0030      	movs	r0, r6
 8005f56:	b087      	sub	sp, #28
 8005f58:	0014      	movs	r4, r2
 8005f5a:	f7ff ffdb 	bl	8005f14 <__mcmp>
 8005f5e:	1e05      	subs	r5, r0, #0
 8005f60:	d110      	bne.n	8005f84 <__mdiff+0x38>
 8005f62:	0001      	movs	r1, r0
 8005f64:	0038      	movs	r0, r7
 8005f66:	f7ff fd51 	bl	8005a0c <_Balloc>
 8005f6a:	1e02      	subs	r2, r0, #0
 8005f6c:	d104      	bne.n	8005f78 <__mdiff+0x2c>
 8005f6e:	4b40      	ldr	r3, [pc, #256]	; (8006070 <__mdiff+0x124>)
 8005f70:	4940      	ldr	r1, [pc, #256]	; (8006074 <__mdiff+0x128>)
 8005f72:	4841      	ldr	r0, [pc, #260]	; (8006078 <__mdiff+0x12c>)
 8005f74:	f000 fb68 	bl	8006648 <__assert_func>
 8005f78:	2301      	movs	r3, #1
 8005f7a:	6145      	str	r5, [r0, #20]
 8005f7c:	6103      	str	r3, [r0, #16]
 8005f7e:	0010      	movs	r0, r2
 8005f80:	b007      	add	sp, #28
 8005f82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005f84:	2301      	movs	r3, #1
 8005f86:	9301      	str	r3, [sp, #4]
 8005f88:	2800      	cmp	r0, #0
 8005f8a:	db04      	blt.n	8005f96 <__mdiff+0x4a>
 8005f8c:	0023      	movs	r3, r4
 8005f8e:	0034      	movs	r4, r6
 8005f90:	001e      	movs	r6, r3
 8005f92:	2300      	movs	r3, #0
 8005f94:	9301      	str	r3, [sp, #4]
 8005f96:	0038      	movs	r0, r7
 8005f98:	6861      	ldr	r1, [r4, #4]
 8005f9a:	f7ff fd37 	bl	8005a0c <_Balloc>
 8005f9e:	1e02      	subs	r2, r0, #0
 8005fa0:	d103      	bne.n	8005faa <__mdiff+0x5e>
 8005fa2:	2190      	movs	r1, #144	; 0x90
 8005fa4:	4b32      	ldr	r3, [pc, #200]	; (8006070 <__mdiff+0x124>)
 8005fa6:	0089      	lsls	r1, r1, #2
 8005fa8:	e7e3      	b.n	8005f72 <__mdiff+0x26>
 8005faa:	9b01      	ldr	r3, [sp, #4]
 8005fac:	2700      	movs	r7, #0
 8005fae:	60c3      	str	r3, [r0, #12]
 8005fb0:	6920      	ldr	r0, [r4, #16]
 8005fb2:	3414      	adds	r4, #20
 8005fb4:	9401      	str	r4, [sp, #4]
 8005fb6:	9b01      	ldr	r3, [sp, #4]
 8005fb8:	0084      	lsls	r4, r0, #2
 8005fba:	191b      	adds	r3, r3, r4
 8005fbc:	0034      	movs	r4, r6
 8005fbe:	9302      	str	r3, [sp, #8]
 8005fc0:	6933      	ldr	r3, [r6, #16]
 8005fc2:	3414      	adds	r4, #20
 8005fc4:	0099      	lsls	r1, r3, #2
 8005fc6:	1863      	adds	r3, r4, r1
 8005fc8:	9303      	str	r3, [sp, #12]
 8005fca:	0013      	movs	r3, r2
 8005fcc:	3314      	adds	r3, #20
 8005fce:	469c      	mov	ip, r3
 8005fd0:	9305      	str	r3, [sp, #20]
 8005fd2:	9b01      	ldr	r3, [sp, #4]
 8005fd4:	9304      	str	r3, [sp, #16]
 8005fd6:	9b04      	ldr	r3, [sp, #16]
 8005fd8:	cc02      	ldmia	r4!, {r1}
 8005fda:	cb20      	ldmia	r3!, {r5}
 8005fdc:	9304      	str	r3, [sp, #16]
 8005fde:	b2ab      	uxth	r3, r5
 8005fe0:	19df      	adds	r7, r3, r7
 8005fe2:	b28b      	uxth	r3, r1
 8005fe4:	1afb      	subs	r3, r7, r3
 8005fe6:	0c09      	lsrs	r1, r1, #16
 8005fe8:	0c2d      	lsrs	r5, r5, #16
 8005fea:	1a6d      	subs	r5, r5, r1
 8005fec:	1419      	asrs	r1, r3, #16
 8005fee:	186d      	adds	r5, r5, r1
 8005ff0:	4661      	mov	r1, ip
 8005ff2:	142f      	asrs	r7, r5, #16
 8005ff4:	b29b      	uxth	r3, r3
 8005ff6:	042d      	lsls	r5, r5, #16
 8005ff8:	432b      	orrs	r3, r5
 8005ffa:	c108      	stmia	r1!, {r3}
 8005ffc:	9b03      	ldr	r3, [sp, #12]
 8005ffe:	468c      	mov	ip, r1
 8006000:	42a3      	cmp	r3, r4
 8006002:	d8e8      	bhi.n	8005fd6 <__mdiff+0x8a>
 8006004:	0031      	movs	r1, r6
 8006006:	9c03      	ldr	r4, [sp, #12]
 8006008:	3115      	adds	r1, #21
 800600a:	2304      	movs	r3, #4
 800600c:	428c      	cmp	r4, r1
 800600e:	d304      	bcc.n	800601a <__mdiff+0xce>
 8006010:	1ba3      	subs	r3, r4, r6
 8006012:	3b15      	subs	r3, #21
 8006014:	089b      	lsrs	r3, r3, #2
 8006016:	3301      	adds	r3, #1
 8006018:	009b      	lsls	r3, r3, #2
 800601a:	9901      	ldr	r1, [sp, #4]
 800601c:	18cc      	adds	r4, r1, r3
 800601e:	9905      	ldr	r1, [sp, #20]
 8006020:	0026      	movs	r6, r4
 8006022:	18cb      	adds	r3, r1, r3
 8006024:	469c      	mov	ip, r3
 8006026:	9902      	ldr	r1, [sp, #8]
 8006028:	428e      	cmp	r6, r1
 800602a:	d310      	bcc.n	800604e <__mdiff+0x102>
 800602c:	9e02      	ldr	r6, [sp, #8]
 800602e:	1ee1      	subs	r1, r4, #3
 8006030:	2500      	movs	r5, #0
 8006032:	428e      	cmp	r6, r1
 8006034:	d304      	bcc.n	8006040 <__mdiff+0xf4>
 8006036:	0031      	movs	r1, r6
 8006038:	3103      	adds	r1, #3
 800603a:	1b0c      	subs	r4, r1, r4
 800603c:	08a4      	lsrs	r4, r4, #2
 800603e:	00a5      	lsls	r5, r4, #2
 8006040:	195b      	adds	r3, r3, r5
 8006042:	3b04      	subs	r3, #4
 8006044:	6819      	ldr	r1, [r3, #0]
 8006046:	2900      	cmp	r1, #0
 8006048:	d00f      	beq.n	800606a <__mdiff+0x11e>
 800604a:	6110      	str	r0, [r2, #16]
 800604c:	e797      	b.n	8005f7e <__mdiff+0x32>
 800604e:	ce02      	ldmia	r6!, {r1}
 8006050:	b28d      	uxth	r5, r1
 8006052:	19ed      	adds	r5, r5, r7
 8006054:	0c0f      	lsrs	r7, r1, #16
 8006056:	1429      	asrs	r1, r5, #16
 8006058:	1879      	adds	r1, r7, r1
 800605a:	140f      	asrs	r7, r1, #16
 800605c:	b2ad      	uxth	r5, r5
 800605e:	0409      	lsls	r1, r1, #16
 8006060:	430d      	orrs	r5, r1
 8006062:	4661      	mov	r1, ip
 8006064:	c120      	stmia	r1!, {r5}
 8006066:	468c      	mov	ip, r1
 8006068:	e7dd      	b.n	8006026 <__mdiff+0xda>
 800606a:	3801      	subs	r0, #1
 800606c:	e7e9      	b.n	8006042 <__mdiff+0xf6>
 800606e:	46c0      	nop			; (mov r8, r8)
 8006070:	08007627 	.word	0x08007627
 8006074:	00000232 	.word	0x00000232
 8006078:	08007638 	.word	0x08007638

0800607c <__d2b>:
 800607c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800607e:	2101      	movs	r1, #1
 8006080:	0014      	movs	r4, r2
 8006082:	001e      	movs	r6, r3
 8006084:	9f08      	ldr	r7, [sp, #32]
 8006086:	f7ff fcc1 	bl	8005a0c <_Balloc>
 800608a:	1e05      	subs	r5, r0, #0
 800608c:	d105      	bne.n	800609a <__d2b+0x1e>
 800608e:	0002      	movs	r2, r0
 8006090:	4b26      	ldr	r3, [pc, #152]	; (800612c <__d2b+0xb0>)
 8006092:	4927      	ldr	r1, [pc, #156]	; (8006130 <__d2b+0xb4>)
 8006094:	4827      	ldr	r0, [pc, #156]	; (8006134 <__d2b+0xb8>)
 8006096:	f000 fad7 	bl	8006648 <__assert_func>
 800609a:	0333      	lsls	r3, r6, #12
 800609c:	0076      	lsls	r6, r6, #1
 800609e:	0b1b      	lsrs	r3, r3, #12
 80060a0:	0d76      	lsrs	r6, r6, #21
 80060a2:	d124      	bne.n	80060ee <__d2b+0x72>
 80060a4:	9301      	str	r3, [sp, #4]
 80060a6:	2c00      	cmp	r4, #0
 80060a8:	d027      	beq.n	80060fa <__d2b+0x7e>
 80060aa:	4668      	mov	r0, sp
 80060ac:	9400      	str	r4, [sp, #0]
 80060ae:	f7ff fd73 	bl	8005b98 <__lo0bits>
 80060b2:	9c00      	ldr	r4, [sp, #0]
 80060b4:	2800      	cmp	r0, #0
 80060b6:	d01e      	beq.n	80060f6 <__d2b+0x7a>
 80060b8:	9b01      	ldr	r3, [sp, #4]
 80060ba:	2120      	movs	r1, #32
 80060bc:	001a      	movs	r2, r3
 80060be:	1a09      	subs	r1, r1, r0
 80060c0:	408a      	lsls	r2, r1
 80060c2:	40c3      	lsrs	r3, r0
 80060c4:	4322      	orrs	r2, r4
 80060c6:	616a      	str	r2, [r5, #20]
 80060c8:	9301      	str	r3, [sp, #4]
 80060ca:	9c01      	ldr	r4, [sp, #4]
 80060cc:	61ac      	str	r4, [r5, #24]
 80060ce:	1e63      	subs	r3, r4, #1
 80060d0:	419c      	sbcs	r4, r3
 80060d2:	3401      	adds	r4, #1
 80060d4:	612c      	str	r4, [r5, #16]
 80060d6:	2e00      	cmp	r6, #0
 80060d8:	d018      	beq.n	800610c <__d2b+0x90>
 80060da:	4b17      	ldr	r3, [pc, #92]	; (8006138 <__d2b+0xbc>)
 80060dc:	18f6      	adds	r6, r6, r3
 80060de:	2335      	movs	r3, #53	; 0x35
 80060e0:	1836      	adds	r6, r6, r0
 80060e2:	1a18      	subs	r0, r3, r0
 80060e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80060e6:	603e      	str	r6, [r7, #0]
 80060e8:	6018      	str	r0, [r3, #0]
 80060ea:	0028      	movs	r0, r5
 80060ec:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80060ee:	2280      	movs	r2, #128	; 0x80
 80060f0:	0352      	lsls	r2, r2, #13
 80060f2:	4313      	orrs	r3, r2
 80060f4:	e7d6      	b.n	80060a4 <__d2b+0x28>
 80060f6:	616c      	str	r4, [r5, #20]
 80060f8:	e7e7      	b.n	80060ca <__d2b+0x4e>
 80060fa:	a801      	add	r0, sp, #4
 80060fc:	f7ff fd4c 	bl	8005b98 <__lo0bits>
 8006100:	2401      	movs	r4, #1
 8006102:	9b01      	ldr	r3, [sp, #4]
 8006104:	612c      	str	r4, [r5, #16]
 8006106:	616b      	str	r3, [r5, #20]
 8006108:	3020      	adds	r0, #32
 800610a:	e7e4      	b.n	80060d6 <__d2b+0x5a>
 800610c:	4b0b      	ldr	r3, [pc, #44]	; (800613c <__d2b+0xc0>)
 800610e:	18c0      	adds	r0, r0, r3
 8006110:	4b0b      	ldr	r3, [pc, #44]	; (8006140 <__d2b+0xc4>)
 8006112:	6038      	str	r0, [r7, #0]
 8006114:	18e3      	adds	r3, r4, r3
 8006116:	009b      	lsls	r3, r3, #2
 8006118:	18eb      	adds	r3, r5, r3
 800611a:	6958      	ldr	r0, [r3, #20]
 800611c:	f7ff fd22 	bl	8005b64 <__hi0bits>
 8006120:	0164      	lsls	r4, r4, #5
 8006122:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006124:	1a24      	subs	r4, r4, r0
 8006126:	601c      	str	r4, [r3, #0]
 8006128:	e7df      	b.n	80060ea <__d2b+0x6e>
 800612a:	46c0      	nop			; (mov r8, r8)
 800612c:	08007627 	.word	0x08007627
 8006130:	0000030a 	.word	0x0000030a
 8006134:	08007638 	.word	0x08007638
 8006138:	fffffbcd 	.word	0xfffffbcd
 800613c:	fffffbce 	.word	0xfffffbce
 8006140:	3fffffff 	.word	0x3fffffff

08006144 <_calloc_r>:
 8006144:	b570      	push	{r4, r5, r6, lr}
 8006146:	0c13      	lsrs	r3, r2, #16
 8006148:	0c0d      	lsrs	r5, r1, #16
 800614a:	d11e      	bne.n	800618a <_calloc_r+0x46>
 800614c:	2b00      	cmp	r3, #0
 800614e:	d10c      	bne.n	800616a <_calloc_r+0x26>
 8006150:	b289      	uxth	r1, r1
 8006152:	b294      	uxth	r4, r2
 8006154:	434c      	muls	r4, r1
 8006156:	0021      	movs	r1, r4
 8006158:	f000 f88c 	bl	8006274 <_malloc_r>
 800615c:	1e05      	subs	r5, r0, #0
 800615e:	d01b      	beq.n	8006198 <_calloc_r+0x54>
 8006160:	0022      	movs	r2, r4
 8006162:	2100      	movs	r1, #0
 8006164:	f7fe f8dc 	bl	8004320 <memset>
 8006168:	e016      	b.n	8006198 <_calloc_r+0x54>
 800616a:	1c1d      	adds	r5, r3, #0
 800616c:	1c0b      	adds	r3, r1, #0
 800616e:	b292      	uxth	r2, r2
 8006170:	b289      	uxth	r1, r1
 8006172:	b29c      	uxth	r4, r3
 8006174:	4351      	muls	r1, r2
 8006176:	b2ab      	uxth	r3, r5
 8006178:	4363      	muls	r3, r4
 800617a:	0c0c      	lsrs	r4, r1, #16
 800617c:	191c      	adds	r4, r3, r4
 800617e:	0c22      	lsrs	r2, r4, #16
 8006180:	d107      	bne.n	8006192 <_calloc_r+0x4e>
 8006182:	0424      	lsls	r4, r4, #16
 8006184:	b289      	uxth	r1, r1
 8006186:	430c      	orrs	r4, r1
 8006188:	e7e5      	b.n	8006156 <_calloc_r+0x12>
 800618a:	2b00      	cmp	r3, #0
 800618c:	d101      	bne.n	8006192 <_calloc_r+0x4e>
 800618e:	1c13      	adds	r3, r2, #0
 8006190:	e7ed      	b.n	800616e <_calloc_r+0x2a>
 8006192:	230c      	movs	r3, #12
 8006194:	2500      	movs	r5, #0
 8006196:	6003      	str	r3, [r0, #0]
 8006198:	0028      	movs	r0, r5
 800619a:	bd70      	pop	{r4, r5, r6, pc}

0800619c <_free_r>:
 800619c:	b570      	push	{r4, r5, r6, lr}
 800619e:	0005      	movs	r5, r0
 80061a0:	2900      	cmp	r1, #0
 80061a2:	d010      	beq.n	80061c6 <_free_r+0x2a>
 80061a4:	1f0c      	subs	r4, r1, #4
 80061a6:	6823      	ldr	r3, [r4, #0]
 80061a8:	2b00      	cmp	r3, #0
 80061aa:	da00      	bge.n	80061ae <_free_r+0x12>
 80061ac:	18e4      	adds	r4, r4, r3
 80061ae:	0028      	movs	r0, r5
 80061b0:	f000 fa9e 	bl	80066f0 <__malloc_lock>
 80061b4:	4a1d      	ldr	r2, [pc, #116]	; (800622c <_free_r+0x90>)
 80061b6:	6813      	ldr	r3, [r2, #0]
 80061b8:	2b00      	cmp	r3, #0
 80061ba:	d105      	bne.n	80061c8 <_free_r+0x2c>
 80061bc:	6063      	str	r3, [r4, #4]
 80061be:	6014      	str	r4, [r2, #0]
 80061c0:	0028      	movs	r0, r5
 80061c2:	f000 fa9d 	bl	8006700 <__malloc_unlock>
 80061c6:	bd70      	pop	{r4, r5, r6, pc}
 80061c8:	42a3      	cmp	r3, r4
 80061ca:	d908      	bls.n	80061de <_free_r+0x42>
 80061cc:	6821      	ldr	r1, [r4, #0]
 80061ce:	1860      	adds	r0, r4, r1
 80061d0:	4283      	cmp	r3, r0
 80061d2:	d1f3      	bne.n	80061bc <_free_r+0x20>
 80061d4:	6818      	ldr	r0, [r3, #0]
 80061d6:	685b      	ldr	r3, [r3, #4]
 80061d8:	1841      	adds	r1, r0, r1
 80061da:	6021      	str	r1, [r4, #0]
 80061dc:	e7ee      	b.n	80061bc <_free_r+0x20>
 80061de:	001a      	movs	r2, r3
 80061e0:	685b      	ldr	r3, [r3, #4]
 80061e2:	2b00      	cmp	r3, #0
 80061e4:	d001      	beq.n	80061ea <_free_r+0x4e>
 80061e6:	42a3      	cmp	r3, r4
 80061e8:	d9f9      	bls.n	80061de <_free_r+0x42>
 80061ea:	6811      	ldr	r1, [r2, #0]
 80061ec:	1850      	adds	r0, r2, r1
 80061ee:	42a0      	cmp	r0, r4
 80061f0:	d10b      	bne.n	800620a <_free_r+0x6e>
 80061f2:	6820      	ldr	r0, [r4, #0]
 80061f4:	1809      	adds	r1, r1, r0
 80061f6:	1850      	adds	r0, r2, r1
 80061f8:	6011      	str	r1, [r2, #0]
 80061fa:	4283      	cmp	r3, r0
 80061fc:	d1e0      	bne.n	80061c0 <_free_r+0x24>
 80061fe:	6818      	ldr	r0, [r3, #0]
 8006200:	685b      	ldr	r3, [r3, #4]
 8006202:	1841      	adds	r1, r0, r1
 8006204:	6011      	str	r1, [r2, #0]
 8006206:	6053      	str	r3, [r2, #4]
 8006208:	e7da      	b.n	80061c0 <_free_r+0x24>
 800620a:	42a0      	cmp	r0, r4
 800620c:	d902      	bls.n	8006214 <_free_r+0x78>
 800620e:	230c      	movs	r3, #12
 8006210:	602b      	str	r3, [r5, #0]
 8006212:	e7d5      	b.n	80061c0 <_free_r+0x24>
 8006214:	6821      	ldr	r1, [r4, #0]
 8006216:	1860      	adds	r0, r4, r1
 8006218:	4283      	cmp	r3, r0
 800621a:	d103      	bne.n	8006224 <_free_r+0x88>
 800621c:	6818      	ldr	r0, [r3, #0]
 800621e:	685b      	ldr	r3, [r3, #4]
 8006220:	1841      	adds	r1, r0, r1
 8006222:	6021      	str	r1, [r4, #0]
 8006224:	6063      	str	r3, [r4, #4]
 8006226:	6054      	str	r4, [r2, #4]
 8006228:	e7ca      	b.n	80061c0 <_free_r+0x24>
 800622a:	46c0      	nop			; (mov r8, r8)
 800622c:	20000394 	.word	0x20000394

08006230 <sbrk_aligned>:
 8006230:	b570      	push	{r4, r5, r6, lr}
 8006232:	4e0f      	ldr	r6, [pc, #60]	; (8006270 <sbrk_aligned+0x40>)
 8006234:	000d      	movs	r5, r1
 8006236:	6831      	ldr	r1, [r6, #0]
 8006238:	0004      	movs	r4, r0
 800623a:	2900      	cmp	r1, #0
 800623c:	d102      	bne.n	8006244 <sbrk_aligned+0x14>
 800623e:	f000 f9f1 	bl	8006624 <_sbrk_r>
 8006242:	6030      	str	r0, [r6, #0]
 8006244:	0029      	movs	r1, r5
 8006246:	0020      	movs	r0, r4
 8006248:	f000 f9ec 	bl	8006624 <_sbrk_r>
 800624c:	1c43      	adds	r3, r0, #1
 800624e:	d00a      	beq.n	8006266 <sbrk_aligned+0x36>
 8006250:	2303      	movs	r3, #3
 8006252:	1cc5      	adds	r5, r0, #3
 8006254:	439d      	bics	r5, r3
 8006256:	42a8      	cmp	r0, r5
 8006258:	d007      	beq.n	800626a <sbrk_aligned+0x3a>
 800625a:	1a29      	subs	r1, r5, r0
 800625c:	0020      	movs	r0, r4
 800625e:	f000 f9e1 	bl	8006624 <_sbrk_r>
 8006262:	1c43      	adds	r3, r0, #1
 8006264:	d101      	bne.n	800626a <sbrk_aligned+0x3a>
 8006266:	2501      	movs	r5, #1
 8006268:	426d      	negs	r5, r5
 800626a:	0028      	movs	r0, r5
 800626c:	bd70      	pop	{r4, r5, r6, pc}
 800626e:	46c0      	nop			; (mov r8, r8)
 8006270:	20000398 	.word	0x20000398

08006274 <_malloc_r>:
 8006274:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006276:	2203      	movs	r2, #3
 8006278:	1ccb      	adds	r3, r1, #3
 800627a:	4393      	bics	r3, r2
 800627c:	3308      	adds	r3, #8
 800627e:	0006      	movs	r6, r0
 8006280:	001f      	movs	r7, r3
 8006282:	2b0c      	cmp	r3, #12
 8006284:	d232      	bcs.n	80062ec <_malloc_r+0x78>
 8006286:	270c      	movs	r7, #12
 8006288:	42b9      	cmp	r1, r7
 800628a:	d831      	bhi.n	80062f0 <_malloc_r+0x7c>
 800628c:	0030      	movs	r0, r6
 800628e:	f000 fa2f 	bl	80066f0 <__malloc_lock>
 8006292:	4d32      	ldr	r5, [pc, #200]	; (800635c <_malloc_r+0xe8>)
 8006294:	682b      	ldr	r3, [r5, #0]
 8006296:	001c      	movs	r4, r3
 8006298:	2c00      	cmp	r4, #0
 800629a:	d12e      	bne.n	80062fa <_malloc_r+0x86>
 800629c:	0039      	movs	r1, r7
 800629e:	0030      	movs	r0, r6
 80062a0:	f7ff ffc6 	bl	8006230 <sbrk_aligned>
 80062a4:	0004      	movs	r4, r0
 80062a6:	1c43      	adds	r3, r0, #1
 80062a8:	d11e      	bne.n	80062e8 <_malloc_r+0x74>
 80062aa:	682c      	ldr	r4, [r5, #0]
 80062ac:	0025      	movs	r5, r4
 80062ae:	2d00      	cmp	r5, #0
 80062b0:	d14a      	bne.n	8006348 <_malloc_r+0xd4>
 80062b2:	6823      	ldr	r3, [r4, #0]
 80062b4:	0029      	movs	r1, r5
 80062b6:	18e3      	adds	r3, r4, r3
 80062b8:	0030      	movs	r0, r6
 80062ba:	9301      	str	r3, [sp, #4]
 80062bc:	f000 f9b2 	bl	8006624 <_sbrk_r>
 80062c0:	9b01      	ldr	r3, [sp, #4]
 80062c2:	4283      	cmp	r3, r0
 80062c4:	d143      	bne.n	800634e <_malloc_r+0xda>
 80062c6:	6823      	ldr	r3, [r4, #0]
 80062c8:	3703      	adds	r7, #3
 80062ca:	1aff      	subs	r7, r7, r3
 80062cc:	2303      	movs	r3, #3
 80062ce:	439f      	bics	r7, r3
 80062d0:	3708      	adds	r7, #8
 80062d2:	2f0c      	cmp	r7, #12
 80062d4:	d200      	bcs.n	80062d8 <_malloc_r+0x64>
 80062d6:	270c      	movs	r7, #12
 80062d8:	0039      	movs	r1, r7
 80062da:	0030      	movs	r0, r6
 80062dc:	f7ff ffa8 	bl	8006230 <sbrk_aligned>
 80062e0:	1c43      	adds	r3, r0, #1
 80062e2:	d034      	beq.n	800634e <_malloc_r+0xda>
 80062e4:	6823      	ldr	r3, [r4, #0]
 80062e6:	19df      	adds	r7, r3, r7
 80062e8:	6027      	str	r7, [r4, #0]
 80062ea:	e013      	b.n	8006314 <_malloc_r+0xa0>
 80062ec:	2b00      	cmp	r3, #0
 80062ee:	dacb      	bge.n	8006288 <_malloc_r+0x14>
 80062f0:	230c      	movs	r3, #12
 80062f2:	2500      	movs	r5, #0
 80062f4:	6033      	str	r3, [r6, #0]
 80062f6:	0028      	movs	r0, r5
 80062f8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80062fa:	6822      	ldr	r2, [r4, #0]
 80062fc:	1bd1      	subs	r1, r2, r7
 80062fe:	d420      	bmi.n	8006342 <_malloc_r+0xce>
 8006300:	290b      	cmp	r1, #11
 8006302:	d917      	bls.n	8006334 <_malloc_r+0xc0>
 8006304:	19e2      	adds	r2, r4, r7
 8006306:	6027      	str	r7, [r4, #0]
 8006308:	42a3      	cmp	r3, r4
 800630a:	d111      	bne.n	8006330 <_malloc_r+0xbc>
 800630c:	602a      	str	r2, [r5, #0]
 800630e:	6863      	ldr	r3, [r4, #4]
 8006310:	6011      	str	r1, [r2, #0]
 8006312:	6053      	str	r3, [r2, #4]
 8006314:	0030      	movs	r0, r6
 8006316:	0025      	movs	r5, r4
 8006318:	f000 f9f2 	bl	8006700 <__malloc_unlock>
 800631c:	2207      	movs	r2, #7
 800631e:	350b      	adds	r5, #11
 8006320:	1d23      	adds	r3, r4, #4
 8006322:	4395      	bics	r5, r2
 8006324:	1aea      	subs	r2, r5, r3
 8006326:	429d      	cmp	r5, r3
 8006328:	d0e5      	beq.n	80062f6 <_malloc_r+0x82>
 800632a:	1b5b      	subs	r3, r3, r5
 800632c:	50a3      	str	r3, [r4, r2]
 800632e:	e7e2      	b.n	80062f6 <_malloc_r+0x82>
 8006330:	605a      	str	r2, [r3, #4]
 8006332:	e7ec      	b.n	800630e <_malloc_r+0x9a>
 8006334:	6862      	ldr	r2, [r4, #4]
 8006336:	42a3      	cmp	r3, r4
 8006338:	d101      	bne.n	800633e <_malloc_r+0xca>
 800633a:	602a      	str	r2, [r5, #0]
 800633c:	e7ea      	b.n	8006314 <_malloc_r+0xa0>
 800633e:	605a      	str	r2, [r3, #4]
 8006340:	e7e8      	b.n	8006314 <_malloc_r+0xa0>
 8006342:	0023      	movs	r3, r4
 8006344:	6864      	ldr	r4, [r4, #4]
 8006346:	e7a7      	b.n	8006298 <_malloc_r+0x24>
 8006348:	002c      	movs	r4, r5
 800634a:	686d      	ldr	r5, [r5, #4]
 800634c:	e7af      	b.n	80062ae <_malloc_r+0x3a>
 800634e:	230c      	movs	r3, #12
 8006350:	0030      	movs	r0, r6
 8006352:	6033      	str	r3, [r6, #0]
 8006354:	f000 f9d4 	bl	8006700 <__malloc_unlock>
 8006358:	e7cd      	b.n	80062f6 <_malloc_r+0x82>
 800635a:	46c0      	nop			; (mov r8, r8)
 800635c:	20000394 	.word	0x20000394

08006360 <__ssputs_r>:
 8006360:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006362:	688e      	ldr	r6, [r1, #8]
 8006364:	b085      	sub	sp, #20
 8006366:	0007      	movs	r7, r0
 8006368:	000c      	movs	r4, r1
 800636a:	9203      	str	r2, [sp, #12]
 800636c:	9301      	str	r3, [sp, #4]
 800636e:	429e      	cmp	r6, r3
 8006370:	d83c      	bhi.n	80063ec <__ssputs_r+0x8c>
 8006372:	2390      	movs	r3, #144	; 0x90
 8006374:	898a      	ldrh	r2, [r1, #12]
 8006376:	00db      	lsls	r3, r3, #3
 8006378:	421a      	tst	r2, r3
 800637a:	d034      	beq.n	80063e6 <__ssputs_r+0x86>
 800637c:	6909      	ldr	r1, [r1, #16]
 800637e:	6823      	ldr	r3, [r4, #0]
 8006380:	6960      	ldr	r0, [r4, #20]
 8006382:	1a5b      	subs	r3, r3, r1
 8006384:	9302      	str	r3, [sp, #8]
 8006386:	2303      	movs	r3, #3
 8006388:	4343      	muls	r3, r0
 800638a:	0fdd      	lsrs	r5, r3, #31
 800638c:	18ed      	adds	r5, r5, r3
 800638e:	9b01      	ldr	r3, [sp, #4]
 8006390:	9802      	ldr	r0, [sp, #8]
 8006392:	3301      	adds	r3, #1
 8006394:	181b      	adds	r3, r3, r0
 8006396:	106d      	asrs	r5, r5, #1
 8006398:	42ab      	cmp	r3, r5
 800639a:	d900      	bls.n	800639e <__ssputs_r+0x3e>
 800639c:	001d      	movs	r5, r3
 800639e:	0553      	lsls	r3, r2, #21
 80063a0:	d532      	bpl.n	8006408 <__ssputs_r+0xa8>
 80063a2:	0029      	movs	r1, r5
 80063a4:	0038      	movs	r0, r7
 80063a6:	f7ff ff65 	bl	8006274 <_malloc_r>
 80063aa:	1e06      	subs	r6, r0, #0
 80063ac:	d109      	bne.n	80063c2 <__ssputs_r+0x62>
 80063ae:	230c      	movs	r3, #12
 80063b0:	603b      	str	r3, [r7, #0]
 80063b2:	2340      	movs	r3, #64	; 0x40
 80063b4:	2001      	movs	r0, #1
 80063b6:	89a2      	ldrh	r2, [r4, #12]
 80063b8:	4240      	negs	r0, r0
 80063ba:	4313      	orrs	r3, r2
 80063bc:	81a3      	strh	r3, [r4, #12]
 80063be:	b005      	add	sp, #20
 80063c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80063c2:	9a02      	ldr	r2, [sp, #8]
 80063c4:	6921      	ldr	r1, [r4, #16]
 80063c6:	f7ff fb18 	bl	80059fa <memcpy>
 80063ca:	89a3      	ldrh	r3, [r4, #12]
 80063cc:	4a14      	ldr	r2, [pc, #80]	; (8006420 <__ssputs_r+0xc0>)
 80063ce:	401a      	ands	r2, r3
 80063d0:	2380      	movs	r3, #128	; 0x80
 80063d2:	4313      	orrs	r3, r2
 80063d4:	81a3      	strh	r3, [r4, #12]
 80063d6:	9b02      	ldr	r3, [sp, #8]
 80063d8:	6126      	str	r6, [r4, #16]
 80063da:	18f6      	adds	r6, r6, r3
 80063dc:	6026      	str	r6, [r4, #0]
 80063de:	6165      	str	r5, [r4, #20]
 80063e0:	9e01      	ldr	r6, [sp, #4]
 80063e2:	1aed      	subs	r5, r5, r3
 80063e4:	60a5      	str	r5, [r4, #8]
 80063e6:	9b01      	ldr	r3, [sp, #4]
 80063e8:	429e      	cmp	r6, r3
 80063ea:	d900      	bls.n	80063ee <__ssputs_r+0x8e>
 80063ec:	9e01      	ldr	r6, [sp, #4]
 80063ee:	0032      	movs	r2, r6
 80063f0:	9903      	ldr	r1, [sp, #12]
 80063f2:	6820      	ldr	r0, [r4, #0]
 80063f4:	f000 f968 	bl	80066c8 <memmove>
 80063f8:	68a3      	ldr	r3, [r4, #8]
 80063fa:	2000      	movs	r0, #0
 80063fc:	1b9b      	subs	r3, r3, r6
 80063fe:	60a3      	str	r3, [r4, #8]
 8006400:	6823      	ldr	r3, [r4, #0]
 8006402:	199e      	adds	r6, r3, r6
 8006404:	6026      	str	r6, [r4, #0]
 8006406:	e7da      	b.n	80063be <__ssputs_r+0x5e>
 8006408:	002a      	movs	r2, r5
 800640a:	0038      	movs	r0, r7
 800640c:	f000 f980 	bl	8006710 <_realloc_r>
 8006410:	1e06      	subs	r6, r0, #0
 8006412:	d1e0      	bne.n	80063d6 <__ssputs_r+0x76>
 8006414:	0038      	movs	r0, r7
 8006416:	6921      	ldr	r1, [r4, #16]
 8006418:	f7ff fec0 	bl	800619c <_free_r>
 800641c:	e7c7      	b.n	80063ae <__ssputs_r+0x4e>
 800641e:	46c0      	nop			; (mov r8, r8)
 8006420:	fffffb7f 	.word	0xfffffb7f

08006424 <_svfiprintf_r>:
 8006424:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006426:	b0a1      	sub	sp, #132	; 0x84
 8006428:	9003      	str	r0, [sp, #12]
 800642a:	001d      	movs	r5, r3
 800642c:	898b      	ldrh	r3, [r1, #12]
 800642e:	000f      	movs	r7, r1
 8006430:	0016      	movs	r6, r2
 8006432:	061b      	lsls	r3, r3, #24
 8006434:	d511      	bpl.n	800645a <_svfiprintf_r+0x36>
 8006436:	690b      	ldr	r3, [r1, #16]
 8006438:	2b00      	cmp	r3, #0
 800643a:	d10e      	bne.n	800645a <_svfiprintf_r+0x36>
 800643c:	2140      	movs	r1, #64	; 0x40
 800643e:	f7ff ff19 	bl	8006274 <_malloc_r>
 8006442:	6038      	str	r0, [r7, #0]
 8006444:	6138      	str	r0, [r7, #16]
 8006446:	2800      	cmp	r0, #0
 8006448:	d105      	bne.n	8006456 <_svfiprintf_r+0x32>
 800644a:	230c      	movs	r3, #12
 800644c:	9a03      	ldr	r2, [sp, #12]
 800644e:	3801      	subs	r0, #1
 8006450:	6013      	str	r3, [r2, #0]
 8006452:	b021      	add	sp, #132	; 0x84
 8006454:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006456:	2340      	movs	r3, #64	; 0x40
 8006458:	617b      	str	r3, [r7, #20]
 800645a:	2300      	movs	r3, #0
 800645c:	ac08      	add	r4, sp, #32
 800645e:	6163      	str	r3, [r4, #20]
 8006460:	3320      	adds	r3, #32
 8006462:	7663      	strb	r3, [r4, #25]
 8006464:	3310      	adds	r3, #16
 8006466:	76a3      	strb	r3, [r4, #26]
 8006468:	9507      	str	r5, [sp, #28]
 800646a:	0035      	movs	r5, r6
 800646c:	782b      	ldrb	r3, [r5, #0]
 800646e:	2b00      	cmp	r3, #0
 8006470:	d001      	beq.n	8006476 <_svfiprintf_r+0x52>
 8006472:	2b25      	cmp	r3, #37	; 0x25
 8006474:	d147      	bne.n	8006506 <_svfiprintf_r+0xe2>
 8006476:	1bab      	subs	r3, r5, r6
 8006478:	9305      	str	r3, [sp, #20]
 800647a:	42b5      	cmp	r5, r6
 800647c:	d00c      	beq.n	8006498 <_svfiprintf_r+0x74>
 800647e:	0032      	movs	r2, r6
 8006480:	0039      	movs	r1, r7
 8006482:	9803      	ldr	r0, [sp, #12]
 8006484:	f7ff ff6c 	bl	8006360 <__ssputs_r>
 8006488:	1c43      	adds	r3, r0, #1
 800648a:	d100      	bne.n	800648e <_svfiprintf_r+0x6a>
 800648c:	e0ae      	b.n	80065ec <_svfiprintf_r+0x1c8>
 800648e:	6962      	ldr	r2, [r4, #20]
 8006490:	9b05      	ldr	r3, [sp, #20]
 8006492:	4694      	mov	ip, r2
 8006494:	4463      	add	r3, ip
 8006496:	6163      	str	r3, [r4, #20]
 8006498:	782b      	ldrb	r3, [r5, #0]
 800649a:	2b00      	cmp	r3, #0
 800649c:	d100      	bne.n	80064a0 <_svfiprintf_r+0x7c>
 800649e:	e0a5      	b.n	80065ec <_svfiprintf_r+0x1c8>
 80064a0:	2201      	movs	r2, #1
 80064a2:	2300      	movs	r3, #0
 80064a4:	4252      	negs	r2, r2
 80064a6:	6062      	str	r2, [r4, #4]
 80064a8:	a904      	add	r1, sp, #16
 80064aa:	3254      	adds	r2, #84	; 0x54
 80064ac:	1852      	adds	r2, r2, r1
 80064ae:	1c6e      	adds	r6, r5, #1
 80064b0:	6023      	str	r3, [r4, #0]
 80064b2:	60e3      	str	r3, [r4, #12]
 80064b4:	60a3      	str	r3, [r4, #8]
 80064b6:	7013      	strb	r3, [r2, #0]
 80064b8:	65a3      	str	r3, [r4, #88]	; 0x58
 80064ba:	2205      	movs	r2, #5
 80064bc:	7831      	ldrb	r1, [r6, #0]
 80064be:	4854      	ldr	r0, [pc, #336]	; (8006610 <_svfiprintf_r+0x1ec>)
 80064c0:	f7ff fa90 	bl	80059e4 <memchr>
 80064c4:	1c75      	adds	r5, r6, #1
 80064c6:	2800      	cmp	r0, #0
 80064c8:	d11f      	bne.n	800650a <_svfiprintf_r+0xe6>
 80064ca:	6822      	ldr	r2, [r4, #0]
 80064cc:	06d3      	lsls	r3, r2, #27
 80064ce:	d504      	bpl.n	80064da <_svfiprintf_r+0xb6>
 80064d0:	2353      	movs	r3, #83	; 0x53
 80064d2:	a904      	add	r1, sp, #16
 80064d4:	185b      	adds	r3, r3, r1
 80064d6:	2120      	movs	r1, #32
 80064d8:	7019      	strb	r1, [r3, #0]
 80064da:	0713      	lsls	r3, r2, #28
 80064dc:	d504      	bpl.n	80064e8 <_svfiprintf_r+0xc4>
 80064de:	2353      	movs	r3, #83	; 0x53
 80064e0:	a904      	add	r1, sp, #16
 80064e2:	185b      	adds	r3, r3, r1
 80064e4:	212b      	movs	r1, #43	; 0x2b
 80064e6:	7019      	strb	r1, [r3, #0]
 80064e8:	7833      	ldrb	r3, [r6, #0]
 80064ea:	2b2a      	cmp	r3, #42	; 0x2a
 80064ec:	d016      	beq.n	800651c <_svfiprintf_r+0xf8>
 80064ee:	0035      	movs	r5, r6
 80064f0:	2100      	movs	r1, #0
 80064f2:	200a      	movs	r0, #10
 80064f4:	68e3      	ldr	r3, [r4, #12]
 80064f6:	782a      	ldrb	r2, [r5, #0]
 80064f8:	1c6e      	adds	r6, r5, #1
 80064fa:	3a30      	subs	r2, #48	; 0x30
 80064fc:	2a09      	cmp	r2, #9
 80064fe:	d94e      	bls.n	800659e <_svfiprintf_r+0x17a>
 8006500:	2900      	cmp	r1, #0
 8006502:	d111      	bne.n	8006528 <_svfiprintf_r+0x104>
 8006504:	e017      	b.n	8006536 <_svfiprintf_r+0x112>
 8006506:	3501      	adds	r5, #1
 8006508:	e7b0      	b.n	800646c <_svfiprintf_r+0x48>
 800650a:	4b41      	ldr	r3, [pc, #260]	; (8006610 <_svfiprintf_r+0x1ec>)
 800650c:	6822      	ldr	r2, [r4, #0]
 800650e:	1ac0      	subs	r0, r0, r3
 8006510:	2301      	movs	r3, #1
 8006512:	4083      	lsls	r3, r0
 8006514:	4313      	orrs	r3, r2
 8006516:	002e      	movs	r6, r5
 8006518:	6023      	str	r3, [r4, #0]
 800651a:	e7ce      	b.n	80064ba <_svfiprintf_r+0x96>
 800651c:	9b07      	ldr	r3, [sp, #28]
 800651e:	1d19      	adds	r1, r3, #4
 8006520:	681b      	ldr	r3, [r3, #0]
 8006522:	9107      	str	r1, [sp, #28]
 8006524:	2b00      	cmp	r3, #0
 8006526:	db01      	blt.n	800652c <_svfiprintf_r+0x108>
 8006528:	930b      	str	r3, [sp, #44]	; 0x2c
 800652a:	e004      	b.n	8006536 <_svfiprintf_r+0x112>
 800652c:	425b      	negs	r3, r3
 800652e:	60e3      	str	r3, [r4, #12]
 8006530:	2302      	movs	r3, #2
 8006532:	4313      	orrs	r3, r2
 8006534:	6023      	str	r3, [r4, #0]
 8006536:	782b      	ldrb	r3, [r5, #0]
 8006538:	2b2e      	cmp	r3, #46	; 0x2e
 800653a:	d10a      	bne.n	8006552 <_svfiprintf_r+0x12e>
 800653c:	786b      	ldrb	r3, [r5, #1]
 800653e:	2b2a      	cmp	r3, #42	; 0x2a
 8006540:	d135      	bne.n	80065ae <_svfiprintf_r+0x18a>
 8006542:	9b07      	ldr	r3, [sp, #28]
 8006544:	3502      	adds	r5, #2
 8006546:	1d1a      	adds	r2, r3, #4
 8006548:	681b      	ldr	r3, [r3, #0]
 800654a:	9207      	str	r2, [sp, #28]
 800654c:	2b00      	cmp	r3, #0
 800654e:	db2b      	blt.n	80065a8 <_svfiprintf_r+0x184>
 8006550:	9309      	str	r3, [sp, #36]	; 0x24
 8006552:	4e30      	ldr	r6, [pc, #192]	; (8006614 <_svfiprintf_r+0x1f0>)
 8006554:	2203      	movs	r2, #3
 8006556:	0030      	movs	r0, r6
 8006558:	7829      	ldrb	r1, [r5, #0]
 800655a:	f7ff fa43 	bl	80059e4 <memchr>
 800655e:	2800      	cmp	r0, #0
 8006560:	d006      	beq.n	8006570 <_svfiprintf_r+0x14c>
 8006562:	2340      	movs	r3, #64	; 0x40
 8006564:	1b80      	subs	r0, r0, r6
 8006566:	4083      	lsls	r3, r0
 8006568:	6822      	ldr	r2, [r4, #0]
 800656a:	3501      	adds	r5, #1
 800656c:	4313      	orrs	r3, r2
 800656e:	6023      	str	r3, [r4, #0]
 8006570:	7829      	ldrb	r1, [r5, #0]
 8006572:	2206      	movs	r2, #6
 8006574:	4828      	ldr	r0, [pc, #160]	; (8006618 <_svfiprintf_r+0x1f4>)
 8006576:	1c6e      	adds	r6, r5, #1
 8006578:	7621      	strb	r1, [r4, #24]
 800657a:	f7ff fa33 	bl	80059e4 <memchr>
 800657e:	2800      	cmp	r0, #0
 8006580:	d03c      	beq.n	80065fc <_svfiprintf_r+0x1d8>
 8006582:	4b26      	ldr	r3, [pc, #152]	; (800661c <_svfiprintf_r+0x1f8>)
 8006584:	2b00      	cmp	r3, #0
 8006586:	d125      	bne.n	80065d4 <_svfiprintf_r+0x1b0>
 8006588:	2207      	movs	r2, #7
 800658a:	9b07      	ldr	r3, [sp, #28]
 800658c:	3307      	adds	r3, #7
 800658e:	4393      	bics	r3, r2
 8006590:	3308      	adds	r3, #8
 8006592:	9307      	str	r3, [sp, #28]
 8006594:	6963      	ldr	r3, [r4, #20]
 8006596:	9a04      	ldr	r2, [sp, #16]
 8006598:	189b      	adds	r3, r3, r2
 800659a:	6163      	str	r3, [r4, #20]
 800659c:	e765      	b.n	800646a <_svfiprintf_r+0x46>
 800659e:	4343      	muls	r3, r0
 80065a0:	0035      	movs	r5, r6
 80065a2:	2101      	movs	r1, #1
 80065a4:	189b      	adds	r3, r3, r2
 80065a6:	e7a6      	b.n	80064f6 <_svfiprintf_r+0xd2>
 80065a8:	2301      	movs	r3, #1
 80065aa:	425b      	negs	r3, r3
 80065ac:	e7d0      	b.n	8006550 <_svfiprintf_r+0x12c>
 80065ae:	2300      	movs	r3, #0
 80065b0:	200a      	movs	r0, #10
 80065b2:	001a      	movs	r2, r3
 80065b4:	3501      	adds	r5, #1
 80065b6:	6063      	str	r3, [r4, #4]
 80065b8:	7829      	ldrb	r1, [r5, #0]
 80065ba:	1c6e      	adds	r6, r5, #1
 80065bc:	3930      	subs	r1, #48	; 0x30
 80065be:	2909      	cmp	r1, #9
 80065c0:	d903      	bls.n	80065ca <_svfiprintf_r+0x1a6>
 80065c2:	2b00      	cmp	r3, #0
 80065c4:	d0c5      	beq.n	8006552 <_svfiprintf_r+0x12e>
 80065c6:	9209      	str	r2, [sp, #36]	; 0x24
 80065c8:	e7c3      	b.n	8006552 <_svfiprintf_r+0x12e>
 80065ca:	4342      	muls	r2, r0
 80065cc:	0035      	movs	r5, r6
 80065ce:	2301      	movs	r3, #1
 80065d0:	1852      	adds	r2, r2, r1
 80065d2:	e7f1      	b.n	80065b8 <_svfiprintf_r+0x194>
 80065d4:	ab07      	add	r3, sp, #28
 80065d6:	9300      	str	r3, [sp, #0]
 80065d8:	003a      	movs	r2, r7
 80065da:	0021      	movs	r1, r4
 80065dc:	4b10      	ldr	r3, [pc, #64]	; (8006620 <_svfiprintf_r+0x1fc>)
 80065de:	9803      	ldr	r0, [sp, #12]
 80065e0:	f7fd ff50 	bl	8004484 <_printf_float>
 80065e4:	9004      	str	r0, [sp, #16]
 80065e6:	9b04      	ldr	r3, [sp, #16]
 80065e8:	3301      	adds	r3, #1
 80065ea:	d1d3      	bne.n	8006594 <_svfiprintf_r+0x170>
 80065ec:	89bb      	ldrh	r3, [r7, #12]
 80065ee:	980d      	ldr	r0, [sp, #52]	; 0x34
 80065f0:	065b      	lsls	r3, r3, #25
 80065f2:	d400      	bmi.n	80065f6 <_svfiprintf_r+0x1d2>
 80065f4:	e72d      	b.n	8006452 <_svfiprintf_r+0x2e>
 80065f6:	2001      	movs	r0, #1
 80065f8:	4240      	negs	r0, r0
 80065fa:	e72a      	b.n	8006452 <_svfiprintf_r+0x2e>
 80065fc:	ab07      	add	r3, sp, #28
 80065fe:	9300      	str	r3, [sp, #0]
 8006600:	003a      	movs	r2, r7
 8006602:	0021      	movs	r1, r4
 8006604:	4b06      	ldr	r3, [pc, #24]	; (8006620 <_svfiprintf_r+0x1fc>)
 8006606:	9803      	ldr	r0, [sp, #12]
 8006608:	f7fe f9ee 	bl	80049e8 <_printf_i>
 800660c:	e7ea      	b.n	80065e4 <_svfiprintf_r+0x1c0>
 800660e:	46c0      	nop			; (mov r8, r8)
 8006610:	08007794 	.word	0x08007794
 8006614:	0800779a 	.word	0x0800779a
 8006618:	0800779e 	.word	0x0800779e
 800661c:	08004485 	.word	0x08004485
 8006620:	08006361 	.word	0x08006361

08006624 <_sbrk_r>:
 8006624:	2300      	movs	r3, #0
 8006626:	b570      	push	{r4, r5, r6, lr}
 8006628:	4d06      	ldr	r5, [pc, #24]	; (8006644 <_sbrk_r+0x20>)
 800662a:	0004      	movs	r4, r0
 800662c:	0008      	movs	r0, r1
 800662e:	602b      	str	r3, [r5, #0]
 8006630:	f7fb fe60 	bl	80022f4 <_sbrk>
 8006634:	1c43      	adds	r3, r0, #1
 8006636:	d103      	bne.n	8006640 <_sbrk_r+0x1c>
 8006638:	682b      	ldr	r3, [r5, #0]
 800663a:	2b00      	cmp	r3, #0
 800663c:	d000      	beq.n	8006640 <_sbrk_r+0x1c>
 800663e:	6023      	str	r3, [r4, #0]
 8006640:	bd70      	pop	{r4, r5, r6, pc}
 8006642:	46c0      	nop			; (mov r8, r8)
 8006644:	2000039c 	.word	0x2000039c

08006648 <__assert_func>:
 8006648:	b530      	push	{r4, r5, lr}
 800664a:	0014      	movs	r4, r2
 800664c:	001a      	movs	r2, r3
 800664e:	4b09      	ldr	r3, [pc, #36]	; (8006674 <__assert_func+0x2c>)
 8006650:	0005      	movs	r5, r0
 8006652:	681b      	ldr	r3, [r3, #0]
 8006654:	b085      	sub	sp, #20
 8006656:	68d8      	ldr	r0, [r3, #12]
 8006658:	4b07      	ldr	r3, [pc, #28]	; (8006678 <__assert_func+0x30>)
 800665a:	2c00      	cmp	r4, #0
 800665c:	d101      	bne.n	8006662 <__assert_func+0x1a>
 800665e:	4b07      	ldr	r3, [pc, #28]	; (800667c <__assert_func+0x34>)
 8006660:	001c      	movs	r4, r3
 8006662:	9301      	str	r3, [sp, #4]
 8006664:	9100      	str	r1, [sp, #0]
 8006666:	002b      	movs	r3, r5
 8006668:	4905      	ldr	r1, [pc, #20]	; (8006680 <__assert_func+0x38>)
 800666a:	9402      	str	r4, [sp, #8]
 800666c:	f000 f80a 	bl	8006684 <fiprintf>
 8006670:	f000 faba 	bl	8006be8 <abort>
 8006674:	20000050 	.word	0x20000050
 8006678:	080077a5 	.word	0x080077a5
 800667c:	080077e0 	.word	0x080077e0
 8006680:	080077b2 	.word	0x080077b2

08006684 <fiprintf>:
 8006684:	b40e      	push	{r1, r2, r3}
 8006686:	b503      	push	{r0, r1, lr}
 8006688:	0001      	movs	r1, r0
 800668a:	ab03      	add	r3, sp, #12
 800668c:	4804      	ldr	r0, [pc, #16]	; (80066a0 <fiprintf+0x1c>)
 800668e:	cb04      	ldmia	r3!, {r2}
 8006690:	6800      	ldr	r0, [r0, #0]
 8006692:	9301      	str	r3, [sp, #4]
 8006694:	f000 f892 	bl	80067bc <_vfiprintf_r>
 8006698:	b002      	add	sp, #8
 800669a:	bc08      	pop	{r3}
 800669c:	b003      	add	sp, #12
 800669e:	4718      	bx	r3
 80066a0:	20000050 	.word	0x20000050

080066a4 <__ascii_mbtowc>:
 80066a4:	b082      	sub	sp, #8
 80066a6:	2900      	cmp	r1, #0
 80066a8:	d100      	bne.n	80066ac <__ascii_mbtowc+0x8>
 80066aa:	a901      	add	r1, sp, #4
 80066ac:	1e10      	subs	r0, r2, #0
 80066ae:	d006      	beq.n	80066be <__ascii_mbtowc+0x1a>
 80066b0:	2b00      	cmp	r3, #0
 80066b2:	d006      	beq.n	80066c2 <__ascii_mbtowc+0x1e>
 80066b4:	7813      	ldrb	r3, [r2, #0]
 80066b6:	600b      	str	r3, [r1, #0]
 80066b8:	7810      	ldrb	r0, [r2, #0]
 80066ba:	1e43      	subs	r3, r0, #1
 80066bc:	4198      	sbcs	r0, r3
 80066be:	b002      	add	sp, #8
 80066c0:	4770      	bx	lr
 80066c2:	2002      	movs	r0, #2
 80066c4:	4240      	negs	r0, r0
 80066c6:	e7fa      	b.n	80066be <__ascii_mbtowc+0x1a>

080066c8 <memmove>:
 80066c8:	b510      	push	{r4, lr}
 80066ca:	4288      	cmp	r0, r1
 80066cc:	d902      	bls.n	80066d4 <memmove+0xc>
 80066ce:	188b      	adds	r3, r1, r2
 80066d0:	4298      	cmp	r0, r3
 80066d2:	d303      	bcc.n	80066dc <memmove+0x14>
 80066d4:	2300      	movs	r3, #0
 80066d6:	e007      	b.n	80066e8 <memmove+0x20>
 80066d8:	5c8b      	ldrb	r3, [r1, r2]
 80066da:	5483      	strb	r3, [r0, r2]
 80066dc:	3a01      	subs	r2, #1
 80066de:	d2fb      	bcs.n	80066d8 <memmove+0x10>
 80066e0:	bd10      	pop	{r4, pc}
 80066e2:	5ccc      	ldrb	r4, [r1, r3]
 80066e4:	54c4      	strb	r4, [r0, r3]
 80066e6:	3301      	adds	r3, #1
 80066e8:	429a      	cmp	r2, r3
 80066ea:	d1fa      	bne.n	80066e2 <memmove+0x1a>
 80066ec:	e7f8      	b.n	80066e0 <memmove+0x18>
	...

080066f0 <__malloc_lock>:
 80066f0:	b510      	push	{r4, lr}
 80066f2:	4802      	ldr	r0, [pc, #8]	; (80066fc <__malloc_lock+0xc>)
 80066f4:	f000 fc4f 	bl	8006f96 <__retarget_lock_acquire_recursive>
 80066f8:	bd10      	pop	{r4, pc}
 80066fa:	46c0      	nop			; (mov r8, r8)
 80066fc:	200003a0 	.word	0x200003a0

08006700 <__malloc_unlock>:
 8006700:	b510      	push	{r4, lr}
 8006702:	4802      	ldr	r0, [pc, #8]	; (800670c <__malloc_unlock+0xc>)
 8006704:	f000 fc48 	bl	8006f98 <__retarget_lock_release_recursive>
 8006708:	bd10      	pop	{r4, pc}
 800670a:	46c0      	nop			; (mov r8, r8)
 800670c:	200003a0 	.word	0x200003a0

08006710 <_realloc_r>:
 8006710:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006712:	0007      	movs	r7, r0
 8006714:	000e      	movs	r6, r1
 8006716:	0014      	movs	r4, r2
 8006718:	2900      	cmp	r1, #0
 800671a:	d105      	bne.n	8006728 <_realloc_r+0x18>
 800671c:	0011      	movs	r1, r2
 800671e:	f7ff fda9 	bl	8006274 <_malloc_r>
 8006722:	0005      	movs	r5, r0
 8006724:	0028      	movs	r0, r5
 8006726:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006728:	2a00      	cmp	r2, #0
 800672a:	d103      	bne.n	8006734 <_realloc_r+0x24>
 800672c:	f7ff fd36 	bl	800619c <_free_r>
 8006730:	0025      	movs	r5, r4
 8006732:	e7f7      	b.n	8006724 <_realloc_r+0x14>
 8006734:	f000 fc9e 	bl	8007074 <_malloc_usable_size_r>
 8006738:	9001      	str	r0, [sp, #4]
 800673a:	4284      	cmp	r4, r0
 800673c:	d803      	bhi.n	8006746 <_realloc_r+0x36>
 800673e:	0035      	movs	r5, r6
 8006740:	0843      	lsrs	r3, r0, #1
 8006742:	42a3      	cmp	r3, r4
 8006744:	d3ee      	bcc.n	8006724 <_realloc_r+0x14>
 8006746:	0021      	movs	r1, r4
 8006748:	0038      	movs	r0, r7
 800674a:	f7ff fd93 	bl	8006274 <_malloc_r>
 800674e:	1e05      	subs	r5, r0, #0
 8006750:	d0e8      	beq.n	8006724 <_realloc_r+0x14>
 8006752:	9b01      	ldr	r3, [sp, #4]
 8006754:	0022      	movs	r2, r4
 8006756:	429c      	cmp	r4, r3
 8006758:	d900      	bls.n	800675c <_realloc_r+0x4c>
 800675a:	001a      	movs	r2, r3
 800675c:	0031      	movs	r1, r6
 800675e:	0028      	movs	r0, r5
 8006760:	f7ff f94b 	bl	80059fa <memcpy>
 8006764:	0031      	movs	r1, r6
 8006766:	0038      	movs	r0, r7
 8006768:	f7ff fd18 	bl	800619c <_free_r>
 800676c:	e7da      	b.n	8006724 <_realloc_r+0x14>

0800676e <__sfputc_r>:
 800676e:	6893      	ldr	r3, [r2, #8]
 8006770:	b510      	push	{r4, lr}
 8006772:	3b01      	subs	r3, #1
 8006774:	6093      	str	r3, [r2, #8]
 8006776:	2b00      	cmp	r3, #0
 8006778:	da04      	bge.n	8006784 <__sfputc_r+0x16>
 800677a:	6994      	ldr	r4, [r2, #24]
 800677c:	42a3      	cmp	r3, r4
 800677e:	db07      	blt.n	8006790 <__sfputc_r+0x22>
 8006780:	290a      	cmp	r1, #10
 8006782:	d005      	beq.n	8006790 <__sfputc_r+0x22>
 8006784:	6813      	ldr	r3, [r2, #0]
 8006786:	1c58      	adds	r0, r3, #1
 8006788:	6010      	str	r0, [r2, #0]
 800678a:	7019      	strb	r1, [r3, #0]
 800678c:	0008      	movs	r0, r1
 800678e:	bd10      	pop	{r4, pc}
 8006790:	f000 f94e 	bl	8006a30 <__swbuf_r>
 8006794:	0001      	movs	r1, r0
 8006796:	e7f9      	b.n	800678c <__sfputc_r+0x1e>

08006798 <__sfputs_r>:
 8006798:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800679a:	0006      	movs	r6, r0
 800679c:	000f      	movs	r7, r1
 800679e:	0014      	movs	r4, r2
 80067a0:	18d5      	adds	r5, r2, r3
 80067a2:	42ac      	cmp	r4, r5
 80067a4:	d101      	bne.n	80067aa <__sfputs_r+0x12>
 80067a6:	2000      	movs	r0, #0
 80067a8:	e007      	b.n	80067ba <__sfputs_r+0x22>
 80067aa:	7821      	ldrb	r1, [r4, #0]
 80067ac:	003a      	movs	r2, r7
 80067ae:	0030      	movs	r0, r6
 80067b0:	f7ff ffdd 	bl	800676e <__sfputc_r>
 80067b4:	3401      	adds	r4, #1
 80067b6:	1c43      	adds	r3, r0, #1
 80067b8:	d1f3      	bne.n	80067a2 <__sfputs_r+0xa>
 80067ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080067bc <_vfiprintf_r>:
 80067bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80067be:	b0a1      	sub	sp, #132	; 0x84
 80067c0:	0006      	movs	r6, r0
 80067c2:	000c      	movs	r4, r1
 80067c4:	001f      	movs	r7, r3
 80067c6:	9203      	str	r2, [sp, #12]
 80067c8:	2800      	cmp	r0, #0
 80067ca:	d004      	beq.n	80067d6 <_vfiprintf_r+0x1a>
 80067cc:	6983      	ldr	r3, [r0, #24]
 80067ce:	2b00      	cmp	r3, #0
 80067d0:	d101      	bne.n	80067d6 <_vfiprintf_r+0x1a>
 80067d2:	f000 fb3f 	bl	8006e54 <__sinit>
 80067d6:	4b8e      	ldr	r3, [pc, #568]	; (8006a10 <_vfiprintf_r+0x254>)
 80067d8:	429c      	cmp	r4, r3
 80067da:	d11c      	bne.n	8006816 <_vfiprintf_r+0x5a>
 80067dc:	6874      	ldr	r4, [r6, #4]
 80067de:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80067e0:	07db      	lsls	r3, r3, #31
 80067e2:	d405      	bmi.n	80067f0 <_vfiprintf_r+0x34>
 80067e4:	89a3      	ldrh	r3, [r4, #12]
 80067e6:	059b      	lsls	r3, r3, #22
 80067e8:	d402      	bmi.n	80067f0 <_vfiprintf_r+0x34>
 80067ea:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80067ec:	f000 fbd3 	bl	8006f96 <__retarget_lock_acquire_recursive>
 80067f0:	89a3      	ldrh	r3, [r4, #12]
 80067f2:	071b      	lsls	r3, r3, #28
 80067f4:	d502      	bpl.n	80067fc <_vfiprintf_r+0x40>
 80067f6:	6923      	ldr	r3, [r4, #16]
 80067f8:	2b00      	cmp	r3, #0
 80067fa:	d11d      	bne.n	8006838 <_vfiprintf_r+0x7c>
 80067fc:	0021      	movs	r1, r4
 80067fe:	0030      	movs	r0, r6
 8006800:	f000 f97a 	bl	8006af8 <__swsetup_r>
 8006804:	2800      	cmp	r0, #0
 8006806:	d017      	beq.n	8006838 <_vfiprintf_r+0x7c>
 8006808:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800680a:	07db      	lsls	r3, r3, #31
 800680c:	d50d      	bpl.n	800682a <_vfiprintf_r+0x6e>
 800680e:	2001      	movs	r0, #1
 8006810:	4240      	negs	r0, r0
 8006812:	b021      	add	sp, #132	; 0x84
 8006814:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006816:	4b7f      	ldr	r3, [pc, #508]	; (8006a14 <_vfiprintf_r+0x258>)
 8006818:	429c      	cmp	r4, r3
 800681a:	d101      	bne.n	8006820 <_vfiprintf_r+0x64>
 800681c:	68b4      	ldr	r4, [r6, #8]
 800681e:	e7de      	b.n	80067de <_vfiprintf_r+0x22>
 8006820:	4b7d      	ldr	r3, [pc, #500]	; (8006a18 <_vfiprintf_r+0x25c>)
 8006822:	429c      	cmp	r4, r3
 8006824:	d1db      	bne.n	80067de <_vfiprintf_r+0x22>
 8006826:	68f4      	ldr	r4, [r6, #12]
 8006828:	e7d9      	b.n	80067de <_vfiprintf_r+0x22>
 800682a:	89a3      	ldrh	r3, [r4, #12]
 800682c:	059b      	lsls	r3, r3, #22
 800682e:	d4ee      	bmi.n	800680e <_vfiprintf_r+0x52>
 8006830:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006832:	f000 fbb1 	bl	8006f98 <__retarget_lock_release_recursive>
 8006836:	e7ea      	b.n	800680e <_vfiprintf_r+0x52>
 8006838:	2300      	movs	r3, #0
 800683a:	ad08      	add	r5, sp, #32
 800683c:	616b      	str	r3, [r5, #20]
 800683e:	3320      	adds	r3, #32
 8006840:	766b      	strb	r3, [r5, #25]
 8006842:	3310      	adds	r3, #16
 8006844:	76ab      	strb	r3, [r5, #26]
 8006846:	9707      	str	r7, [sp, #28]
 8006848:	9f03      	ldr	r7, [sp, #12]
 800684a:	783b      	ldrb	r3, [r7, #0]
 800684c:	2b00      	cmp	r3, #0
 800684e:	d001      	beq.n	8006854 <_vfiprintf_r+0x98>
 8006850:	2b25      	cmp	r3, #37	; 0x25
 8006852:	d14e      	bne.n	80068f2 <_vfiprintf_r+0x136>
 8006854:	9b03      	ldr	r3, [sp, #12]
 8006856:	1afb      	subs	r3, r7, r3
 8006858:	9305      	str	r3, [sp, #20]
 800685a:	9b03      	ldr	r3, [sp, #12]
 800685c:	429f      	cmp	r7, r3
 800685e:	d00d      	beq.n	800687c <_vfiprintf_r+0xc0>
 8006860:	9b05      	ldr	r3, [sp, #20]
 8006862:	0021      	movs	r1, r4
 8006864:	0030      	movs	r0, r6
 8006866:	9a03      	ldr	r2, [sp, #12]
 8006868:	f7ff ff96 	bl	8006798 <__sfputs_r>
 800686c:	1c43      	adds	r3, r0, #1
 800686e:	d100      	bne.n	8006872 <_vfiprintf_r+0xb6>
 8006870:	e0b5      	b.n	80069de <_vfiprintf_r+0x222>
 8006872:	696a      	ldr	r2, [r5, #20]
 8006874:	9b05      	ldr	r3, [sp, #20]
 8006876:	4694      	mov	ip, r2
 8006878:	4463      	add	r3, ip
 800687a:	616b      	str	r3, [r5, #20]
 800687c:	783b      	ldrb	r3, [r7, #0]
 800687e:	2b00      	cmp	r3, #0
 8006880:	d100      	bne.n	8006884 <_vfiprintf_r+0xc8>
 8006882:	e0ac      	b.n	80069de <_vfiprintf_r+0x222>
 8006884:	2201      	movs	r2, #1
 8006886:	1c7b      	adds	r3, r7, #1
 8006888:	9303      	str	r3, [sp, #12]
 800688a:	2300      	movs	r3, #0
 800688c:	4252      	negs	r2, r2
 800688e:	606a      	str	r2, [r5, #4]
 8006890:	a904      	add	r1, sp, #16
 8006892:	3254      	adds	r2, #84	; 0x54
 8006894:	1852      	adds	r2, r2, r1
 8006896:	602b      	str	r3, [r5, #0]
 8006898:	60eb      	str	r3, [r5, #12]
 800689a:	60ab      	str	r3, [r5, #8]
 800689c:	7013      	strb	r3, [r2, #0]
 800689e:	65ab      	str	r3, [r5, #88]	; 0x58
 80068a0:	9b03      	ldr	r3, [sp, #12]
 80068a2:	2205      	movs	r2, #5
 80068a4:	7819      	ldrb	r1, [r3, #0]
 80068a6:	485d      	ldr	r0, [pc, #372]	; (8006a1c <_vfiprintf_r+0x260>)
 80068a8:	f7ff f89c 	bl	80059e4 <memchr>
 80068ac:	9b03      	ldr	r3, [sp, #12]
 80068ae:	1c5f      	adds	r7, r3, #1
 80068b0:	2800      	cmp	r0, #0
 80068b2:	d120      	bne.n	80068f6 <_vfiprintf_r+0x13a>
 80068b4:	682a      	ldr	r2, [r5, #0]
 80068b6:	06d3      	lsls	r3, r2, #27
 80068b8:	d504      	bpl.n	80068c4 <_vfiprintf_r+0x108>
 80068ba:	2353      	movs	r3, #83	; 0x53
 80068bc:	a904      	add	r1, sp, #16
 80068be:	185b      	adds	r3, r3, r1
 80068c0:	2120      	movs	r1, #32
 80068c2:	7019      	strb	r1, [r3, #0]
 80068c4:	0713      	lsls	r3, r2, #28
 80068c6:	d504      	bpl.n	80068d2 <_vfiprintf_r+0x116>
 80068c8:	2353      	movs	r3, #83	; 0x53
 80068ca:	a904      	add	r1, sp, #16
 80068cc:	185b      	adds	r3, r3, r1
 80068ce:	212b      	movs	r1, #43	; 0x2b
 80068d0:	7019      	strb	r1, [r3, #0]
 80068d2:	9b03      	ldr	r3, [sp, #12]
 80068d4:	781b      	ldrb	r3, [r3, #0]
 80068d6:	2b2a      	cmp	r3, #42	; 0x2a
 80068d8:	d016      	beq.n	8006908 <_vfiprintf_r+0x14c>
 80068da:	2100      	movs	r1, #0
 80068dc:	68eb      	ldr	r3, [r5, #12]
 80068de:	9f03      	ldr	r7, [sp, #12]
 80068e0:	783a      	ldrb	r2, [r7, #0]
 80068e2:	1c78      	adds	r0, r7, #1
 80068e4:	3a30      	subs	r2, #48	; 0x30
 80068e6:	4684      	mov	ip, r0
 80068e8:	2a09      	cmp	r2, #9
 80068ea:	d94f      	bls.n	800698c <_vfiprintf_r+0x1d0>
 80068ec:	2900      	cmp	r1, #0
 80068ee:	d111      	bne.n	8006914 <_vfiprintf_r+0x158>
 80068f0:	e017      	b.n	8006922 <_vfiprintf_r+0x166>
 80068f2:	3701      	adds	r7, #1
 80068f4:	e7a9      	b.n	800684a <_vfiprintf_r+0x8e>
 80068f6:	4b49      	ldr	r3, [pc, #292]	; (8006a1c <_vfiprintf_r+0x260>)
 80068f8:	682a      	ldr	r2, [r5, #0]
 80068fa:	1ac0      	subs	r0, r0, r3
 80068fc:	2301      	movs	r3, #1
 80068fe:	4083      	lsls	r3, r0
 8006900:	4313      	orrs	r3, r2
 8006902:	602b      	str	r3, [r5, #0]
 8006904:	9703      	str	r7, [sp, #12]
 8006906:	e7cb      	b.n	80068a0 <_vfiprintf_r+0xe4>
 8006908:	9b07      	ldr	r3, [sp, #28]
 800690a:	1d19      	adds	r1, r3, #4
 800690c:	681b      	ldr	r3, [r3, #0]
 800690e:	9107      	str	r1, [sp, #28]
 8006910:	2b00      	cmp	r3, #0
 8006912:	db01      	blt.n	8006918 <_vfiprintf_r+0x15c>
 8006914:	930b      	str	r3, [sp, #44]	; 0x2c
 8006916:	e004      	b.n	8006922 <_vfiprintf_r+0x166>
 8006918:	425b      	negs	r3, r3
 800691a:	60eb      	str	r3, [r5, #12]
 800691c:	2302      	movs	r3, #2
 800691e:	4313      	orrs	r3, r2
 8006920:	602b      	str	r3, [r5, #0]
 8006922:	783b      	ldrb	r3, [r7, #0]
 8006924:	2b2e      	cmp	r3, #46	; 0x2e
 8006926:	d10a      	bne.n	800693e <_vfiprintf_r+0x182>
 8006928:	787b      	ldrb	r3, [r7, #1]
 800692a:	2b2a      	cmp	r3, #42	; 0x2a
 800692c:	d137      	bne.n	800699e <_vfiprintf_r+0x1e2>
 800692e:	9b07      	ldr	r3, [sp, #28]
 8006930:	3702      	adds	r7, #2
 8006932:	1d1a      	adds	r2, r3, #4
 8006934:	681b      	ldr	r3, [r3, #0]
 8006936:	9207      	str	r2, [sp, #28]
 8006938:	2b00      	cmp	r3, #0
 800693a:	db2d      	blt.n	8006998 <_vfiprintf_r+0x1dc>
 800693c:	9309      	str	r3, [sp, #36]	; 0x24
 800693e:	2203      	movs	r2, #3
 8006940:	7839      	ldrb	r1, [r7, #0]
 8006942:	4837      	ldr	r0, [pc, #220]	; (8006a20 <_vfiprintf_r+0x264>)
 8006944:	f7ff f84e 	bl	80059e4 <memchr>
 8006948:	2800      	cmp	r0, #0
 800694a:	d007      	beq.n	800695c <_vfiprintf_r+0x1a0>
 800694c:	4b34      	ldr	r3, [pc, #208]	; (8006a20 <_vfiprintf_r+0x264>)
 800694e:	682a      	ldr	r2, [r5, #0]
 8006950:	1ac0      	subs	r0, r0, r3
 8006952:	2340      	movs	r3, #64	; 0x40
 8006954:	4083      	lsls	r3, r0
 8006956:	4313      	orrs	r3, r2
 8006958:	3701      	adds	r7, #1
 800695a:	602b      	str	r3, [r5, #0]
 800695c:	7839      	ldrb	r1, [r7, #0]
 800695e:	1c7b      	adds	r3, r7, #1
 8006960:	2206      	movs	r2, #6
 8006962:	4830      	ldr	r0, [pc, #192]	; (8006a24 <_vfiprintf_r+0x268>)
 8006964:	9303      	str	r3, [sp, #12]
 8006966:	7629      	strb	r1, [r5, #24]
 8006968:	f7ff f83c 	bl	80059e4 <memchr>
 800696c:	2800      	cmp	r0, #0
 800696e:	d045      	beq.n	80069fc <_vfiprintf_r+0x240>
 8006970:	4b2d      	ldr	r3, [pc, #180]	; (8006a28 <_vfiprintf_r+0x26c>)
 8006972:	2b00      	cmp	r3, #0
 8006974:	d127      	bne.n	80069c6 <_vfiprintf_r+0x20a>
 8006976:	2207      	movs	r2, #7
 8006978:	9b07      	ldr	r3, [sp, #28]
 800697a:	3307      	adds	r3, #7
 800697c:	4393      	bics	r3, r2
 800697e:	3308      	adds	r3, #8
 8006980:	9307      	str	r3, [sp, #28]
 8006982:	696b      	ldr	r3, [r5, #20]
 8006984:	9a04      	ldr	r2, [sp, #16]
 8006986:	189b      	adds	r3, r3, r2
 8006988:	616b      	str	r3, [r5, #20]
 800698a:	e75d      	b.n	8006848 <_vfiprintf_r+0x8c>
 800698c:	210a      	movs	r1, #10
 800698e:	434b      	muls	r3, r1
 8006990:	4667      	mov	r7, ip
 8006992:	189b      	adds	r3, r3, r2
 8006994:	3909      	subs	r1, #9
 8006996:	e7a3      	b.n	80068e0 <_vfiprintf_r+0x124>
 8006998:	2301      	movs	r3, #1
 800699a:	425b      	negs	r3, r3
 800699c:	e7ce      	b.n	800693c <_vfiprintf_r+0x180>
 800699e:	2300      	movs	r3, #0
 80069a0:	001a      	movs	r2, r3
 80069a2:	3701      	adds	r7, #1
 80069a4:	606b      	str	r3, [r5, #4]
 80069a6:	7839      	ldrb	r1, [r7, #0]
 80069a8:	1c78      	adds	r0, r7, #1
 80069aa:	3930      	subs	r1, #48	; 0x30
 80069ac:	4684      	mov	ip, r0
 80069ae:	2909      	cmp	r1, #9
 80069b0:	d903      	bls.n	80069ba <_vfiprintf_r+0x1fe>
 80069b2:	2b00      	cmp	r3, #0
 80069b4:	d0c3      	beq.n	800693e <_vfiprintf_r+0x182>
 80069b6:	9209      	str	r2, [sp, #36]	; 0x24
 80069b8:	e7c1      	b.n	800693e <_vfiprintf_r+0x182>
 80069ba:	230a      	movs	r3, #10
 80069bc:	435a      	muls	r2, r3
 80069be:	4667      	mov	r7, ip
 80069c0:	1852      	adds	r2, r2, r1
 80069c2:	3b09      	subs	r3, #9
 80069c4:	e7ef      	b.n	80069a6 <_vfiprintf_r+0x1ea>
 80069c6:	ab07      	add	r3, sp, #28
 80069c8:	9300      	str	r3, [sp, #0]
 80069ca:	0022      	movs	r2, r4
 80069cc:	0029      	movs	r1, r5
 80069ce:	0030      	movs	r0, r6
 80069d0:	4b16      	ldr	r3, [pc, #88]	; (8006a2c <_vfiprintf_r+0x270>)
 80069d2:	f7fd fd57 	bl	8004484 <_printf_float>
 80069d6:	9004      	str	r0, [sp, #16]
 80069d8:	9b04      	ldr	r3, [sp, #16]
 80069da:	3301      	adds	r3, #1
 80069dc:	d1d1      	bne.n	8006982 <_vfiprintf_r+0x1c6>
 80069de:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80069e0:	07db      	lsls	r3, r3, #31
 80069e2:	d405      	bmi.n	80069f0 <_vfiprintf_r+0x234>
 80069e4:	89a3      	ldrh	r3, [r4, #12]
 80069e6:	059b      	lsls	r3, r3, #22
 80069e8:	d402      	bmi.n	80069f0 <_vfiprintf_r+0x234>
 80069ea:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80069ec:	f000 fad4 	bl	8006f98 <__retarget_lock_release_recursive>
 80069f0:	89a3      	ldrh	r3, [r4, #12]
 80069f2:	065b      	lsls	r3, r3, #25
 80069f4:	d500      	bpl.n	80069f8 <_vfiprintf_r+0x23c>
 80069f6:	e70a      	b.n	800680e <_vfiprintf_r+0x52>
 80069f8:	980d      	ldr	r0, [sp, #52]	; 0x34
 80069fa:	e70a      	b.n	8006812 <_vfiprintf_r+0x56>
 80069fc:	ab07      	add	r3, sp, #28
 80069fe:	9300      	str	r3, [sp, #0]
 8006a00:	0022      	movs	r2, r4
 8006a02:	0029      	movs	r1, r5
 8006a04:	0030      	movs	r0, r6
 8006a06:	4b09      	ldr	r3, [pc, #36]	; (8006a2c <_vfiprintf_r+0x270>)
 8006a08:	f7fd ffee 	bl	80049e8 <_printf_i>
 8006a0c:	e7e3      	b.n	80069d6 <_vfiprintf_r+0x21a>
 8006a0e:	46c0      	nop			; (mov r8, r8)
 8006a10:	0800790c 	.word	0x0800790c
 8006a14:	0800792c 	.word	0x0800792c
 8006a18:	080078ec 	.word	0x080078ec
 8006a1c:	08007794 	.word	0x08007794
 8006a20:	0800779a 	.word	0x0800779a
 8006a24:	0800779e 	.word	0x0800779e
 8006a28:	08004485 	.word	0x08004485
 8006a2c:	08006799 	.word	0x08006799

08006a30 <__swbuf_r>:
 8006a30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006a32:	0005      	movs	r5, r0
 8006a34:	000e      	movs	r6, r1
 8006a36:	0014      	movs	r4, r2
 8006a38:	2800      	cmp	r0, #0
 8006a3a:	d004      	beq.n	8006a46 <__swbuf_r+0x16>
 8006a3c:	6983      	ldr	r3, [r0, #24]
 8006a3e:	2b00      	cmp	r3, #0
 8006a40:	d101      	bne.n	8006a46 <__swbuf_r+0x16>
 8006a42:	f000 fa07 	bl	8006e54 <__sinit>
 8006a46:	4b22      	ldr	r3, [pc, #136]	; (8006ad0 <__swbuf_r+0xa0>)
 8006a48:	429c      	cmp	r4, r3
 8006a4a:	d12e      	bne.n	8006aaa <__swbuf_r+0x7a>
 8006a4c:	686c      	ldr	r4, [r5, #4]
 8006a4e:	69a3      	ldr	r3, [r4, #24]
 8006a50:	60a3      	str	r3, [r4, #8]
 8006a52:	89a3      	ldrh	r3, [r4, #12]
 8006a54:	071b      	lsls	r3, r3, #28
 8006a56:	d532      	bpl.n	8006abe <__swbuf_r+0x8e>
 8006a58:	6923      	ldr	r3, [r4, #16]
 8006a5a:	2b00      	cmp	r3, #0
 8006a5c:	d02f      	beq.n	8006abe <__swbuf_r+0x8e>
 8006a5e:	6823      	ldr	r3, [r4, #0]
 8006a60:	6922      	ldr	r2, [r4, #16]
 8006a62:	b2f7      	uxtb	r7, r6
 8006a64:	1a98      	subs	r0, r3, r2
 8006a66:	6963      	ldr	r3, [r4, #20]
 8006a68:	b2f6      	uxtb	r6, r6
 8006a6a:	4283      	cmp	r3, r0
 8006a6c:	dc05      	bgt.n	8006a7a <__swbuf_r+0x4a>
 8006a6e:	0021      	movs	r1, r4
 8006a70:	0028      	movs	r0, r5
 8006a72:	f000 f94d 	bl	8006d10 <_fflush_r>
 8006a76:	2800      	cmp	r0, #0
 8006a78:	d127      	bne.n	8006aca <__swbuf_r+0x9a>
 8006a7a:	68a3      	ldr	r3, [r4, #8]
 8006a7c:	3001      	adds	r0, #1
 8006a7e:	3b01      	subs	r3, #1
 8006a80:	60a3      	str	r3, [r4, #8]
 8006a82:	6823      	ldr	r3, [r4, #0]
 8006a84:	1c5a      	adds	r2, r3, #1
 8006a86:	6022      	str	r2, [r4, #0]
 8006a88:	701f      	strb	r7, [r3, #0]
 8006a8a:	6963      	ldr	r3, [r4, #20]
 8006a8c:	4283      	cmp	r3, r0
 8006a8e:	d004      	beq.n	8006a9a <__swbuf_r+0x6a>
 8006a90:	89a3      	ldrh	r3, [r4, #12]
 8006a92:	07db      	lsls	r3, r3, #31
 8006a94:	d507      	bpl.n	8006aa6 <__swbuf_r+0x76>
 8006a96:	2e0a      	cmp	r6, #10
 8006a98:	d105      	bne.n	8006aa6 <__swbuf_r+0x76>
 8006a9a:	0021      	movs	r1, r4
 8006a9c:	0028      	movs	r0, r5
 8006a9e:	f000 f937 	bl	8006d10 <_fflush_r>
 8006aa2:	2800      	cmp	r0, #0
 8006aa4:	d111      	bne.n	8006aca <__swbuf_r+0x9a>
 8006aa6:	0030      	movs	r0, r6
 8006aa8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006aaa:	4b0a      	ldr	r3, [pc, #40]	; (8006ad4 <__swbuf_r+0xa4>)
 8006aac:	429c      	cmp	r4, r3
 8006aae:	d101      	bne.n	8006ab4 <__swbuf_r+0x84>
 8006ab0:	68ac      	ldr	r4, [r5, #8]
 8006ab2:	e7cc      	b.n	8006a4e <__swbuf_r+0x1e>
 8006ab4:	4b08      	ldr	r3, [pc, #32]	; (8006ad8 <__swbuf_r+0xa8>)
 8006ab6:	429c      	cmp	r4, r3
 8006ab8:	d1c9      	bne.n	8006a4e <__swbuf_r+0x1e>
 8006aba:	68ec      	ldr	r4, [r5, #12]
 8006abc:	e7c7      	b.n	8006a4e <__swbuf_r+0x1e>
 8006abe:	0021      	movs	r1, r4
 8006ac0:	0028      	movs	r0, r5
 8006ac2:	f000 f819 	bl	8006af8 <__swsetup_r>
 8006ac6:	2800      	cmp	r0, #0
 8006ac8:	d0c9      	beq.n	8006a5e <__swbuf_r+0x2e>
 8006aca:	2601      	movs	r6, #1
 8006acc:	4276      	negs	r6, r6
 8006ace:	e7ea      	b.n	8006aa6 <__swbuf_r+0x76>
 8006ad0:	0800790c 	.word	0x0800790c
 8006ad4:	0800792c 	.word	0x0800792c
 8006ad8:	080078ec 	.word	0x080078ec

08006adc <__ascii_wctomb>:
 8006adc:	0003      	movs	r3, r0
 8006ade:	1e08      	subs	r0, r1, #0
 8006ae0:	d005      	beq.n	8006aee <__ascii_wctomb+0x12>
 8006ae2:	2aff      	cmp	r2, #255	; 0xff
 8006ae4:	d904      	bls.n	8006af0 <__ascii_wctomb+0x14>
 8006ae6:	228a      	movs	r2, #138	; 0x8a
 8006ae8:	2001      	movs	r0, #1
 8006aea:	601a      	str	r2, [r3, #0]
 8006aec:	4240      	negs	r0, r0
 8006aee:	4770      	bx	lr
 8006af0:	2001      	movs	r0, #1
 8006af2:	700a      	strb	r2, [r1, #0]
 8006af4:	e7fb      	b.n	8006aee <__ascii_wctomb+0x12>
	...

08006af8 <__swsetup_r>:
 8006af8:	4b37      	ldr	r3, [pc, #220]	; (8006bd8 <__swsetup_r+0xe0>)
 8006afa:	b570      	push	{r4, r5, r6, lr}
 8006afc:	681d      	ldr	r5, [r3, #0]
 8006afe:	0006      	movs	r6, r0
 8006b00:	000c      	movs	r4, r1
 8006b02:	2d00      	cmp	r5, #0
 8006b04:	d005      	beq.n	8006b12 <__swsetup_r+0x1a>
 8006b06:	69ab      	ldr	r3, [r5, #24]
 8006b08:	2b00      	cmp	r3, #0
 8006b0a:	d102      	bne.n	8006b12 <__swsetup_r+0x1a>
 8006b0c:	0028      	movs	r0, r5
 8006b0e:	f000 f9a1 	bl	8006e54 <__sinit>
 8006b12:	4b32      	ldr	r3, [pc, #200]	; (8006bdc <__swsetup_r+0xe4>)
 8006b14:	429c      	cmp	r4, r3
 8006b16:	d10f      	bne.n	8006b38 <__swsetup_r+0x40>
 8006b18:	686c      	ldr	r4, [r5, #4]
 8006b1a:	230c      	movs	r3, #12
 8006b1c:	5ee2      	ldrsh	r2, [r4, r3]
 8006b1e:	b293      	uxth	r3, r2
 8006b20:	0711      	lsls	r1, r2, #28
 8006b22:	d42d      	bmi.n	8006b80 <__swsetup_r+0x88>
 8006b24:	06d9      	lsls	r1, r3, #27
 8006b26:	d411      	bmi.n	8006b4c <__swsetup_r+0x54>
 8006b28:	2309      	movs	r3, #9
 8006b2a:	2001      	movs	r0, #1
 8006b2c:	6033      	str	r3, [r6, #0]
 8006b2e:	3337      	adds	r3, #55	; 0x37
 8006b30:	4313      	orrs	r3, r2
 8006b32:	81a3      	strh	r3, [r4, #12]
 8006b34:	4240      	negs	r0, r0
 8006b36:	bd70      	pop	{r4, r5, r6, pc}
 8006b38:	4b29      	ldr	r3, [pc, #164]	; (8006be0 <__swsetup_r+0xe8>)
 8006b3a:	429c      	cmp	r4, r3
 8006b3c:	d101      	bne.n	8006b42 <__swsetup_r+0x4a>
 8006b3e:	68ac      	ldr	r4, [r5, #8]
 8006b40:	e7eb      	b.n	8006b1a <__swsetup_r+0x22>
 8006b42:	4b28      	ldr	r3, [pc, #160]	; (8006be4 <__swsetup_r+0xec>)
 8006b44:	429c      	cmp	r4, r3
 8006b46:	d1e8      	bne.n	8006b1a <__swsetup_r+0x22>
 8006b48:	68ec      	ldr	r4, [r5, #12]
 8006b4a:	e7e6      	b.n	8006b1a <__swsetup_r+0x22>
 8006b4c:	075b      	lsls	r3, r3, #29
 8006b4e:	d513      	bpl.n	8006b78 <__swsetup_r+0x80>
 8006b50:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006b52:	2900      	cmp	r1, #0
 8006b54:	d008      	beq.n	8006b68 <__swsetup_r+0x70>
 8006b56:	0023      	movs	r3, r4
 8006b58:	3344      	adds	r3, #68	; 0x44
 8006b5a:	4299      	cmp	r1, r3
 8006b5c:	d002      	beq.n	8006b64 <__swsetup_r+0x6c>
 8006b5e:	0030      	movs	r0, r6
 8006b60:	f7ff fb1c 	bl	800619c <_free_r>
 8006b64:	2300      	movs	r3, #0
 8006b66:	6363      	str	r3, [r4, #52]	; 0x34
 8006b68:	2224      	movs	r2, #36	; 0x24
 8006b6a:	89a3      	ldrh	r3, [r4, #12]
 8006b6c:	4393      	bics	r3, r2
 8006b6e:	81a3      	strh	r3, [r4, #12]
 8006b70:	2300      	movs	r3, #0
 8006b72:	6063      	str	r3, [r4, #4]
 8006b74:	6923      	ldr	r3, [r4, #16]
 8006b76:	6023      	str	r3, [r4, #0]
 8006b78:	2308      	movs	r3, #8
 8006b7a:	89a2      	ldrh	r2, [r4, #12]
 8006b7c:	4313      	orrs	r3, r2
 8006b7e:	81a3      	strh	r3, [r4, #12]
 8006b80:	6923      	ldr	r3, [r4, #16]
 8006b82:	2b00      	cmp	r3, #0
 8006b84:	d10b      	bne.n	8006b9e <__swsetup_r+0xa6>
 8006b86:	21a0      	movs	r1, #160	; 0xa0
 8006b88:	2280      	movs	r2, #128	; 0x80
 8006b8a:	89a3      	ldrh	r3, [r4, #12]
 8006b8c:	0089      	lsls	r1, r1, #2
 8006b8e:	0092      	lsls	r2, r2, #2
 8006b90:	400b      	ands	r3, r1
 8006b92:	4293      	cmp	r3, r2
 8006b94:	d003      	beq.n	8006b9e <__swsetup_r+0xa6>
 8006b96:	0021      	movs	r1, r4
 8006b98:	0030      	movs	r0, r6
 8006b9a:	f000 fa27 	bl	8006fec <__smakebuf_r>
 8006b9e:	220c      	movs	r2, #12
 8006ba0:	5ea3      	ldrsh	r3, [r4, r2]
 8006ba2:	2001      	movs	r0, #1
 8006ba4:	001a      	movs	r2, r3
 8006ba6:	b299      	uxth	r1, r3
 8006ba8:	4002      	ands	r2, r0
 8006baa:	4203      	tst	r3, r0
 8006bac:	d00f      	beq.n	8006bce <__swsetup_r+0xd6>
 8006bae:	2200      	movs	r2, #0
 8006bb0:	60a2      	str	r2, [r4, #8]
 8006bb2:	6962      	ldr	r2, [r4, #20]
 8006bb4:	4252      	negs	r2, r2
 8006bb6:	61a2      	str	r2, [r4, #24]
 8006bb8:	2000      	movs	r0, #0
 8006bba:	6922      	ldr	r2, [r4, #16]
 8006bbc:	4282      	cmp	r2, r0
 8006bbe:	d1ba      	bne.n	8006b36 <__swsetup_r+0x3e>
 8006bc0:	060a      	lsls	r2, r1, #24
 8006bc2:	d5b8      	bpl.n	8006b36 <__swsetup_r+0x3e>
 8006bc4:	2240      	movs	r2, #64	; 0x40
 8006bc6:	4313      	orrs	r3, r2
 8006bc8:	81a3      	strh	r3, [r4, #12]
 8006bca:	3801      	subs	r0, #1
 8006bcc:	e7b3      	b.n	8006b36 <__swsetup_r+0x3e>
 8006bce:	0788      	lsls	r0, r1, #30
 8006bd0:	d400      	bmi.n	8006bd4 <__swsetup_r+0xdc>
 8006bd2:	6962      	ldr	r2, [r4, #20]
 8006bd4:	60a2      	str	r2, [r4, #8]
 8006bd6:	e7ef      	b.n	8006bb8 <__swsetup_r+0xc0>
 8006bd8:	20000050 	.word	0x20000050
 8006bdc:	0800790c 	.word	0x0800790c
 8006be0:	0800792c 	.word	0x0800792c
 8006be4:	080078ec 	.word	0x080078ec

08006be8 <abort>:
 8006be8:	2006      	movs	r0, #6
 8006bea:	b510      	push	{r4, lr}
 8006bec:	f000 fa74 	bl	80070d8 <raise>
 8006bf0:	2001      	movs	r0, #1
 8006bf2:	f7fb fb0e 	bl	8002212 <_exit>
	...

08006bf8 <__sflush_r>:
 8006bf8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006bfa:	898b      	ldrh	r3, [r1, #12]
 8006bfc:	0005      	movs	r5, r0
 8006bfe:	000c      	movs	r4, r1
 8006c00:	071a      	lsls	r2, r3, #28
 8006c02:	d45f      	bmi.n	8006cc4 <__sflush_r+0xcc>
 8006c04:	684a      	ldr	r2, [r1, #4]
 8006c06:	2a00      	cmp	r2, #0
 8006c08:	dc04      	bgt.n	8006c14 <__sflush_r+0x1c>
 8006c0a:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8006c0c:	2a00      	cmp	r2, #0
 8006c0e:	dc01      	bgt.n	8006c14 <__sflush_r+0x1c>
 8006c10:	2000      	movs	r0, #0
 8006c12:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006c14:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8006c16:	2f00      	cmp	r7, #0
 8006c18:	d0fa      	beq.n	8006c10 <__sflush_r+0x18>
 8006c1a:	2200      	movs	r2, #0
 8006c1c:	2180      	movs	r1, #128	; 0x80
 8006c1e:	682e      	ldr	r6, [r5, #0]
 8006c20:	602a      	str	r2, [r5, #0]
 8006c22:	001a      	movs	r2, r3
 8006c24:	0149      	lsls	r1, r1, #5
 8006c26:	400a      	ands	r2, r1
 8006c28:	420b      	tst	r3, r1
 8006c2a:	d034      	beq.n	8006c96 <__sflush_r+0x9e>
 8006c2c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8006c2e:	89a3      	ldrh	r3, [r4, #12]
 8006c30:	075b      	lsls	r3, r3, #29
 8006c32:	d506      	bpl.n	8006c42 <__sflush_r+0x4a>
 8006c34:	6863      	ldr	r3, [r4, #4]
 8006c36:	1ac0      	subs	r0, r0, r3
 8006c38:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006c3a:	2b00      	cmp	r3, #0
 8006c3c:	d001      	beq.n	8006c42 <__sflush_r+0x4a>
 8006c3e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006c40:	1ac0      	subs	r0, r0, r3
 8006c42:	0002      	movs	r2, r0
 8006c44:	6a21      	ldr	r1, [r4, #32]
 8006c46:	2300      	movs	r3, #0
 8006c48:	0028      	movs	r0, r5
 8006c4a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8006c4c:	47b8      	blx	r7
 8006c4e:	89a1      	ldrh	r1, [r4, #12]
 8006c50:	1c43      	adds	r3, r0, #1
 8006c52:	d106      	bne.n	8006c62 <__sflush_r+0x6a>
 8006c54:	682b      	ldr	r3, [r5, #0]
 8006c56:	2b1d      	cmp	r3, #29
 8006c58:	d831      	bhi.n	8006cbe <__sflush_r+0xc6>
 8006c5a:	4a2c      	ldr	r2, [pc, #176]	; (8006d0c <__sflush_r+0x114>)
 8006c5c:	40da      	lsrs	r2, r3
 8006c5e:	07d3      	lsls	r3, r2, #31
 8006c60:	d52d      	bpl.n	8006cbe <__sflush_r+0xc6>
 8006c62:	2300      	movs	r3, #0
 8006c64:	6063      	str	r3, [r4, #4]
 8006c66:	6923      	ldr	r3, [r4, #16]
 8006c68:	6023      	str	r3, [r4, #0]
 8006c6a:	04cb      	lsls	r3, r1, #19
 8006c6c:	d505      	bpl.n	8006c7a <__sflush_r+0x82>
 8006c6e:	1c43      	adds	r3, r0, #1
 8006c70:	d102      	bne.n	8006c78 <__sflush_r+0x80>
 8006c72:	682b      	ldr	r3, [r5, #0]
 8006c74:	2b00      	cmp	r3, #0
 8006c76:	d100      	bne.n	8006c7a <__sflush_r+0x82>
 8006c78:	6560      	str	r0, [r4, #84]	; 0x54
 8006c7a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006c7c:	602e      	str	r6, [r5, #0]
 8006c7e:	2900      	cmp	r1, #0
 8006c80:	d0c6      	beq.n	8006c10 <__sflush_r+0x18>
 8006c82:	0023      	movs	r3, r4
 8006c84:	3344      	adds	r3, #68	; 0x44
 8006c86:	4299      	cmp	r1, r3
 8006c88:	d002      	beq.n	8006c90 <__sflush_r+0x98>
 8006c8a:	0028      	movs	r0, r5
 8006c8c:	f7ff fa86 	bl	800619c <_free_r>
 8006c90:	2000      	movs	r0, #0
 8006c92:	6360      	str	r0, [r4, #52]	; 0x34
 8006c94:	e7bd      	b.n	8006c12 <__sflush_r+0x1a>
 8006c96:	2301      	movs	r3, #1
 8006c98:	0028      	movs	r0, r5
 8006c9a:	6a21      	ldr	r1, [r4, #32]
 8006c9c:	47b8      	blx	r7
 8006c9e:	1c43      	adds	r3, r0, #1
 8006ca0:	d1c5      	bne.n	8006c2e <__sflush_r+0x36>
 8006ca2:	682b      	ldr	r3, [r5, #0]
 8006ca4:	2b00      	cmp	r3, #0
 8006ca6:	d0c2      	beq.n	8006c2e <__sflush_r+0x36>
 8006ca8:	2b1d      	cmp	r3, #29
 8006caa:	d001      	beq.n	8006cb0 <__sflush_r+0xb8>
 8006cac:	2b16      	cmp	r3, #22
 8006cae:	d101      	bne.n	8006cb4 <__sflush_r+0xbc>
 8006cb0:	602e      	str	r6, [r5, #0]
 8006cb2:	e7ad      	b.n	8006c10 <__sflush_r+0x18>
 8006cb4:	2340      	movs	r3, #64	; 0x40
 8006cb6:	89a2      	ldrh	r2, [r4, #12]
 8006cb8:	4313      	orrs	r3, r2
 8006cba:	81a3      	strh	r3, [r4, #12]
 8006cbc:	e7a9      	b.n	8006c12 <__sflush_r+0x1a>
 8006cbe:	2340      	movs	r3, #64	; 0x40
 8006cc0:	430b      	orrs	r3, r1
 8006cc2:	e7fa      	b.n	8006cba <__sflush_r+0xc2>
 8006cc4:	690f      	ldr	r7, [r1, #16]
 8006cc6:	2f00      	cmp	r7, #0
 8006cc8:	d0a2      	beq.n	8006c10 <__sflush_r+0x18>
 8006cca:	680a      	ldr	r2, [r1, #0]
 8006ccc:	600f      	str	r7, [r1, #0]
 8006cce:	1bd2      	subs	r2, r2, r7
 8006cd0:	9201      	str	r2, [sp, #4]
 8006cd2:	2200      	movs	r2, #0
 8006cd4:	079b      	lsls	r3, r3, #30
 8006cd6:	d100      	bne.n	8006cda <__sflush_r+0xe2>
 8006cd8:	694a      	ldr	r2, [r1, #20]
 8006cda:	60a2      	str	r2, [r4, #8]
 8006cdc:	9b01      	ldr	r3, [sp, #4]
 8006cde:	2b00      	cmp	r3, #0
 8006ce0:	dc00      	bgt.n	8006ce4 <__sflush_r+0xec>
 8006ce2:	e795      	b.n	8006c10 <__sflush_r+0x18>
 8006ce4:	003a      	movs	r2, r7
 8006ce6:	0028      	movs	r0, r5
 8006ce8:	9b01      	ldr	r3, [sp, #4]
 8006cea:	6a21      	ldr	r1, [r4, #32]
 8006cec:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8006cee:	47b0      	blx	r6
 8006cf0:	2800      	cmp	r0, #0
 8006cf2:	dc06      	bgt.n	8006d02 <__sflush_r+0x10a>
 8006cf4:	2340      	movs	r3, #64	; 0x40
 8006cf6:	2001      	movs	r0, #1
 8006cf8:	89a2      	ldrh	r2, [r4, #12]
 8006cfa:	4240      	negs	r0, r0
 8006cfc:	4313      	orrs	r3, r2
 8006cfe:	81a3      	strh	r3, [r4, #12]
 8006d00:	e787      	b.n	8006c12 <__sflush_r+0x1a>
 8006d02:	9b01      	ldr	r3, [sp, #4]
 8006d04:	183f      	adds	r7, r7, r0
 8006d06:	1a1b      	subs	r3, r3, r0
 8006d08:	9301      	str	r3, [sp, #4]
 8006d0a:	e7e7      	b.n	8006cdc <__sflush_r+0xe4>
 8006d0c:	20400001 	.word	0x20400001

08006d10 <_fflush_r>:
 8006d10:	690b      	ldr	r3, [r1, #16]
 8006d12:	b570      	push	{r4, r5, r6, lr}
 8006d14:	0005      	movs	r5, r0
 8006d16:	000c      	movs	r4, r1
 8006d18:	2b00      	cmp	r3, #0
 8006d1a:	d102      	bne.n	8006d22 <_fflush_r+0x12>
 8006d1c:	2500      	movs	r5, #0
 8006d1e:	0028      	movs	r0, r5
 8006d20:	bd70      	pop	{r4, r5, r6, pc}
 8006d22:	2800      	cmp	r0, #0
 8006d24:	d004      	beq.n	8006d30 <_fflush_r+0x20>
 8006d26:	6983      	ldr	r3, [r0, #24]
 8006d28:	2b00      	cmp	r3, #0
 8006d2a:	d101      	bne.n	8006d30 <_fflush_r+0x20>
 8006d2c:	f000 f892 	bl	8006e54 <__sinit>
 8006d30:	4b14      	ldr	r3, [pc, #80]	; (8006d84 <_fflush_r+0x74>)
 8006d32:	429c      	cmp	r4, r3
 8006d34:	d11b      	bne.n	8006d6e <_fflush_r+0x5e>
 8006d36:	686c      	ldr	r4, [r5, #4]
 8006d38:	220c      	movs	r2, #12
 8006d3a:	5ea3      	ldrsh	r3, [r4, r2]
 8006d3c:	2b00      	cmp	r3, #0
 8006d3e:	d0ed      	beq.n	8006d1c <_fflush_r+0xc>
 8006d40:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8006d42:	07d2      	lsls	r2, r2, #31
 8006d44:	d404      	bmi.n	8006d50 <_fflush_r+0x40>
 8006d46:	059b      	lsls	r3, r3, #22
 8006d48:	d402      	bmi.n	8006d50 <_fflush_r+0x40>
 8006d4a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006d4c:	f000 f923 	bl	8006f96 <__retarget_lock_acquire_recursive>
 8006d50:	0028      	movs	r0, r5
 8006d52:	0021      	movs	r1, r4
 8006d54:	f7ff ff50 	bl	8006bf8 <__sflush_r>
 8006d58:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006d5a:	0005      	movs	r5, r0
 8006d5c:	07db      	lsls	r3, r3, #31
 8006d5e:	d4de      	bmi.n	8006d1e <_fflush_r+0xe>
 8006d60:	89a3      	ldrh	r3, [r4, #12]
 8006d62:	059b      	lsls	r3, r3, #22
 8006d64:	d4db      	bmi.n	8006d1e <_fflush_r+0xe>
 8006d66:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006d68:	f000 f916 	bl	8006f98 <__retarget_lock_release_recursive>
 8006d6c:	e7d7      	b.n	8006d1e <_fflush_r+0xe>
 8006d6e:	4b06      	ldr	r3, [pc, #24]	; (8006d88 <_fflush_r+0x78>)
 8006d70:	429c      	cmp	r4, r3
 8006d72:	d101      	bne.n	8006d78 <_fflush_r+0x68>
 8006d74:	68ac      	ldr	r4, [r5, #8]
 8006d76:	e7df      	b.n	8006d38 <_fflush_r+0x28>
 8006d78:	4b04      	ldr	r3, [pc, #16]	; (8006d8c <_fflush_r+0x7c>)
 8006d7a:	429c      	cmp	r4, r3
 8006d7c:	d1dc      	bne.n	8006d38 <_fflush_r+0x28>
 8006d7e:	68ec      	ldr	r4, [r5, #12]
 8006d80:	e7da      	b.n	8006d38 <_fflush_r+0x28>
 8006d82:	46c0      	nop			; (mov r8, r8)
 8006d84:	0800790c 	.word	0x0800790c
 8006d88:	0800792c 	.word	0x0800792c
 8006d8c:	080078ec 	.word	0x080078ec

08006d90 <std>:
 8006d90:	2300      	movs	r3, #0
 8006d92:	b510      	push	{r4, lr}
 8006d94:	0004      	movs	r4, r0
 8006d96:	6003      	str	r3, [r0, #0]
 8006d98:	6043      	str	r3, [r0, #4]
 8006d9a:	6083      	str	r3, [r0, #8]
 8006d9c:	8181      	strh	r1, [r0, #12]
 8006d9e:	6643      	str	r3, [r0, #100]	; 0x64
 8006da0:	0019      	movs	r1, r3
 8006da2:	81c2      	strh	r2, [r0, #14]
 8006da4:	6103      	str	r3, [r0, #16]
 8006da6:	6143      	str	r3, [r0, #20]
 8006da8:	6183      	str	r3, [r0, #24]
 8006daa:	2208      	movs	r2, #8
 8006dac:	305c      	adds	r0, #92	; 0x5c
 8006dae:	f7fd fab7 	bl	8004320 <memset>
 8006db2:	4b05      	ldr	r3, [pc, #20]	; (8006dc8 <std+0x38>)
 8006db4:	6224      	str	r4, [r4, #32]
 8006db6:	6263      	str	r3, [r4, #36]	; 0x24
 8006db8:	4b04      	ldr	r3, [pc, #16]	; (8006dcc <std+0x3c>)
 8006dba:	62a3      	str	r3, [r4, #40]	; 0x28
 8006dbc:	4b04      	ldr	r3, [pc, #16]	; (8006dd0 <std+0x40>)
 8006dbe:	62e3      	str	r3, [r4, #44]	; 0x2c
 8006dc0:	4b04      	ldr	r3, [pc, #16]	; (8006dd4 <std+0x44>)
 8006dc2:	6323      	str	r3, [r4, #48]	; 0x30
 8006dc4:	bd10      	pop	{r4, pc}
 8006dc6:	46c0      	nop			; (mov r8, r8)
 8006dc8:	08007119 	.word	0x08007119
 8006dcc:	08007141 	.word	0x08007141
 8006dd0:	08007179 	.word	0x08007179
 8006dd4:	080071a5 	.word	0x080071a5

08006dd8 <_cleanup_r>:
 8006dd8:	b510      	push	{r4, lr}
 8006dda:	4902      	ldr	r1, [pc, #8]	; (8006de4 <_cleanup_r+0xc>)
 8006ddc:	f000 f8ba 	bl	8006f54 <_fwalk_reent>
 8006de0:	bd10      	pop	{r4, pc}
 8006de2:	46c0      	nop			; (mov r8, r8)
 8006de4:	08006d11 	.word	0x08006d11

08006de8 <__sfmoreglue>:
 8006de8:	b570      	push	{r4, r5, r6, lr}
 8006dea:	2568      	movs	r5, #104	; 0x68
 8006dec:	1e4a      	subs	r2, r1, #1
 8006dee:	4355      	muls	r5, r2
 8006df0:	000e      	movs	r6, r1
 8006df2:	0029      	movs	r1, r5
 8006df4:	3174      	adds	r1, #116	; 0x74
 8006df6:	f7ff fa3d 	bl	8006274 <_malloc_r>
 8006dfa:	1e04      	subs	r4, r0, #0
 8006dfc:	d008      	beq.n	8006e10 <__sfmoreglue+0x28>
 8006dfe:	2100      	movs	r1, #0
 8006e00:	002a      	movs	r2, r5
 8006e02:	6001      	str	r1, [r0, #0]
 8006e04:	6046      	str	r6, [r0, #4]
 8006e06:	300c      	adds	r0, #12
 8006e08:	60a0      	str	r0, [r4, #8]
 8006e0a:	3268      	adds	r2, #104	; 0x68
 8006e0c:	f7fd fa88 	bl	8004320 <memset>
 8006e10:	0020      	movs	r0, r4
 8006e12:	bd70      	pop	{r4, r5, r6, pc}

08006e14 <__sfp_lock_acquire>:
 8006e14:	b510      	push	{r4, lr}
 8006e16:	4802      	ldr	r0, [pc, #8]	; (8006e20 <__sfp_lock_acquire+0xc>)
 8006e18:	f000 f8bd 	bl	8006f96 <__retarget_lock_acquire_recursive>
 8006e1c:	bd10      	pop	{r4, pc}
 8006e1e:	46c0      	nop			; (mov r8, r8)
 8006e20:	200003a1 	.word	0x200003a1

08006e24 <__sfp_lock_release>:
 8006e24:	b510      	push	{r4, lr}
 8006e26:	4802      	ldr	r0, [pc, #8]	; (8006e30 <__sfp_lock_release+0xc>)
 8006e28:	f000 f8b6 	bl	8006f98 <__retarget_lock_release_recursive>
 8006e2c:	bd10      	pop	{r4, pc}
 8006e2e:	46c0      	nop			; (mov r8, r8)
 8006e30:	200003a1 	.word	0x200003a1

08006e34 <__sinit_lock_acquire>:
 8006e34:	b510      	push	{r4, lr}
 8006e36:	4802      	ldr	r0, [pc, #8]	; (8006e40 <__sinit_lock_acquire+0xc>)
 8006e38:	f000 f8ad 	bl	8006f96 <__retarget_lock_acquire_recursive>
 8006e3c:	bd10      	pop	{r4, pc}
 8006e3e:	46c0      	nop			; (mov r8, r8)
 8006e40:	200003a2 	.word	0x200003a2

08006e44 <__sinit_lock_release>:
 8006e44:	b510      	push	{r4, lr}
 8006e46:	4802      	ldr	r0, [pc, #8]	; (8006e50 <__sinit_lock_release+0xc>)
 8006e48:	f000 f8a6 	bl	8006f98 <__retarget_lock_release_recursive>
 8006e4c:	bd10      	pop	{r4, pc}
 8006e4e:	46c0      	nop			; (mov r8, r8)
 8006e50:	200003a2 	.word	0x200003a2

08006e54 <__sinit>:
 8006e54:	b513      	push	{r0, r1, r4, lr}
 8006e56:	0004      	movs	r4, r0
 8006e58:	f7ff ffec 	bl	8006e34 <__sinit_lock_acquire>
 8006e5c:	69a3      	ldr	r3, [r4, #24]
 8006e5e:	2b00      	cmp	r3, #0
 8006e60:	d002      	beq.n	8006e68 <__sinit+0x14>
 8006e62:	f7ff ffef 	bl	8006e44 <__sinit_lock_release>
 8006e66:	bd13      	pop	{r0, r1, r4, pc}
 8006e68:	64a3      	str	r3, [r4, #72]	; 0x48
 8006e6a:	64e3      	str	r3, [r4, #76]	; 0x4c
 8006e6c:	6523      	str	r3, [r4, #80]	; 0x50
 8006e6e:	4b13      	ldr	r3, [pc, #76]	; (8006ebc <__sinit+0x68>)
 8006e70:	4a13      	ldr	r2, [pc, #76]	; (8006ec0 <__sinit+0x6c>)
 8006e72:	681b      	ldr	r3, [r3, #0]
 8006e74:	62a2      	str	r2, [r4, #40]	; 0x28
 8006e76:	9301      	str	r3, [sp, #4]
 8006e78:	42a3      	cmp	r3, r4
 8006e7a:	d101      	bne.n	8006e80 <__sinit+0x2c>
 8006e7c:	2301      	movs	r3, #1
 8006e7e:	61a3      	str	r3, [r4, #24]
 8006e80:	0020      	movs	r0, r4
 8006e82:	f000 f81f 	bl	8006ec4 <__sfp>
 8006e86:	6060      	str	r0, [r4, #4]
 8006e88:	0020      	movs	r0, r4
 8006e8a:	f000 f81b 	bl	8006ec4 <__sfp>
 8006e8e:	60a0      	str	r0, [r4, #8]
 8006e90:	0020      	movs	r0, r4
 8006e92:	f000 f817 	bl	8006ec4 <__sfp>
 8006e96:	2200      	movs	r2, #0
 8006e98:	2104      	movs	r1, #4
 8006e9a:	60e0      	str	r0, [r4, #12]
 8006e9c:	6860      	ldr	r0, [r4, #4]
 8006e9e:	f7ff ff77 	bl	8006d90 <std>
 8006ea2:	2201      	movs	r2, #1
 8006ea4:	2109      	movs	r1, #9
 8006ea6:	68a0      	ldr	r0, [r4, #8]
 8006ea8:	f7ff ff72 	bl	8006d90 <std>
 8006eac:	2202      	movs	r2, #2
 8006eae:	2112      	movs	r1, #18
 8006eb0:	68e0      	ldr	r0, [r4, #12]
 8006eb2:	f7ff ff6d 	bl	8006d90 <std>
 8006eb6:	2301      	movs	r3, #1
 8006eb8:	61a3      	str	r3, [r4, #24]
 8006eba:	e7d2      	b.n	8006e62 <__sinit+0xe>
 8006ebc:	08007570 	.word	0x08007570
 8006ec0:	08006dd9 	.word	0x08006dd9

08006ec4 <__sfp>:
 8006ec4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006ec6:	0007      	movs	r7, r0
 8006ec8:	f7ff ffa4 	bl	8006e14 <__sfp_lock_acquire>
 8006ecc:	4b1f      	ldr	r3, [pc, #124]	; (8006f4c <__sfp+0x88>)
 8006ece:	681e      	ldr	r6, [r3, #0]
 8006ed0:	69b3      	ldr	r3, [r6, #24]
 8006ed2:	2b00      	cmp	r3, #0
 8006ed4:	d102      	bne.n	8006edc <__sfp+0x18>
 8006ed6:	0030      	movs	r0, r6
 8006ed8:	f7ff ffbc 	bl	8006e54 <__sinit>
 8006edc:	3648      	adds	r6, #72	; 0x48
 8006ede:	68b4      	ldr	r4, [r6, #8]
 8006ee0:	6873      	ldr	r3, [r6, #4]
 8006ee2:	3b01      	subs	r3, #1
 8006ee4:	d504      	bpl.n	8006ef0 <__sfp+0x2c>
 8006ee6:	6833      	ldr	r3, [r6, #0]
 8006ee8:	2b00      	cmp	r3, #0
 8006eea:	d022      	beq.n	8006f32 <__sfp+0x6e>
 8006eec:	6836      	ldr	r6, [r6, #0]
 8006eee:	e7f6      	b.n	8006ede <__sfp+0x1a>
 8006ef0:	220c      	movs	r2, #12
 8006ef2:	5ea5      	ldrsh	r5, [r4, r2]
 8006ef4:	2d00      	cmp	r5, #0
 8006ef6:	d11a      	bne.n	8006f2e <__sfp+0x6a>
 8006ef8:	0020      	movs	r0, r4
 8006efa:	4b15      	ldr	r3, [pc, #84]	; (8006f50 <__sfp+0x8c>)
 8006efc:	3058      	adds	r0, #88	; 0x58
 8006efe:	60e3      	str	r3, [r4, #12]
 8006f00:	6665      	str	r5, [r4, #100]	; 0x64
 8006f02:	f000 f847 	bl	8006f94 <__retarget_lock_init_recursive>
 8006f06:	f7ff ff8d 	bl	8006e24 <__sfp_lock_release>
 8006f0a:	0020      	movs	r0, r4
 8006f0c:	2208      	movs	r2, #8
 8006f0e:	0029      	movs	r1, r5
 8006f10:	6025      	str	r5, [r4, #0]
 8006f12:	60a5      	str	r5, [r4, #8]
 8006f14:	6065      	str	r5, [r4, #4]
 8006f16:	6125      	str	r5, [r4, #16]
 8006f18:	6165      	str	r5, [r4, #20]
 8006f1a:	61a5      	str	r5, [r4, #24]
 8006f1c:	305c      	adds	r0, #92	; 0x5c
 8006f1e:	f7fd f9ff 	bl	8004320 <memset>
 8006f22:	6365      	str	r5, [r4, #52]	; 0x34
 8006f24:	63a5      	str	r5, [r4, #56]	; 0x38
 8006f26:	64a5      	str	r5, [r4, #72]	; 0x48
 8006f28:	64e5      	str	r5, [r4, #76]	; 0x4c
 8006f2a:	0020      	movs	r0, r4
 8006f2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006f2e:	3468      	adds	r4, #104	; 0x68
 8006f30:	e7d7      	b.n	8006ee2 <__sfp+0x1e>
 8006f32:	2104      	movs	r1, #4
 8006f34:	0038      	movs	r0, r7
 8006f36:	f7ff ff57 	bl	8006de8 <__sfmoreglue>
 8006f3a:	1e04      	subs	r4, r0, #0
 8006f3c:	6030      	str	r0, [r6, #0]
 8006f3e:	d1d5      	bne.n	8006eec <__sfp+0x28>
 8006f40:	f7ff ff70 	bl	8006e24 <__sfp_lock_release>
 8006f44:	230c      	movs	r3, #12
 8006f46:	603b      	str	r3, [r7, #0]
 8006f48:	e7ef      	b.n	8006f2a <__sfp+0x66>
 8006f4a:	46c0      	nop			; (mov r8, r8)
 8006f4c:	08007570 	.word	0x08007570
 8006f50:	ffff0001 	.word	0xffff0001

08006f54 <_fwalk_reent>:
 8006f54:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006f56:	0004      	movs	r4, r0
 8006f58:	0006      	movs	r6, r0
 8006f5a:	2700      	movs	r7, #0
 8006f5c:	9101      	str	r1, [sp, #4]
 8006f5e:	3448      	adds	r4, #72	; 0x48
 8006f60:	6863      	ldr	r3, [r4, #4]
 8006f62:	68a5      	ldr	r5, [r4, #8]
 8006f64:	9300      	str	r3, [sp, #0]
 8006f66:	9b00      	ldr	r3, [sp, #0]
 8006f68:	3b01      	subs	r3, #1
 8006f6a:	9300      	str	r3, [sp, #0]
 8006f6c:	d504      	bpl.n	8006f78 <_fwalk_reent+0x24>
 8006f6e:	6824      	ldr	r4, [r4, #0]
 8006f70:	2c00      	cmp	r4, #0
 8006f72:	d1f5      	bne.n	8006f60 <_fwalk_reent+0xc>
 8006f74:	0038      	movs	r0, r7
 8006f76:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006f78:	89ab      	ldrh	r3, [r5, #12]
 8006f7a:	2b01      	cmp	r3, #1
 8006f7c:	d908      	bls.n	8006f90 <_fwalk_reent+0x3c>
 8006f7e:	220e      	movs	r2, #14
 8006f80:	5eab      	ldrsh	r3, [r5, r2]
 8006f82:	3301      	adds	r3, #1
 8006f84:	d004      	beq.n	8006f90 <_fwalk_reent+0x3c>
 8006f86:	0029      	movs	r1, r5
 8006f88:	0030      	movs	r0, r6
 8006f8a:	9b01      	ldr	r3, [sp, #4]
 8006f8c:	4798      	blx	r3
 8006f8e:	4307      	orrs	r7, r0
 8006f90:	3568      	adds	r5, #104	; 0x68
 8006f92:	e7e8      	b.n	8006f66 <_fwalk_reent+0x12>

08006f94 <__retarget_lock_init_recursive>:
 8006f94:	4770      	bx	lr

08006f96 <__retarget_lock_acquire_recursive>:
 8006f96:	4770      	bx	lr

08006f98 <__retarget_lock_release_recursive>:
 8006f98:	4770      	bx	lr
	...

08006f9c <__swhatbuf_r>:
 8006f9c:	b570      	push	{r4, r5, r6, lr}
 8006f9e:	000e      	movs	r6, r1
 8006fa0:	001d      	movs	r5, r3
 8006fa2:	230e      	movs	r3, #14
 8006fa4:	5ec9      	ldrsh	r1, [r1, r3]
 8006fa6:	0014      	movs	r4, r2
 8006fa8:	b096      	sub	sp, #88	; 0x58
 8006faa:	2900      	cmp	r1, #0
 8006fac:	da08      	bge.n	8006fc0 <__swhatbuf_r+0x24>
 8006fae:	220c      	movs	r2, #12
 8006fb0:	5eb3      	ldrsh	r3, [r6, r2]
 8006fb2:	2200      	movs	r2, #0
 8006fb4:	602a      	str	r2, [r5, #0]
 8006fb6:	061b      	lsls	r3, r3, #24
 8006fb8:	d411      	bmi.n	8006fde <__swhatbuf_r+0x42>
 8006fba:	2380      	movs	r3, #128	; 0x80
 8006fbc:	00db      	lsls	r3, r3, #3
 8006fbe:	e00f      	b.n	8006fe0 <__swhatbuf_r+0x44>
 8006fc0:	466a      	mov	r2, sp
 8006fc2:	f000 f91b 	bl	80071fc <_fstat_r>
 8006fc6:	2800      	cmp	r0, #0
 8006fc8:	dbf1      	blt.n	8006fae <__swhatbuf_r+0x12>
 8006fca:	23f0      	movs	r3, #240	; 0xf0
 8006fcc:	9901      	ldr	r1, [sp, #4]
 8006fce:	021b      	lsls	r3, r3, #8
 8006fd0:	4019      	ands	r1, r3
 8006fd2:	4b05      	ldr	r3, [pc, #20]	; (8006fe8 <__swhatbuf_r+0x4c>)
 8006fd4:	18c9      	adds	r1, r1, r3
 8006fd6:	424b      	negs	r3, r1
 8006fd8:	4159      	adcs	r1, r3
 8006fda:	6029      	str	r1, [r5, #0]
 8006fdc:	e7ed      	b.n	8006fba <__swhatbuf_r+0x1e>
 8006fde:	2340      	movs	r3, #64	; 0x40
 8006fe0:	2000      	movs	r0, #0
 8006fe2:	6023      	str	r3, [r4, #0]
 8006fe4:	b016      	add	sp, #88	; 0x58
 8006fe6:	bd70      	pop	{r4, r5, r6, pc}
 8006fe8:	ffffe000 	.word	0xffffe000

08006fec <__smakebuf_r>:
 8006fec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006fee:	2602      	movs	r6, #2
 8006ff0:	898b      	ldrh	r3, [r1, #12]
 8006ff2:	0005      	movs	r5, r0
 8006ff4:	000c      	movs	r4, r1
 8006ff6:	4233      	tst	r3, r6
 8006ff8:	d006      	beq.n	8007008 <__smakebuf_r+0x1c>
 8006ffa:	0023      	movs	r3, r4
 8006ffc:	3347      	adds	r3, #71	; 0x47
 8006ffe:	6023      	str	r3, [r4, #0]
 8007000:	6123      	str	r3, [r4, #16]
 8007002:	2301      	movs	r3, #1
 8007004:	6163      	str	r3, [r4, #20]
 8007006:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8007008:	466a      	mov	r2, sp
 800700a:	ab01      	add	r3, sp, #4
 800700c:	f7ff ffc6 	bl	8006f9c <__swhatbuf_r>
 8007010:	9900      	ldr	r1, [sp, #0]
 8007012:	0007      	movs	r7, r0
 8007014:	0028      	movs	r0, r5
 8007016:	f7ff f92d 	bl	8006274 <_malloc_r>
 800701a:	2800      	cmp	r0, #0
 800701c:	d108      	bne.n	8007030 <__smakebuf_r+0x44>
 800701e:	220c      	movs	r2, #12
 8007020:	5ea3      	ldrsh	r3, [r4, r2]
 8007022:	059a      	lsls	r2, r3, #22
 8007024:	d4ef      	bmi.n	8007006 <__smakebuf_r+0x1a>
 8007026:	2203      	movs	r2, #3
 8007028:	4393      	bics	r3, r2
 800702a:	431e      	orrs	r6, r3
 800702c:	81a6      	strh	r6, [r4, #12]
 800702e:	e7e4      	b.n	8006ffa <__smakebuf_r+0xe>
 8007030:	4b0f      	ldr	r3, [pc, #60]	; (8007070 <__smakebuf_r+0x84>)
 8007032:	62ab      	str	r3, [r5, #40]	; 0x28
 8007034:	2380      	movs	r3, #128	; 0x80
 8007036:	89a2      	ldrh	r2, [r4, #12]
 8007038:	6020      	str	r0, [r4, #0]
 800703a:	4313      	orrs	r3, r2
 800703c:	81a3      	strh	r3, [r4, #12]
 800703e:	9b00      	ldr	r3, [sp, #0]
 8007040:	6120      	str	r0, [r4, #16]
 8007042:	6163      	str	r3, [r4, #20]
 8007044:	9b01      	ldr	r3, [sp, #4]
 8007046:	2b00      	cmp	r3, #0
 8007048:	d00d      	beq.n	8007066 <__smakebuf_r+0x7a>
 800704a:	0028      	movs	r0, r5
 800704c:	230e      	movs	r3, #14
 800704e:	5ee1      	ldrsh	r1, [r4, r3]
 8007050:	f000 f8e6 	bl	8007220 <_isatty_r>
 8007054:	2800      	cmp	r0, #0
 8007056:	d006      	beq.n	8007066 <__smakebuf_r+0x7a>
 8007058:	2203      	movs	r2, #3
 800705a:	89a3      	ldrh	r3, [r4, #12]
 800705c:	4393      	bics	r3, r2
 800705e:	001a      	movs	r2, r3
 8007060:	2301      	movs	r3, #1
 8007062:	4313      	orrs	r3, r2
 8007064:	81a3      	strh	r3, [r4, #12]
 8007066:	89a0      	ldrh	r0, [r4, #12]
 8007068:	4307      	orrs	r7, r0
 800706a:	81a7      	strh	r7, [r4, #12]
 800706c:	e7cb      	b.n	8007006 <__smakebuf_r+0x1a>
 800706e:	46c0      	nop			; (mov r8, r8)
 8007070:	08006dd9 	.word	0x08006dd9

08007074 <_malloc_usable_size_r>:
 8007074:	1f0b      	subs	r3, r1, #4
 8007076:	681b      	ldr	r3, [r3, #0]
 8007078:	1f18      	subs	r0, r3, #4
 800707a:	2b00      	cmp	r3, #0
 800707c:	da01      	bge.n	8007082 <_malloc_usable_size_r+0xe>
 800707e:	580b      	ldr	r3, [r1, r0]
 8007080:	18c0      	adds	r0, r0, r3
 8007082:	4770      	bx	lr

08007084 <_raise_r>:
 8007084:	b570      	push	{r4, r5, r6, lr}
 8007086:	0004      	movs	r4, r0
 8007088:	000d      	movs	r5, r1
 800708a:	291f      	cmp	r1, #31
 800708c:	d904      	bls.n	8007098 <_raise_r+0x14>
 800708e:	2316      	movs	r3, #22
 8007090:	6003      	str	r3, [r0, #0]
 8007092:	2001      	movs	r0, #1
 8007094:	4240      	negs	r0, r0
 8007096:	bd70      	pop	{r4, r5, r6, pc}
 8007098:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800709a:	2b00      	cmp	r3, #0
 800709c:	d004      	beq.n	80070a8 <_raise_r+0x24>
 800709e:	008a      	lsls	r2, r1, #2
 80070a0:	189b      	adds	r3, r3, r2
 80070a2:	681a      	ldr	r2, [r3, #0]
 80070a4:	2a00      	cmp	r2, #0
 80070a6:	d108      	bne.n	80070ba <_raise_r+0x36>
 80070a8:	0020      	movs	r0, r4
 80070aa:	f000 f831 	bl	8007110 <_getpid_r>
 80070ae:	002a      	movs	r2, r5
 80070b0:	0001      	movs	r1, r0
 80070b2:	0020      	movs	r0, r4
 80070b4:	f000 f81a 	bl	80070ec <_kill_r>
 80070b8:	e7ed      	b.n	8007096 <_raise_r+0x12>
 80070ba:	2000      	movs	r0, #0
 80070bc:	2a01      	cmp	r2, #1
 80070be:	d0ea      	beq.n	8007096 <_raise_r+0x12>
 80070c0:	1c51      	adds	r1, r2, #1
 80070c2:	d103      	bne.n	80070cc <_raise_r+0x48>
 80070c4:	2316      	movs	r3, #22
 80070c6:	3001      	adds	r0, #1
 80070c8:	6023      	str	r3, [r4, #0]
 80070ca:	e7e4      	b.n	8007096 <_raise_r+0x12>
 80070cc:	2400      	movs	r4, #0
 80070ce:	0028      	movs	r0, r5
 80070d0:	601c      	str	r4, [r3, #0]
 80070d2:	4790      	blx	r2
 80070d4:	0020      	movs	r0, r4
 80070d6:	e7de      	b.n	8007096 <_raise_r+0x12>

080070d8 <raise>:
 80070d8:	b510      	push	{r4, lr}
 80070da:	4b03      	ldr	r3, [pc, #12]	; (80070e8 <raise+0x10>)
 80070dc:	0001      	movs	r1, r0
 80070de:	6818      	ldr	r0, [r3, #0]
 80070e0:	f7ff ffd0 	bl	8007084 <_raise_r>
 80070e4:	bd10      	pop	{r4, pc}
 80070e6:	46c0      	nop			; (mov r8, r8)
 80070e8:	20000050 	.word	0x20000050

080070ec <_kill_r>:
 80070ec:	2300      	movs	r3, #0
 80070ee:	b570      	push	{r4, r5, r6, lr}
 80070f0:	4d06      	ldr	r5, [pc, #24]	; (800710c <_kill_r+0x20>)
 80070f2:	0004      	movs	r4, r0
 80070f4:	0008      	movs	r0, r1
 80070f6:	0011      	movs	r1, r2
 80070f8:	602b      	str	r3, [r5, #0]
 80070fa:	f7fb f87a 	bl	80021f2 <_kill>
 80070fe:	1c43      	adds	r3, r0, #1
 8007100:	d103      	bne.n	800710a <_kill_r+0x1e>
 8007102:	682b      	ldr	r3, [r5, #0]
 8007104:	2b00      	cmp	r3, #0
 8007106:	d000      	beq.n	800710a <_kill_r+0x1e>
 8007108:	6023      	str	r3, [r4, #0]
 800710a:	bd70      	pop	{r4, r5, r6, pc}
 800710c:	2000039c 	.word	0x2000039c

08007110 <_getpid_r>:
 8007110:	b510      	push	{r4, lr}
 8007112:	f7fb f868 	bl	80021e6 <_getpid>
 8007116:	bd10      	pop	{r4, pc}

08007118 <__sread>:
 8007118:	b570      	push	{r4, r5, r6, lr}
 800711a:	000c      	movs	r4, r1
 800711c:	250e      	movs	r5, #14
 800711e:	5f49      	ldrsh	r1, [r1, r5]
 8007120:	f000 f8a4 	bl	800726c <_read_r>
 8007124:	2800      	cmp	r0, #0
 8007126:	db03      	blt.n	8007130 <__sread+0x18>
 8007128:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800712a:	181b      	adds	r3, r3, r0
 800712c:	6563      	str	r3, [r4, #84]	; 0x54
 800712e:	bd70      	pop	{r4, r5, r6, pc}
 8007130:	89a3      	ldrh	r3, [r4, #12]
 8007132:	4a02      	ldr	r2, [pc, #8]	; (800713c <__sread+0x24>)
 8007134:	4013      	ands	r3, r2
 8007136:	81a3      	strh	r3, [r4, #12]
 8007138:	e7f9      	b.n	800712e <__sread+0x16>
 800713a:	46c0      	nop			; (mov r8, r8)
 800713c:	ffffefff 	.word	0xffffefff

08007140 <__swrite>:
 8007140:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007142:	001f      	movs	r7, r3
 8007144:	898b      	ldrh	r3, [r1, #12]
 8007146:	0005      	movs	r5, r0
 8007148:	000c      	movs	r4, r1
 800714a:	0016      	movs	r6, r2
 800714c:	05db      	lsls	r3, r3, #23
 800714e:	d505      	bpl.n	800715c <__swrite+0x1c>
 8007150:	230e      	movs	r3, #14
 8007152:	5ec9      	ldrsh	r1, [r1, r3]
 8007154:	2200      	movs	r2, #0
 8007156:	2302      	movs	r3, #2
 8007158:	f000 f874 	bl	8007244 <_lseek_r>
 800715c:	89a3      	ldrh	r3, [r4, #12]
 800715e:	4a05      	ldr	r2, [pc, #20]	; (8007174 <__swrite+0x34>)
 8007160:	0028      	movs	r0, r5
 8007162:	4013      	ands	r3, r2
 8007164:	81a3      	strh	r3, [r4, #12]
 8007166:	0032      	movs	r2, r6
 8007168:	230e      	movs	r3, #14
 800716a:	5ee1      	ldrsh	r1, [r4, r3]
 800716c:	003b      	movs	r3, r7
 800716e:	f000 f81f 	bl	80071b0 <_write_r>
 8007172:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007174:	ffffefff 	.word	0xffffefff

08007178 <__sseek>:
 8007178:	b570      	push	{r4, r5, r6, lr}
 800717a:	000c      	movs	r4, r1
 800717c:	250e      	movs	r5, #14
 800717e:	5f49      	ldrsh	r1, [r1, r5]
 8007180:	f000 f860 	bl	8007244 <_lseek_r>
 8007184:	89a3      	ldrh	r3, [r4, #12]
 8007186:	1c42      	adds	r2, r0, #1
 8007188:	d103      	bne.n	8007192 <__sseek+0x1a>
 800718a:	4a05      	ldr	r2, [pc, #20]	; (80071a0 <__sseek+0x28>)
 800718c:	4013      	ands	r3, r2
 800718e:	81a3      	strh	r3, [r4, #12]
 8007190:	bd70      	pop	{r4, r5, r6, pc}
 8007192:	2280      	movs	r2, #128	; 0x80
 8007194:	0152      	lsls	r2, r2, #5
 8007196:	4313      	orrs	r3, r2
 8007198:	81a3      	strh	r3, [r4, #12]
 800719a:	6560      	str	r0, [r4, #84]	; 0x54
 800719c:	e7f8      	b.n	8007190 <__sseek+0x18>
 800719e:	46c0      	nop			; (mov r8, r8)
 80071a0:	ffffefff 	.word	0xffffefff

080071a4 <__sclose>:
 80071a4:	b510      	push	{r4, lr}
 80071a6:	230e      	movs	r3, #14
 80071a8:	5ec9      	ldrsh	r1, [r1, r3]
 80071aa:	f000 f815 	bl	80071d8 <_close_r>
 80071ae:	bd10      	pop	{r4, pc}

080071b0 <_write_r>:
 80071b0:	b570      	push	{r4, r5, r6, lr}
 80071b2:	0004      	movs	r4, r0
 80071b4:	0008      	movs	r0, r1
 80071b6:	0011      	movs	r1, r2
 80071b8:	001a      	movs	r2, r3
 80071ba:	2300      	movs	r3, #0
 80071bc:	4d05      	ldr	r5, [pc, #20]	; (80071d4 <_write_r+0x24>)
 80071be:	602b      	str	r3, [r5, #0]
 80071c0:	f7fb f850 	bl	8002264 <_write>
 80071c4:	1c43      	adds	r3, r0, #1
 80071c6:	d103      	bne.n	80071d0 <_write_r+0x20>
 80071c8:	682b      	ldr	r3, [r5, #0]
 80071ca:	2b00      	cmp	r3, #0
 80071cc:	d000      	beq.n	80071d0 <_write_r+0x20>
 80071ce:	6023      	str	r3, [r4, #0]
 80071d0:	bd70      	pop	{r4, r5, r6, pc}
 80071d2:	46c0      	nop			; (mov r8, r8)
 80071d4:	2000039c 	.word	0x2000039c

080071d8 <_close_r>:
 80071d8:	2300      	movs	r3, #0
 80071da:	b570      	push	{r4, r5, r6, lr}
 80071dc:	4d06      	ldr	r5, [pc, #24]	; (80071f8 <_close_r+0x20>)
 80071de:	0004      	movs	r4, r0
 80071e0:	0008      	movs	r0, r1
 80071e2:	602b      	str	r3, [r5, #0]
 80071e4:	f7fb f85a 	bl	800229c <_close>
 80071e8:	1c43      	adds	r3, r0, #1
 80071ea:	d103      	bne.n	80071f4 <_close_r+0x1c>
 80071ec:	682b      	ldr	r3, [r5, #0]
 80071ee:	2b00      	cmp	r3, #0
 80071f0:	d000      	beq.n	80071f4 <_close_r+0x1c>
 80071f2:	6023      	str	r3, [r4, #0]
 80071f4:	bd70      	pop	{r4, r5, r6, pc}
 80071f6:	46c0      	nop			; (mov r8, r8)
 80071f8:	2000039c 	.word	0x2000039c

080071fc <_fstat_r>:
 80071fc:	2300      	movs	r3, #0
 80071fe:	b570      	push	{r4, r5, r6, lr}
 8007200:	4d06      	ldr	r5, [pc, #24]	; (800721c <_fstat_r+0x20>)
 8007202:	0004      	movs	r4, r0
 8007204:	0008      	movs	r0, r1
 8007206:	0011      	movs	r1, r2
 8007208:	602b      	str	r3, [r5, #0]
 800720a:	f7fb f851 	bl	80022b0 <_fstat>
 800720e:	1c43      	adds	r3, r0, #1
 8007210:	d103      	bne.n	800721a <_fstat_r+0x1e>
 8007212:	682b      	ldr	r3, [r5, #0]
 8007214:	2b00      	cmp	r3, #0
 8007216:	d000      	beq.n	800721a <_fstat_r+0x1e>
 8007218:	6023      	str	r3, [r4, #0]
 800721a:	bd70      	pop	{r4, r5, r6, pc}
 800721c:	2000039c 	.word	0x2000039c

08007220 <_isatty_r>:
 8007220:	2300      	movs	r3, #0
 8007222:	b570      	push	{r4, r5, r6, lr}
 8007224:	4d06      	ldr	r5, [pc, #24]	; (8007240 <_isatty_r+0x20>)
 8007226:	0004      	movs	r4, r0
 8007228:	0008      	movs	r0, r1
 800722a:	602b      	str	r3, [r5, #0]
 800722c:	f7fb f84e 	bl	80022cc <_isatty>
 8007230:	1c43      	adds	r3, r0, #1
 8007232:	d103      	bne.n	800723c <_isatty_r+0x1c>
 8007234:	682b      	ldr	r3, [r5, #0]
 8007236:	2b00      	cmp	r3, #0
 8007238:	d000      	beq.n	800723c <_isatty_r+0x1c>
 800723a:	6023      	str	r3, [r4, #0]
 800723c:	bd70      	pop	{r4, r5, r6, pc}
 800723e:	46c0      	nop			; (mov r8, r8)
 8007240:	2000039c 	.word	0x2000039c

08007244 <_lseek_r>:
 8007244:	b570      	push	{r4, r5, r6, lr}
 8007246:	0004      	movs	r4, r0
 8007248:	0008      	movs	r0, r1
 800724a:	0011      	movs	r1, r2
 800724c:	001a      	movs	r2, r3
 800724e:	2300      	movs	r3, #0
 8007250:	4d05      	ldr	r5, [pc, #20]	; (8007268 <_lseek_r+0x24>)
 8007252:	602b      	str	r3, [r5, #0]
 8007254:	f7fb f843 	bl	80022de <_lseek>
 8007258:	1c43      	adds	r3, r0, #1
 800725a:	d103      	bne.n	8007264 <_lseek_r+0x20>
 800725c:	682b      	ldr	r3, [r5, #0]
 800725e:	2b00      	cmp	r3, #0
 8007260:	d000      	beq.n	8007264 <_lseek_r+0x20>
 8007262:	6023      	str	r3, [r4, #0]
 8007264:	bd70      	pop	{r4, r5, r6, pc}
 8007266:	46c0      	nop			; (mov r8, r8)
 8007268:	2000039c 	.word	0x2000039c

0800726c <_read_r>:
 800726c:	b570      	push	{r4, r5, r6, lr}
 800726e:	0004      	movs	r4, r0
 8007270:	0008      	movs	r0, r1
 8007272:	0011      	movs	r1, r2
 8007274:	001a      	movs	r2, r3
 8007276:	2300      	movs	r3, #0
 8007278:	4d05      	ldr	r5, [pc, #20]	; (8007290 <_read_r+0x24>)
 800727a:	602b      	str	r3, [r5, #0]
 800727c:	f7fa ffd5 	bl	800222a <_read>
 8007280:	1c43      	adds	r3, r0, #1
 8007282:	d103      	bne.n	800728c <_read_r+0x20>
 8007284:	682b      	ldr	r3, [r5, #0]
 8007286:	2b00      	cmp	r3, #0
 8007288:	d000      	beq.n	800728c <_read_r+0x20>
 800728a:	6023      	str	r3, [r4, #0]
 800728c:	bd70      	pop	{r4, r5, r6, pc}
 800728e:	46c0      	nop			; (mov r8, r8)
 8007290:	2000039c 	.word	0x2000039c

08007294 <_init>:
 8007294:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007296:	46c0      	nop			; (mov r8, r8)
 8007298:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800729a:	bc08      	pop	{r3}
 800729c:	469e      	mov	lr, r3
 800729e:	4770      	bx	lr

080072a0 <_fini>:
 80072a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80072a2:	46c0      	nop			; (mov r8, r8)
 80072a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80072a6:	bc08      	pop	{r3}
 80072a8:	469e      	mov	lr, r3
 80072aa:	4770      	bx	lr
